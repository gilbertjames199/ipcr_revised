{"version":3,"file":"js/2892.js","mappings":"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","sources":["webpack:///./resources/js/Pages/Semestral_Accomplishment/Approve.vue?ab80","webpack:///./resources/js/Shared/Filter.vue?a4f9","webpack:///./resources/js/Shared/PrintModal.vue?8db7","webpack:///./resources/js/Pages/Semestral_Accomplishment/Approve.vue","webpack:///./resources/js/Pages/Semestral_Accomplishment/Approve.vue?6036","webpack:///./resources/js/Pages/Semestral_Accomplishment/Approve.vue?aed5","webpack:///./resources/js/Shared/Filter.vue","webpack:///./resources/js/Shared/Filter.vue?7d64","webpack:///./resources/js/Shared/Filter.vue?d639","webpack:///./resources/js/Shared/Pagination.vue","webpack:///./resources/js/Shared/Pagination.vue?ddc2","webpack:///./resources/js/Shared/PrintModal.vue","webpack:///./resources/js/Shared/PrintModal.vue?c606","webpack:///./resources/js/Shared/PrintModal.vue?4030"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".row-centered{text-align:center}.col-centered{display:inline-block;float:none;margin-right:-4px;text-align:left}.pos{position:top;top:240px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Semestral_Accomplishment/Approve.vue\"],\"names\":[],\"mappings\":\"AAmsCA,cACI,iBACJ,CAEA,cACI,oBAAqB,CACrB,UAAW,CAEX,iBAAkB,CADlB,eAEJ,CAEA,KACI,YAAa,CACb,SACJ\",\"sourcesContent\":[\"<template>\\r\\n\\r\\n    <Head>\\r\\n        <title>Home</title>\\r\\n    </Head>\\r\\n\\r\\n    <!--<p style=\\\"text-align: justify;\\\">Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos, qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit amet consectetur.\\r\\n    </p>-->\\r\\n    <div class=\\\"row gap-20 masonry pos-r\\\">\\r\\n        <div class=\\\"peers fxw-nw jc-sb ai-c\\\">\\r\\n            <!--SEMESTRAL***************************************************************************************-->\\r\\n            <h3>Review/Approve Semestral Accomplishment</h3>\\r\\n            <div class=\\\"peers\\\">\\r\\n                <div class=\\\"peer mR-10\\\">\\r\\n                    <input v-model=\\\"search\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Search...\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"masonry-sizer col-md-6\\\"></div>\\r\\n        <div class=\\\"masonry-item w-100\\\">\\r\\n            <div class=\\\"row gap-20\\\"></div>\\r\\n            <div class=\\\"bgc-white p-20 bd\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-sm table-borderless table-striped table-hover\\\">\\r\\n                        <thead>\\r\\n                            <tr class=\\\"bg-secondary text-white\\\">\\r\\n                                <th></th>\\r\\n                                <th>Name</th>\\r\\n                                <th>Period</th>\\r\\n                                <th>Status</th>\\r\\n                                <th>Actions</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr v-for=\\\"accomp in accomplishments.data\\\">\\r\\n                                <td><!--{{ accomp }} - {{ accomp }}--> </td>\\r\\n                                <td>{{ accomp.employee_name }} </td>\\r\\n                                <td>\\r\\n                                    {{ getPeriod(accomp.sem, accomp.year) }}\\r\\n                                </td>\\r\\n                                <!-- {{ getStatus(accomp.employment_type_descr) }}  -->\\r\\n                                <!-- <td>{{ accomp.employment_type_descr }}\\r\\n                                    -- sem: {{ accomp.sem }}</td> -->\\r\\n                                <td>{{ getStatus(accomp.a_status.toString()) }} </td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"dropdown dropstart\\\">\\r\\n                                        <button class=\\\"btn btn-secondary btn-sm action-btn\\\" type=\\\"button\\\"\\r\\n                                            id=\\\"dropdownMenuButton1\\\" data-bs-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n                                            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\"\\r\\n                                                fill=\\\"currentColor\\\" class=\\\"bi bi-three-dots\\\" viewBox=\\\"0 0 16 16\\\">\\r\\n                                                <path\\r\\n                                                    d=\\\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\\\" />\\r\\n                                            </svg>\\r\\n                                        </button>\\r\\n                                        <ul class=\\\"dropdown-menu action-dropdown\\\" aria-labelledby=\\\"dropdownMenuButton1\\\">\\r\\n                                            <li v-if=\\\"accomp.sem === '1' || accomp.sem === '2'\\\">\\r\\n                                                <button class=\\\"dropdown-item\\\"\\r\\n                                                    @click=\\\"showModals(accomp.id, accomp.empl_id, accomp.a_status, accomp.imm_id, accomp.next_higher_id)\\\">\\r\\n                                                    View Submission\\r\\n                                                </button>\\r\\n                                            </li>\\r\\n                                            <li v-else>\\r\\n                                                <button class=\\\"dropdown-item\\\"\\r\\n                                                    @click=\\\"showModal2(accomp.empl_id, accomp.employee_name, accomp.year, accomp.sem, accomp.status)\\\">\\r\\n                                                    View Submission 2\\r\\n                                                </button>\\r\\n                                            </li>\\r\\n                                            <li>\\r\\n                                                <button class=\\\"dropdown-item\\\"\\r\\n                                                    @click=\\\"viewDailyAccomplishments(accomp.empl_id, accomp.sem, accomp.year)\\\">\\r\\n                                                    View Daily Accomplishments\\r\\n                                                </button>\\r\\n                                            </li>\\r\\n                                        </ul>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- <pagination :next=\\\"data.next_page_url\\\" :prev=\\\"data.prev_page_url\\\" /> -->\\r\\n        <pagination :next=\\\"accomplishments.next_page_url\\\" :prev=\\\"accomplishments.prev_page_url\\\" />\\r\\n\\r\\n        <Modal v-if=\\\"displayModal\\\" @close-modal-event=\\\"hideModal\\\">\\r\\n            <div class=\\\"justify-content-center\\\">\\r\\n                <div style=\\\"text-align: center\\\">\\r\\n                    <h4>IPCR Accomplishment Modal</h4>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div><b>Employee Name: </b><u>{{ emp_name }}</u></div>\\r\\n                <div>\\r\\n                    <b>Semester/Period: </b>\\r\\n                    <u>\\r\\n                        <span v-if=\\\"emp_sem === '1'\\\">First Semester -January to June, </span>\\r\\n                        <span v-if=\\\"emp_sem === '2'\\\">Second Semester -July to December, </span>\\r\\n                        {{ emp_year }}\\r\\n                        <!-- {{ emp_status }} -->\\r\\n                    </u>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <b>Status: </b>\\r\\n                    <u>\\r\\n                        <span v-if=\\\"emp_status.toString() === '0'\\\">Submitted</span>\\r\\n                        <span v-if=\\\"emp_status.toString() === '1'\\\">Reviewed</span>\\r\\n                    </u>\\r\\n                </div>\\r\\n                <div class=\\\"masonry-item w-100\\\">\\r\\n                    <div class=\\\"bgc-white p-20 bd\\\">\\r\\n                        <!-- {{ report_link }} -->\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n                            <iframe :src=\\\"report_link\\\" style=\\\"width:100%; height:450px\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <b>Remarks:</b>\\r\\n                    <input type=\\\"text\\\" v-model=\\\"form.remarks\\\" class=\\\"form-control\\\" autocomplete=\\\"chrome-off\\\"><br>\\r\\n                </div>\\r\\n                <div style=\\\"align: center\\\">\\r\\n                    <!-- imm_id_loc\\r\\n                    nxt_id_loc -->\\r\\n                    <!-- {{ imm_id_loc }} - {{ nxt_id_loc }} -->\\r\\n                    <span v-if=\\\"imm_id_loc === nxt_id_loc\\\">\\r\\n                        <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('2')\\\">\\r\\n                            Approve\\r\\n                        </button>&nbsp;\\r\\n                    </span>\\r\\n                    <span v-else>\\r\\n                        <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('1')\\\"\\r\\n                            v-if=\\\"emp_status.toString() === '0'\\\">\\r\\n                            Review\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('2')\\\"\\r\\n                            v-if=\\\"emp_status.toString() === '1'\\\">\\r\\n                            Approve\\r\\n                        </button>&nbsp;\\r\\n                        <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('3')\\\"\\r\\n                            v-if=\\\"emp_status.toString() === '2'\\\">\\r\\n                            Final Approve\\r\\n                        </button>&nbsp;\\r\\n                    </span>\\r\\n\\r\\n\\r\\n                    <button style=\\\"float: right\\\" class=\\\"btn btn-danger text-white\\\" @click=\\\"submitAction('-2')\\\">\\r\\n                        Return\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </Modal>\\r\\n        <Modal2 v-if=\\\"displayModal2\\\" @close-modal-event=\\\"hideModal2\\\">\\r\\n            <div class=\\\"justify-content-center\\\">\\r\\n                <div style=\\\"text-align: center\\\">\\r\\n                    <h4>IPCR Targets Modal2</h4>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div><b>Employee Name: </b><u>{{ emp_name }}</u></div>\\r\\n                <!-- lendsgth: {{ length }}\\r\\n                ipcr_targets: {{ ipcr_targets[0].quantity }} -->\\r\\n                <!-- quantityArray : {{ quantityArray() }} -->\\r\\n                <div class=\\\"masonry-item w-100\\\">\\r\\n                    <div class=\\\"bgc-white p-20 bd\\\">\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n                            <div v-if=\\\"ipcr_targets && ipcr_targets.length > 0\\\">\\r\\n                                <table class=\\\"table table-hover table-bordered border-dark\\\">\\r\\n                                    <!-- v-if=\\\"ipcr_targets[0].quantity\\\" -->\\r\\n                                    <tr class=\\\"text-dark\\\" style=\\\"background-color: #B7DEE8;\\\">\\r\\n                                        <th>IPCR Code</th>\\r\\n                                        <th>Individual Final Output\\r\\n                                            {{ ipcr_targets[0].quantity }}\\r\\n                                        </th>\\r\\n\\r\\n                                        <th v-for=\\\"(item, index) in parseQuantity(ipcr_targets[0].quantity)\\\"\\r\\n                                            :key=\\\"index\\\">\\r\\n                                            Month {{ index + 1 }}\\r\\n                                        </th>\\r\\n                                    </tr>\\r\\n                                    <tr class=\\\"bg-secondary text-white\\\">\\r\\n                                        <td>{{ }}</td>\\r\\n                                        <td :colspan=\\\"9 + parseFloat(parseQuantity(ipcr_targets[0].quantity).length)\\\">\\r\\n                                            <b>Core Function</b>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr v-for=\\\"target in ipcr_targets\\\">\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Core Function'\\\"\\r\\n                                            style=\\\"text-align: center; background-color: #edd29d\\\">{{ target.ipcr_code }}\\r\\n                                        </td>\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Core Function'\\\">{{ target.individual_output }}\\r\\n                                        </td>\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Core Function'\\\"\\r\\n                                            v-for=\\\"(quant, index) in parseQuantity(target.quantity)\\\" :key=\\\"index\\\">{{\\r\\n                        quant\\r\\n                    }}</td>\\r\\n                                    </tr>\\r\\n                                    <tr class=\\\"bg-secondary text-white\\\">\\r\\n                                        <td>{{ }}</td>\\r\\n                                        <td :colspan=\\\"9 + parseFloat(parseQuantity(ipcr_targets[0].quantity).length)\\\">\\r\\n                                            <b>Support Function</b>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr v-for=\\\"target in ipcr_targets\\\">\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Support Function'\\\"\\r\\n                                            style=\\\"text-align: center; background-color: #edd29d\\\">{{ target.ipcr_code }}\\r\\n                                        </td>\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Support Function'\\\">{{ target.individual_output }}\\r\\n                                        </td>\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Support Function'\\\"\\r\\n                                            v-for=\\\"(quant, index) in parseQuantity(target.quantity)\\\" :key=\\\"index\\\">{{\\r\\n                        quant\\r\\n                    }}</td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div style=\\\"align: center\\\">\\r\\n                            <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitActionProb('1')\\\"\\r\\n                                v-if=\\\"emp_status === '0'\\\">\\r\\n                                Review\\r\\n                            </button>\\r\\n                            <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitActionProb('2')\\\"\\r\\n                                v-if=\\\"emp_status === '1'\\\">\\r\\n                                Approve\\r\\n                            </button>&nbsp;\\r\\n                            <button class=\\\"btn btn-danger text-white\\\" @click=\\\"showModal3()\\\">\\r\\n                                Return\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </Modal2>\\r\\n        <Modal3 v-if=\\\"displayModal3\\\" @close-modal-event=\\\"hideModal3\\\">\\r\\n            <h3>Remarks Modal3</h3>\\r\\n            <h5>State the reason for not reviewing/approving IPCR</h5>\\r\\n            <input type=\\\"text\\\" v-model=\\\"form.remarks\\\" class=\\\"form-control\\\" autocomplete=\\\"chrome-off\\\"><br>\\r\\n            <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitReturnReason()\\\">\\r\\n                Done\\r\\n            </button>&nbsp;\\r\\n            <button class=\\\"btn btn-danger text-white\\\" @click=\\\"cancelReason()\\\">\\r\\n                Cancel\\r\\n            </button>\\r\\n        </Modal3>\\r\\n        <ModalDaily v-if=\\\"displayModalDaily\\\" @close-modal-event=\\\"hideModalDaily\\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <iframe :src=\\\"my_link\\\" style=\\\"width:100%; height:450px\\\" />\\r\\n            </div>\\r\\n        </ModalDaily>\\r\\n        <Modal4 v-if=\\\"displayModal4\\\" @close-modal-event=\\\"hideModal4\\\">\\r\\n            <div class=\\\"justify-content-center\\\">\\r\\n                <div style=\\\"text-align: center\\\">\\r\\n                    <h4>IPCR Accomplishment</h4>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div>\\r\\n                    <div><b>Employee Name: </b><u>{{ ipcr_accomplishments_review.sem.user_employee.first_name + \\\" \\\" +\\r\\n                        ipcr_accomplishments_review.sem.user_employee.last_name }}</u>\\r\\n                    </div>\\r\\n                    <div><b>Position: </b><u>{{ ipcr_accomplishments_review.sem.user_employee.position_title1 }}</u>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <b>Semester/Period: </b>\\r\\n                    <u>\\r\\n                        {{ sem(ipcr_accomplishments_review.sem.sem) }}\\r\\n                    </u>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <b>Status: <u>{{ Status(ipcr_accomplishments_review.sem_data.status_accomplishment) }}</u></b>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"masonry-item w-100\\\">\\r\\n                    <div class=\\\"bgc-white p-20 bd\\\">\\r\\n\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <table class=\\\"table table-hover table-bordered border-dark\\\">\\r\\n                                <thead>\\r\\n                                    <tr style=\\\"background-color: #B7DEE8;\\\" class=\\\"text-center table-bordered\\\">\\r\\n                                        <th style=\\\"width: 5%;\\\" rowspan=\\\"2\\\" colspan=\\\"1\\\">IPCR Code</th>\\r\\n                                        <th style=\\\"width: 15%;\\\" rowspan=\\\"2\\\" colspan=\\\"1\\\">Major Final Output</th>\\r\\n                                        <th style=\\\"width: 30%;\\\" rowspan=\\\"2\\\" colspan=\\\"1\\\">Success Indicator</th>\\r\\n                                        <th style=\\\"width: 20%;\\\" colspan=\\\"4\\\">Rating</th>\\r\\n                                        <th style=\\\"width: 20%;\\\" rowspan=\\\"2\\\" colspan=\\\"1\\\">Remarks</th>\\r\\n                                    </tr>\\r\\n                                    <tr style=\\\"background-color: #B7DEE8;\\\" class=\\\"text-center\\\">\\r\\n                                        <th style=\\\"width: 5%;\\\">Quantity Rating</th>\\r\\n                                        <th style=\\\"width: 5%;\\\">Quality Rating</th>\\r\\n                                        <th style=\\\"width: 5%;\\\">Timeliness Rating</th>\\r\\n                                        <th style=\\\"width: 5%;\\\">Average</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"9\\\">\\r\\n                                            <b>CORE FUNCTION</b>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <template v-for=\\\"dat in ipcr_accomplishments_review.data\\\">\\r\\n                                        <tr v-if=\\\"dat.ipcr_type === 'Core Function'\\\" class=\\\"text-center\\\">\\r\\n                                            <td style=\\\"text-align: center; background-color: #edd29d\\\">{{ dat.ipcr_code\\r\\n                                                }}</td>\\r\\n                                            <td>{{ dat.mfo_desc }}</td>\\r\\n                                            <td>{{ dat.success_indicator }}</td>\\r\\n                                            <td>\\r\\n                                                {{ dat.result.length == 0 ? 0 : QuantityRate(dat.quantity_type,\\r\\n                        GetSumQuantity(dat.result), dat.quantity_sem)\\r\\n                                                }}\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                {{ dat.result.length == 0 ? 0 : QualityRating(dat.quality_error,\\r\\n                        QualityTypes(dat.quality_error,\\r\\n                            GetSumQuality(dat.result), CountMonth(dat.result))) }}\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                {{ TimeRatings(AveTime(TotalTime(dat.result),\\r\\n                        GetSumQuantity(dat.result)),\\r\\n                        dat.indi_output.time_ranges, dat.time_range_code) }}\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                {{ AverageRate(dat.result.length == 0 ? 0 :\\r\\n                        QuantityRate(dat.quantity_type, GetSumQuantity(dat.result),\\r\\n                            dat.quantity_sem),\\r\\n                        dat.result.length == 0 ? 0 : QualityRating(dat.quality_error,\\r\\n                            QualityTypes(dat.quality_error,\\r\\n                                GetSumQuality(dat.result), CountMonth(dat.result))),\\r\\n                        TimeRatings(AveTime(TotalTime(dat.result),\\r\\n                            GetSumQuantity(dat.result)),\\r\\n                            dat.indi_output.time_ranges, dat.time_range_code)) }}\\r\\n                                            </td>\\r\\n                                            <td>{{ dat.remarks }}</td>\\r\\n                                        </tr>\\r\\n                                    </template>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"7\\\">\\r\\n                                            <b style=\\\"float:right\\\">Average Point Score - Core Function</b>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            {{ calculateAverageCore() }}\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"7\\\">\\r\\n                                            <b style=\\\"float:right\\\">Multiply by Weighted Allocation</b>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            70%\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"7\\\">\\r\\n                                            <b style=\\\"float:right\\\">Weighted Average Score - Core Function</b>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            {{ (Average_Point_Core * .70).toFixed(2) }}\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n\\r\\n\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"9\\\">\\r\\n                                            <b>SUPPORT FUNCTION</b>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <template v-for=\\\"dat in ipcr_accomplishments_review.data\\\">\\r\\n                                        <tr v-if=\\\"dat.ipcr_type === 'Support Function'\\\" class=\\\"text-center\\\">\\r\\n                                            <td style=\\\"text-align: center; background-color: #edd29d\\\">{{ dat.ipcr_code\\r\\n                                                }}</td>\\r\\n                                            <td>{{ dat.mfo_desc }}</td>\\r\\n                                            <td>{{ dat.success_indicator }}</td>\\r\\n                                            <td>\\r\\n                                                {{ dat.result.length == 0 ? 0 : QuantityRate(dat.quantity_type,\\r\\n                        GetSumQuantity(dat.result), dat.quantity_sem) }}\\r\\n\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                {{ dat.result.length == 0 ? 0 : QualityRating(dat.quality_error,\\r\\n                        QualityTypes(dat.quality_error,\\r\\n                            GetSumQuality(dat.result), CountMonth(dat.result))) }}\\r\\n                                            </td>\\r\\n                                            <td>{{ TimeRatings(AveTime(TotalTime(dat.result),\\r\\n                        GetSumQuantity(dat.result)),\\r\\n                        dat.indi_output.time_ranges, dat.time_range_code) }}\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                {{ AverageRate(dat.result.length == 0 ? 0 :\\r\\n                        QuantityRate(dat.quantity_type,\\r\\n                            GetSumQuantity(dat.result),\\r\\n                            dat.quantity_sem), dat.result.length == 0 ? 0 :\\r\\n                        QualityRating(dat.quality_error,\\r\\n                            QualityTypes(dat.quality_error,\\r\\n                                GetSumQuality(dat.result), CountMonth(dat.result))),\\r\\n                        TimeRatings(AveTime(TotalTime(dat.result), GetSumQuantity(dat.result)),\\r\\n                            dat.indi_output.time_ranges, dat.time_range_code)) }}\\r\\n                                            </td>\\r\\n\\r\\n                                            <td>{{ dat.remarks }}</td>\\r\\n\\r\\n                                        </tr>\\r\\n                                    </template>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"7\\\">\\r\\n                                            <b style=\\\"float:right\\\">Average Point Score - Support Function</b>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            {{ calculateAverageSupport() }}\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"7\\\">\\r\\n                                            <b style=\\\"float:right\\\">Multiply by Weighted Allocation</b>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            30%\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"7\\\">\\r\\n                                            <b style=\\\"float:right\\\">Weighted Average Score - Support Function</b>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            {{ (Average_Point_Support * .30).toFixed(2) }}\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"7\\\">\\r\\n                                            <b style=\\\"float:right\\\">Total Average Score</b>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            {{ ((Average_Point_Core * 0.70) + (Average_Point_Support * 0.30)).toFixed(2)\\r\\n                                            }}\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"7\\\">\\r\\n                                            <b style=\\\"float:right\\\">Additional Point Intervening Factor - if applicable -\\r\\n                                                Maximum: 0.5 pts</b>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"7\\\">\\r\\n                                            <b style=\\\"float:right\\\">Total Final Average Rating</b>\\r\\n                                        </td>\\r\\n                                        <td style=\\\"background-color: yellow\\\">\\r\\n                                            <b>{{ ((Average_Point_Core * 0.70) + (Average_Point_Support *\\r\\n                                                0.30)).toFixed(2)\\r\\n                                                }}</b>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"7\\\">\\r\\n                                            <b style=\\\"float:right\\\">Final Adjectival Rating</b>\\r\\n                                        </td>\\r\\n                                        <td style=\\\"background-color: yellow\\\">\\r\\n                                            <b>{{ getAdjectivalRating(((Average_Point_Core * 0.70) +\\r\\n                                                (Average_Point_Support *\\r\\n                                                0.30)).toFixed(2)) }}</b>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"8\\\">\\r\\n                                            <b>Supervisor's comments and recommendations for development purposes or\\r\\n                                                Rewards/Promotion</b>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"8\\\">\\r\\n                                            {{ ipcr_accomplishments_review.sem.latest_return_remark.remarks }}\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <b>Remarks:</b>\\r\\n                            <input type=\\\"text\\\" v-model=\\\"form.remarks\\\" class=\\\"form-control\\\"\\r\\n                                autocomplete=\\\"chrome-off\\\"><br>\\r\\n                        </div>\\r\\n                        <!-- {{ imm_id_loc }} &nbsp; {{ nxt_id_loc }} -->\\r\\n                        <div style=\\\"align: center\\\">\\r\\n                            <span v-if=\\\"imm_id_loc === nxt_id_loc\\\">\\r\\n                                <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('2')\\\">\\r\\n                                    Approve\\r\\n                                </button>&nbsp;\\r\\n                            </span>\\r\\n                            <span v-else>\\r\\n\\r\\n                                <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('1')\\\"\\r\\n                                    v-if=\\\"emp_status.toString() === '0'\\\">\\r\\n                                    Review\\r\\n                                </button>\\r\\n                                <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('2')\\\"\\r\\n                                    v-if=\\\"emp_status.toString() === '1'\\\">\\r\\n                                    Approve\\r\\n                                </button>&nbsp;\\r\\n                                <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('3')\\\"\\r\\n                                    v-if=\\\"emp_status.toString() === '2'\\\">\\r\\n                                    Final Approve\\r\\n                                </button>&nbsp;\\r\\n                            </span>\\r\\n                            <button style=\\\"float: right;\\\" class=\\\"btn btn-danger text-white\\\"\\r\\n                                @click=\\\"submitAction('-2', ipcr_accomplishments_review.sem_data.id.toString())\\\">\\r\\n                                Return\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </Modal4>\\r\\n    </div>\\r\\n</template>\\r\\n<script>\\r\\nimport { useForm } from \\\"@inertiajs/inertia-vue3\\\";\\r\\nimport Filtering from \\\"@/Shared/Filter\\\";\\r\\nimport Pagination from \\\"@/Shared/Pagination\\\";\\r\\nimport Modal from \\\"@/Shared/PrintModal\\\";\\r\\nimport Modal2 from \\\"@/Shared/PrintModal\\\";\\r\\nimport Modal3 from \\\"@/Shared/PrintModal\\\";\\r\\nimport Modal4 from \\\"@/Shared/PrintModal\\\";\\r\\nimport ModalDaily from \\\"@/Shared/PrintModal\\\";\\r\\nimport { Inertia } from '@inertiajs/inertia';\\r\\n\\r\\nexport default {\\r\\n    props: {\\r\\n        accomplishments: Object,\\r\\n        pghead: Object,\\r\\n        filters: Object,\\r\\n\\r\\n    },\\r\\n    computed: {\\r\\n        quantityArray() {\\r\\n            const allArrays = this.ipcr_targets.map(target => JSON.parse(target.quantity));\\r\\n            const mergedArray = [].concat(...allArrays);\\r\\n            var quant = JSON.parse(this.ipcr_targets[0].quantity)\\r\\n            return mergedArray\\r\\n        },\\r\\n    },\\r\\n    data() {\\r\\n        return {\\r\\n            report_link: \\\"\\\",\\r\\n            my_link: \\\"\\\",\\r\\n            displayModal: false,\\r\\n            modal_title: \\\"Add\\\",\\r\\n            ipcr_targets: [],\\r\\n            ipcr_accomplishments: [],\\r\\n            ipcr_accomplishments_review: [],\\r\\n            core_support: [],\\r\\n            emp_sem_id: \\\"\\\",\\r\\n            emp_name: \\\"\\\",\\r\\n            emp_year: \\\"\\\",\\r\\n            emp_sem: \\\"\\\",\\r\\n            emp_status: \\\"\\\",\\r\\n            empl_id: \\\"\\\",\\r\\n            imm_id_loc: \\\"\\\",\\r\\n            nxt_id_loc: \\\"\\\",\\r\\n            Average_Point_Core: 0,\\r\\n            Average_Point_Support: 0,\\r\\n            displayModal2: false,\\r\\n            displayModal3: false,\\r\\n            displayModal4: false,\\r\\n            displayModalDaily: false,\\r\\n            length: 0,\\r\\n            id_accomp_selected: \\\"\\\",\\r\\n            pg_head: \\\"\\\",\\r\\n            form: useForm({\\r\\n                type: \\\"\\\",\\r\\n                remarks: \\\"\\\",\\r\\n                ipcr_semestral_id: \\\"\\\",\\r\\n                employee_code: \\\"\\\",\\r\\n                ipcr_monthly_accomplishment_id: \\\"\\\",\\r\\n            }),\\r\\n            search: this.$props.filters.search,\\r\\n        }\\r\\n    },\\r\\n    watch: {\\r\\n        search: _.debounce(function (value) {\\r\\n            this.$inertia.get(\\r\\n                \\\"/approve/semestral-accomplishments\\\",\\r\\n                { search: value },\\r\\n                {\\r\\n                    preserveScroll: true,\\r\\n                    preserveState: true,\\r\\n                    replace: true,\\r\\n                }\\r\\n            );\\r\\n        }, 300),\\r\\n    },\\r\\n    components: {\\r\\n        Pagination, Filtering, Modal, Modal2, Modal3, Modal4, ModalDaily\\r\\n    },\\r\\n    mounted() {\\r\\n        this.calculateAverageSupport()\\r\\n        this.calculateAverageCore()\\r\\n    },\\r\\n    methods: {\\r\\n        sem(sem) {\\r\\n            var result = \\\"\\\"\\r\\n            if (sem == \\\"1\\\") {\\r\\n                result = \\\"January to June\\\"\\r\\n            } else if (sem == 2) {\\r\\n                result = \\\"July to December\\\"\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        Status(status) {\\r\\n            var result = \\\"\\\"\\r\\n            if (status == \\\"0\\\") {\\r\\n                result = \\\"Submitted\\\"\\r\\n            } else if (status == 1) {\\r\\n                result = \\\"Reviewed\\\"\\r\\n            } else if (status == 2) {\\r\\n                result = \\\"Approved\\\"\\r\\n            }\\r\\n\\r\\n            return result;\\r\\n        },\\r\\n        getAdjectivalRating(Score) {\\r\\n            var result = \\\"\\\"\\r\\n            if (Score >= 4.51 && Score <= 5.00) {\\r\\n                result = \\\"Outstanding\\\"\\r\\n            } else if (Score >= 3.51 && Score <= 4.50) {\\r\\n                result = \\\"Very Satisfactory\\\"\\r\\n            } else if (Score >= 2.51 && Score <= 3.50) {\\r\\n                result = \\\"Satisfactory\\\"\\r\\n            } else if (Score >= 1.51 && Score <= 2.50) {\\r\\n                result = \\\"Unsatisfactory\\\"\\r\\n            } else if (Score >= 1.00 && Score <= 1.50) {\\r\\n                result = \\\"Poor\\\"\\r\\n            }\\r\\n\\r\\n            return result;\\r\\n        },\\r\\n        QualityRate(id, total) {\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                if (total == 0) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (total >= .01 && total <= 2.99) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (total >= 3 && total <= 4.99) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (total >= 5 && total <= 6.99) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (total >= 7) {\\r\\n                    result = \\\"1\\\"\\r\\n                } else {\\r\\n                    result = \\\"0\\\"\\r\\n                }\\r\\n            } else if (id == 2) {\\r\\n                if (total == 5) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (total >= 4 && total <= 4.99) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (total >= 3 && total <= 3.99) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (total >= 2 && total <= 2.99) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (total >= 1 && total <= 1.99) {\\r\\n                    result = \\\"1\\\"\\r\\n                } else {\\r\\n                    result = \\\"0\\\"\\r\\n                }\\r\\n            } else if (id == 3) {\\r\\n                result = \\\"0\\\"\\r\\n            } else if (id == 4) {\\r\\n                if (total >= 1) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else {\\r\\n                    result = \\\"5\\\"\\r\\n                }\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        GetSumQuantity(Item) {\\r\\n            var result = _.sumBy(Item.slice(0, 6), (o) => {\\r\\n                return Number(o.quantity)\\r\\n            });\\r\\n            // console.log(result)\\r\\n            return result;\\r\\n        },\\r\\n\\r\\n        QualityRating(quality_type, quality_score) {\\r\\n            var result;\\r\\n            if (quality_type == 1) {\\r\\n                if (quality_score == 0) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (quality_score >= .01 && quality_score <= 2.99) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (quality_score >= 3 && quality_score <= 4.99) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (quality_score >= 5 && quality_score <= 6.99) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (quality_score >= 7) {\\r\\n                    result = \\\"1\\\"\\r\\n                } else {\\r\\n                    result = \\\"0\\\"\\r\\n                }\\r\\n            } else if (quality_type == 2) {\\r\\n                if (quality_score == 5) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (quality_score >= 4 && quality_score <= 4.99) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (quality_score >= 3 && quality_score <= 3.99) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (quality_score >= 2 && quality_score <= 2.99) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (quality_score >= 1 && quality_score <= 1.99) {\\r\\n                    result = \\\"1\\\"\\r\\n                } else {\\r\\n                    result = \\\"0\\\"\\r\\n                }\\r\\n            } else if (quality_type == 3) {\\r\\n                result = \\\"0\\\"\\r\\n            } else if (quality_type == 4) {\\r\\n                if (quality_score >= 1) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else {\\r\\n                    result = \\\"5\\\"\\r\\n                }\\r\\n            }\\r\\n\\r\\n            return result;\\r\\n        },\\r\\n        QualityTypes(quality_type, score, length) {\\r\\n            var result;\\r\\n            if (quality_type == 1) {\\r\\n                result = score;\\r\\n\\r\\n                if (score == 0) {\\r\\n                    result = 0;\\r\\n                } else if (score >= 0.01 && score <= 1) {\\r\\n                    result = 1;\\r\\n                } else if (score >= 1.01 && score <= 2) {\\r\\n                    result = 2;\\r\\n                } else if (score >= 2.01 && score <= 3) {\\r\\n                    result = 3;\\r\\n                } else if (score >= 3.01 && score <= 4) {\\r\\n                    result = 4;\\r\\n                } else if (score >= 4.01 && score <= 5) {\\r\\n                    result = 5;\\r\\n                } else if (score >= 5.01 && score <= 6) {\\r\\n                    result = 6;\\r\\n                } else if (score >= 6.01 && score <= 7) {\\r\\n                    result = 7;\\r\\n                }\\r\\n                return result;\\r\\n            } else if (quality_type == 2) {\\r\\n                if (length == 0) {\\r\\n                    result = 0;\\r\\n                } else {\\r\\n                    result = Math.round(score / length);\\r\\n                }\\r\\n            } else if (quality_type == 3) {\\r\\n                result = score;\\r\\n            } else if (quality_type == 4) {\\r\\n                result = score;\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        GetSumQuality(Item) {\\r\\n            var result = _.sumBy(Item, (o) => {\\r\\n                return Number(o.average_quality)\\r\\n            });\\r\\n\\r\\n            return result;\\r\\n        },\\r\\n        CountMonth(Item) {\\r\\n            var result = Item.length\\r\\n            return result;\\r\\n        },\\r\\n        TimeRatings(Ave_Time, Range, Time_Code) {\\r\\n            // alert(Range);\\r\\n            var result;\\r\\n            var EQ;\\r\\n\\r\\n            if (Time_Code == 56) {\\r\\n                result = \\\" \\\";\\r\\n            } else {\\r\\n                try {\\r\\n\\r\\n                    Range.map(Item => {\\r\\n                        if (Ave_Time <= Item.equivalent_time_from && Item.rating == 5) {\\r\\n                            result = 5;\\r\\n                            EQ = Item.equivalent_time_from;\\r\\n                        } else if (Ave_Time >= Item.equivalent_time_from && Ave_Time <= Item.equivalent_time_to && Item.rating == 4) {\\r\\n                            result = 4;\\r\\n                            EQ = Item.equivalent_time_from;\\r\\n                        } else if (Ave_Time == Item.equivalent_time_from && Item.rating == 3) {\\r\\n                            result = 3;\\r\\n                            EQ = Item.equivalent_time_from;\\r\\n                        } else if (Ave_Time >= Item.equivalent_time_from && Ave_Time <= Item.equivalent_time_to && Item.rating == 2) {\\r\\n                            result = 2;\\r\\n                            EQ = Item.equivalent_time_from;\\r\\n                        } else if (Ave_Time >= Item.equivalent_time_from && Item.rating == 1) {\\r\\n                            result = 1;\\r\\n                            EQ = Item.equivalent_time_from;\\r\\n                        } else if (Ave_Time == 0) {\\r\\n                            result = 0;\\r\\n                        }\\r\\n                    })\\r\\n                } catch (error) {\\r\\n\\r\\n                }\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        TotalTime(Item) {\\r\\n            var result = _.sumBy(Item, obj => {\\r\\n                return obj.average_time ? obj.average_time * obj.quantity : 0;\\r\\n            })\\r\\n\\r\\n            return result;\\r\\n        },\\r\\n        AveTime(Time, TotalQuantity) {\\r\\n            var Time = Time\\r\\n            var TotalQuantity = TotalQuantity\\r\\n            var Result\\r\\n            if (Time == 0 && TotalQuantity == 0) {\\r\\n                Result = 0\\r\\n            } else {\\r\\n                Result = Math.round(Number(Time /\\r\\n                    TotalQuantity))\\r\\n            }\\r\\n            return Result;\\r\\n        },\\r\\n        AverageRate(QuantityRating, QualityRating, TimeRating) {\\r\\n            // alert(TimeRating)\\r\\n            if (TimeRating == \\\" \\\") {\\r\\n                TimeRating = 0;\\r\\n            }\\r\\n            if (TimeRating == \\\"\\\") {\\r\\n                TimeRating = 0;\\r\\n            }\\r\\n            if (isNaN(TimeRating)) {\\r\\n                TimeRating = 0;\\r\\n            }\\r\\n            var ratings = [parseFloat(QuantityRating), parseFloat(QualityRating), parseFloat(TimeRating)];\\r\\n\\r\\n            var NotZero = ratings.filter(rating => rating !== 0);\\r\\n\\r\\n            if (NotZero.length === 0) {\\r\\n                return 0; // or any default value when all ratings are zero\\r\\n            }\\r\\n\\r\\n            const average = NotZero.reduce((sum, rating) => sum + rating, 0) / NotZero.length;\\r\\n\\r\\n            return this.format_number_conv(average, 2, true)\\r\\n        },\\r\\n        calculateAverageCore() {\\r\\n            let sum = 0;\\r\\n            let num_of_data = 0;\\r\\n            let average = 0;\\r\\n\\r\\n            // console.log(result + \\\" sample\\\");\\r\\n            // setTimeout(() => {\\r\\n\\r\\n            //     console.log(this.ipcr_accomplishments_review.data, \\\"Test\\\")\\r\\n            // }, 2000);\\r\\n            if (Array.isArray(this.ipcr_accomplishments_review.data)) {\\r\\n                // console.log(this.ipcr_accomplishments_review.data)\\r\\n                this.ipcr_accomplishments_review.data.forEach(item => {\\r\\n                    if (item.ipcr_type === 'Core Function') {\\r\\n                        var val = this.AverageRate(item.result == 0 ? 0 : this.QuantityRate(item.quantity_type, this.GetSumQuantity(item.result),\\r\\n                            item.quantity_sem), item.result == 0 ? 0 : this.QualityRating(item.quality_error, this.QualityTypes(item.quality_error,\\r\\n                                this.GetSumQuality(item.result), this.CountMonth(item.result))),\\r\\n                            this.TimeRatings(this.AveTime(this.TotalTime(item.result), this.GetSumQuantity(item.result)), item.indi_output.time_ranges, item.time_range_code));\\r\\n                        // alert(val);\\r\\n                        // alert(this.TimeRatings(this.AveTime(this.TotalTime(item.result), this.GetSumQuantity(item.result)), item.TimeRange, item.time_range_code));\\r\\n                        if (val !== 0) {\\r\\n                            num_of_data += 1;\\r\\n                            sum += parseFloat(val);\\r\\n                            average = sum / num_of_data\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n                    // console.log(num_of_data);\\r\\n                    // console.log(average)\\r\\n                });\\r\\n            }\\r\\n\\r\\n            this.Average_Point_Core = average.toFixed(2);\\r\\n            return this.Average_Point_Core;\\r\\n            // alert(this.Average_Point_Core);\\r\\n        },\\r\\n        calculateAverageSupport() {\\r\\n            let sum = 0;\\r\\n            let num_of_data = 0;\\r\\n            let average = 0;\\r\\n            if (Array.isArray(this.ipcr_accomplishments_review.data)) {\\r\\n                this.ipcr_accomplishments_review.data.forEach(item => {\\r\\n                    if (item.ipcr_type === 'Support Function') {\\r\\n                        var val = this.AverageRate(item.result == 0 ? 0 : this.QuantityRate(item.quantity_type, this.GetSumQuantity(item.result),\\r\\n                            item.quantity_sem), item.result == 0 ? 0 : this.QualityRating(item.quality_error, this.QualityTypes(item.quality_error,\\r\\n                                this.GetSumQuality(item.result), this.CountMonth(item.result))),\\r\\n                            this.TimeRatings(this.AveTime(this.TotalTime(item.result), this.GetSumQuantity(item.result)), item.indi_output.time_ranges, item.time_range_code));\\r\\n                        // alert(val);\\r\\n\\r\\n                        if (val !== 0) {\\r\\n                            num_of_data += 1;\\r\\n                            sum += parseFloat(val);\\r\\n                            average = sum / num_of_data\\r\\n                        }\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n\\r\\n            this.Average_Point_Support = average.toFixed(2);\\r\\n            return this.Average_Point_Support;\\r\\n        },\\r\\n        showModals(e_sem_id, empl_id, a_status, immid, nxtid) {\\r\\n            this.emp_sem_id = e_sem_id;\\r\\n            this.emp_status = a_status;\\r\\n            this.imm_id_loc = immid;\\r\\n            this.nxt_id_loc = nxtid;\\r\\n            axios.get(\\\"/semester-accomplishment/get/semestralAccomplishment\\\", {\\r\\n                params: {\\r\\n                    sem_id: e_sem_id,\\r\\n                    empl_id: empl_id,\\r\\n                }\\r\\n            }).then((response) => {\\r\\n                this.ipcr_accomplishments_review = response.data\\r\\n                console.log(this.ipcr_accomplishments_review);\\r\\n            }).catch((error) => {\\r\\n                console.error(error);\\r\\n            });\\r\\n            this.hideModal2()\\r\\n            this.hideModal()\\r\\n            this.displayModal4 = true\\r\\n        },\\r\\n        hideModal4() {\\r\\n            this.displayModal4 = false\\r\\n        },\\r\\n        showModal1() {\\r\\n            this.displayModal = true;\\r\\n        },\\r\\n        hideModal() {\\r\\n            this.displayModal = false;\\r\\n        },\\r\\n        hideModal2() {\\r\\n            this.displayModal2 = false;\\r\\n        },\\r\\n        // async\\r\\n        submitAction(stat, sem_id) {\\r\\n            // alert(stat);\\r\\n            var acc = \\\"\\\";\\r\\n            if (stat < 0) {\\r\\n                acc = \\\"return\\\";\\r\\n            } else if (stat < 2) {\\r\\n                acc = \\\"review\\\";\\r\\n            } else if (stat < 3) {\\r\\n                acc = \\\"approve\\\";\\r\\n            } else {\\r\\n                acc = \\\"final approve\\\";\\r\\n            }\\r\\n            console.log(this.ipcr_accomplishments_review.sem)\\r\\n            let text = \\\"Are you sure you want to \\\" + acc + \\\" this accomplishment?\\\";\\r\\n            // alert(this.id_accomp_selected)\\r\\n            // alert(\\\"/ipcrtargets/\\\" + ipcr_id + \\\"/\\\"+ this.id+\\\"/delete\\\")/review/approve/\\r\\n            if (confirm(text) == true) {\\r\\n                //'/approve/semestral-accomplishments/up/stat/acc/{status}/{acc_id}'\\r\\n                // /approve/semestral-accomplishments/{status}/{acc_id}\\r\\n                var myurl = \\\"/approve/semestral-accomplishments/up/stat/acc/\\\" + stat + \\\"/\\\" + this.emp_sem_id\\r\\n                // alert(myurl)\\r\\n                // alert(this.form.remarks);\\r\\n                // alert(this.empl_id)\\r\\n                this.form.employee_code = this.ipcr_accomplishments_review.sem.employee_code;\\r\\n                // await axios\\r\\n                this.$inertia.post(myurl, {\\r\\n                    params: {\\r\\n                        remarks: this.form.remarks,\\r\\n                        employee_code: this.form.employee_code,\\r\\n                        Average_Point_Core: this.Average_Point_Core,\\r\\n                        Average_Point_Support: this.Average_Point_Support,\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n            this.hideModal4();\\r\\n        },\\r\\n        async showModal2(my_id, empl_id, e_name, e_year, e_sem, e_stat) {\\r\\n            this.emp_name = e_name;\\r\\n            this.emp_year = e_year;\\r\\n            this.emp_sem = e_sem;\\r\\n            this.emp_status = e_stat;\\r\\n            this.emp_sem_id = my_id;\\r\\n            this.empl_id = empl_id;\\r\\n            // alert('ipcr_sem: '+my_id+' emp_code: '+empl_id)\\r\\n            await axios.get(\\\"/ipcrtargets/get/ipcr/targets/2\\\", {\\r\\n                params: {\\r\\n                    sem_id: my_id,\\r\\n                    empl_id: empl_id\\r\\n                }\\r\\n            }).then((response) => {\\r\\n                this.ipcr_targets = response.data;\\r\\n            }).catch((error) => {\\r\\n                console.error(error);\\r\\n            });\\r\\n            this.displayModal2 = true;\\r\\n        },\\r\\n        parseQuantity(quantarr) {\\r\\n            // Remove brackets and split by commas, then convert to numbers\\r\\n            const cleanedString = quantarr.replace(/[\\\\[\\\\]]/g, '');\\r\\n            const numberArray = cleanedString.split(',').map(Number);\\r\\n            //this.length = numberArray[0].quantity.length\\r\\n            return numberArray;\\r\\n        },\\r\\n        submitActionProb(stat) {\\r\\n            //alert(stat);\\r\\n            var acc = \\\"\\\";\\r\\n            if (stat < 2) {\\r\\n                acc = \\\"review\\\";\\r\\n            } else {\\r\\n                acc = \\\"approve\\\";\\r\\n            }\\r\\n            let text = \\\"Are you sure you want to \\\" + acc + \\\" the IPCR Target?\\\";\\r\\n            // alert(\\\"/ipcrtargets/\\\" + ipcr_id + \\\"/\\\"+ this.id+\\\"/delete\\\")\\r\\n            if (confirm(text) == true) {\\r\\n                this.$inertia.post(\\\"/review/approve/\\\" + stat + \\\"/\\\" + this.emp_sem_id + \\\"/probationary\\\");\\r\\n            }\\r\\n            this.hideModal2();\\r\\n        },\\r\\n        showModal3() {\\r\\n            // alert(\\\"empl_id: \\\" + this.empl_id + \\\" id: \\\" + this.id_accomp_selected + \\\" e_sem: \\\" + this.emp_sem);\\r\\n\\r\\n            if (this.emp_sem === \\\"1\\\" || this.emp_sem === \\\"2\\\") {\\r\\n                this.form.type = \\\"ipcr_semestrals\\\";\\r\\n            } else {\\r\\n                this.form.type = \\\"probationary/temporary\\\"\\r\\n            }\\r\\n            this.form.ipcr_semestral_id = this.emp_sem_id\\r\\n            this.form.employee_code = this.empl_id\\r\\n            this.hideModal2()\\r\\n            this.hideModal()\\r\\n            // alert(\\\"ipcr_semestral_id: \\\" + this.form.ipcr_semestral_id +\\r\\n            //     \\\" ipcr_semestral_id: \\\" + this.form.ipcr_semestral_id +\\r\\n            //     \\\" ipcr_semestral_id: \\\" + this.form.ipcr_semestral_id)\\r\\n            // this.displayModal3 = true\\r\\n        },\\r\\n        hideModal3() {\\r\\n            this.displayModal3 = false;\\r\\n        },\\r\\n        submitReturnReason() {\\r\\n            // alert(\\\"Type: \\\" + this.form.type + \\\"; ipcr_semestral_id: \\\" +\\r\\n            //     this.form.ipcr_semestral_id + \\\"; employee_code: \\\" +\\r\\n            //     this.form.employee_code + \\\"; remarks: \\\" +\\r\\n            //     this.form.remarks)\\r\\n            let text = \\\"Are you sure you want to return this IPCR?\\\";\\r\\n\\r\\n            if (confirm(text) == true) {\\r\\n                if (this.form.remarks) {\\r\\n                    //this.$inertia.post(\\\"/return/remarks\\\" + id+\\\"/\\\"+this.idmfo);\\r\\n                    this.form.post(\\\"/return/accomplishments/remarks\\\", this.form);\\r\\n                } else {\\r\\n                    alert(\\\"Input remarks!\\\")\\r\\n                }\\r\\n            }\\r\\n            this.hideModal()\\r\\n            this.hideModal2()\\r\\n            this.cancelReason()\\r\\n\\r\\n        },\\r\\n        cancelReason() {\\r\\n            this.hideModal3()\\r\\n            this.form.remarks = \\\"\\\";\\r\\n            this.form.type = \\\"\\\";\\r\\n            this.form.ipcr_semestral_id = \\\"\\\";\\r\\n            this.form.employee_code = \\\"\\\";\\r\\n        },\\r\\n        QuantityRate(id, quantity, target) {\\r\\n\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                var total = Math.round(quantity / target * 100)\\r\\n                if (total >= 130) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (total <= 129 && total >= 115) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (total <= 114 && total >= 90) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (total <= 89 && total >= 51) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (total <= 50) {\\r\\n                    result = \\\"1\\\"\\r\\n                } else\\r\\n                    result = \\\"\\\"\\r\\n            } else if (id == 2) {\\r\\n                var total = Math.round(quantity / target * 100)\\r\\n                if (total == 100) {\\r\\n                    result = 5\\r\\n                } else {\\r\\n                    result = 2\\r\\n                }\\r\\n\\r\\n            }\\r\\n            // console.log(target);\\r\\n            return result;\\r\\n        },\\r\\n        QualityRate(id, quality, total) {\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                if (total == 0) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (total >= .01 && total <= 2.99) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (total >= 3 && total <= 4.99) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (total >= 5 && total <= 6.99) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (total >= 7) {\\r\\n                    result = \\\"1\\\"\\r\\n                }\\r\\n            } else if (id == 2) {\\r\\n                if (total == 5) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (total >= 4 && total <= 4.99) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (total >= 3 && total <= 3.99) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (total >= 2 && total <= 2.99) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (total >= 1 && total <= 1.99) {\\r\\n                    result = \\\"1\\\"\\r\\n                } else {\\r\\n                    result = \\\"0\\\"\\r\\n                }\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        QuantityType(id) {\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                result = \\\"TO BE RATED\\\"\\r\\n            } else {\\r\\n                result = \\\"ACCURACY RULE (100%=5,2 if less than 100%)\\\"\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        QualityType(id) {\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                result = \\\"NO. OF ERROR\\\"\\r\\n            } else if (id == 2) {\\r\\n                result = \\\"AVE. FEEDBACK\\\"\\r\\n            } else if (id == 3) {\\r\\n                result = \\\"NOT TO BE RATED\\\"\\r\\n            } else if (id == 4) {\\r\\n                result = \\\"ACCURACY RULE\\\"\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        // AverageRate(QuantityID, QualityID, quantity, target, total, quality) {\\r\\n        //     var Quantity = this.QuantityRate(QuantityID, quantity, target)\\r\\n        //     var Quality = this.QualityRate(QualityID, quality, total)\\r\\n        //     var Timeliness = 0\\r\\n        //     var Average = (parseFloat(Quantity) + parseFloat(Quality) + parseFloat(Timeliness)) / 3\\r\\n        //     return this.format_number_conv(Average, 2, true)\\r\\n        //     // return this.format_number_conv\\r\\n        // },\\r\\n        getPercentQuantity(total_quantity, monthly_target) {\\r\\n            var score = 0;\\r\\n            var my_score = \\\"\\\";\\r\\n            if (monthly_target == 0) {\\r\\n                my_score = \\\"0\\\";\\r\\n            } else {\\r\\n                score = total_quantity / monthly_target;\\r\\n                score = score * 100;\\r\\n                my_score = this.format_number_conv(score, 2, true);\\r\\n            }\\r\\n            return my_score;\\r\\n        },\\r\\n        showModalDaily() {\\r\\n            this.displayModalDaily = true;\\r\\n        },\\r\\n        hideModalDaily() {\\r\\n            this.displayModalDaily = false;\\r\\n        },\\r\\n        viewDailyAccomplishments(emp_code, sem, yval) {\\r\\n            // alert(this.emp_code);\\r\\n            //var office_ind = document.getElementById(\\\"selectOffice\\\").selectedIndex;\\r\\n\\r\\n            // this.office =this.auth.user.office.office;\\r\\n            // var pg_head = this.functions.DEPTHEAD;\\r\\n            // var forFFUNCCOD = this.auth.user.office.department_code;\\r\\n            this.my_link = this.viewlinkaa(emp_code, sem, yval);\\r\\n\\r\\n            this.showModalDaily();\\r\\n        },\\r\\n        viewlinkaa(username, sem, yval) {\\r\\n            //var linkt =\\\"abcdefghijklo534gdmoivndfigudfhgdyfugdhfugidhfuigdhfiugmccxcxcxzczczxczxczxcxzc5fghjkliuhghghghaaa555l&&&&-\\\";\\r\\n            // var date_from =\\r\\n            var moval_beg = 1;\\r\\n            var moval_lst = 6;\\r\\n            if (sem > 1) {\\r\\n                moval_beg = 7;\\r\\n                moval_lst = 12;\\r\\n            }\\r\\n            var linkt = \\\"http://\\\";\\r\\n            var date_from = new Date(yval, moval_beg - 1, 1).toISOString().split('T')[0];\\r\\n            var date_to = new Date(yval, moval_lst, 0).toISOString().split('T')[0];\\r\\n            var jasper_ip = this.jasper_ip;\\r\\n            var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA%2CSales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2FIPCR%2FDaily_Accomplishment&reportUnit=%2Freports%2FIPCR%2FDaily_Accomplishment%2FIPCR_Daily&standAlone=true&decorate=no&output=pdf';\\r\\n            var params = '&username=' + username + '&date_from=' + date_from + '&date_to=' + date_to;\\r\\n            var linkl = linkt + jasper_ip + jasper_link + params;\\r\\n\\r\\n            return linkl;\\r\\n        },\\r\\n    }\\r\\n};\\r\\n</script>\\r\\n<style>\\r\\n.row-centered {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.col-centered {\\r\\n    display: inline-block;\\r\\n    float: none;\\r\\n    text-align: left;\\r\\n    margin-right: -4px;\\r\\n}\\r\\n\\r\\n.pos {\\r\\n    position: top;\\r\\n    top: 240px;\\r\\n}\\r\\n</style>\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#sidebar-wrapper{height:100%;margin-right:-250px;margin-top:-9px;overflow-y:auto;position:fixed;right:250px;transition:all .5s ease;width:auto;z-index:1000}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Shared/Filter.vue\"],\"names\":[],\"mappings\":\"AA4BI,iBAMI,WAAY,CACZ,mBAAoB,CALpB,eAAgB,CAMhB,eAAgB,CAJhB,cAAe,CACf,WAAY,CAOZ,uBAAyB,CAXzB,UAAW,CAEX,YAUJ\",\"sourcesContent\":[\"<template>\\r\\n    <div \\r\\n        id=\\\"sidebar-wrapper\\\" \\r\\n        class=\\\"sidebar-nav nav navbar-inverse\\\" \\r\\n    >\\r\\n        <div class=\\\"row\\\" style=\\\"width: 380px;\\\">\\r\\n            <div class=\\\"bgc-white\\\">  \\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLiveLabel\\\">Filtering</h5>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn-close\\\" @click=\\\"$emit('closeFilter')\\\"></button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <slot></slot>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\nexport default {\\r\\n    props: {\\r\\n        title: String,\\r\\n    }\\r\\n}\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n    #sidebar-wrapper {\\r\\n        width: auto;\\r\\n        margin-top: -9px;\\r\\n        z-index: 1000;\\r\\n        position: fixed;\\r\\n        right: 250px;\\r\\n        height: 100%;\\r\\n        margin-right: -250px;\\r\\n        overflow-y: auto;\\r\\n        -webkit-transition: all 0.5s ease;\\r\\n        -moz-transition: all 0.5s ease;\\r\\n        -o-transition: all 0.5s ease;\\r\\n        transition: all 0.5s ease;\\r\\n    }\\r\\n</style>\\r\\n\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".modal[data-v-8ec2bb50]{display:block}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Shared/PrintModal.vue\"],\"names\":[],\"mappings\":\"AAqEI,wBACE,aACF\",\"sourcesContent\":[\"<template>\\r\\n    <div class=\\\"permissions-modal\\\">\\r\\n        <div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n            <div class=\\\"modal-dialog modal-xl\\\">\\r\\n                <div class=\\\"d-flex justify-content-center\\\">\\r\\n                    <div class=\\\"modal-content\\\" style=\\\"width: 100% !important; height: 40% !important; \\\">\\r\\n                        <div class=\\\"modal-header\\\" style=\\\"background-color:#030014\\\">\\r\\n                            <h4 class=\\\"modal-title\\\" style=\\\"color: #ffe819; text-align: center !important;\\\">\\r\\n                                <b>PRINT PREVIEW</b>\\r\\n                            </h4>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" style=\\\"font-weight: bold; color: white\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" @click=\\\"closeModal\\\">\\r\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-body\\\">\\r\\n                        <!--<p>Modal body text goes here.</p>\\r\\n                        <multiselect v-model=\\\"value\\\" :options=\\\"options\\\" mode=\\\"tags\\\"/>-->\\r\\n                        <slot></slot>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-footer\\\" style=\\\"background-color:#090137\\\">\\r\\n                        <!--<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" @click=\\\"saveChanges\\\">Save changes</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" @click=\\\"closeModal\\\">Close</button>-->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n  </template>\\r\\n\\r\\n  <script>\\r\\n    export default {\\r\\n      props: {\\r\\n          //userId: Object,\\r\\n      },\\r\\n      data(){\\r\\n          return{\\r\\n              //my_id: this.props.userId,\\r\\n              value: null,\\r\\n              options: [\\r\\n                  'Batman',\\r\\n                  'Robin',\\r\\n                  'Joker',\\r\\n                  ],\\r\\n          }\\r\\n      },\\r\\n      mounted(){\\r\\n\\r\\n      },\\r\\n      methods: {\\r\\n        logU_ID(){\\r\\n\\r\\n        },\\r\\n        closeModal() {\\r\\n          this.$emit('close-modal-event');\\r\\n        },\\r\\n        saveChanges() {\\r\\n          this.closeModal();\\r\\n        },\\r\\n        loadPermissions(){\\r\\n\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  </script>\\r\\n\\r\\n  <style scoped>\\r\\n    /* Override default value of 'none' */\\r\\n    .modal {\\r\\n      display: block;\\r\\n    }\\r\\n  </style>\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\r\n\r\n    <Head>\r\n        <title>Home</title>\r\n    </Head>\r\n\r\n    <!--<p style=\"text-align: justify;\">Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos, qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit amet consectetur.\r\n    </p>-->\r\n    <div class=\"row gap-20 masonry pos-r\">\r\n        <div class=\"peers fxw-nw jc-sb ai-c\">\r\n            <!--SEMESTRAL***************************************************************************************-->\r\n            <h3>Review/Approve Semestral Accomplishment</h3>\r\n            <div class=\"peers\">\r\n                <div class=\"peer mR-10\">\r\n                    <input v-model=\"search\" type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Search...\">\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div class=\"masonry-sizer col-md-6\"></div>\r\n        <div class=\"masonry-item w-100\">\r\n            <div class=\"row gap-20\"></div>\r\n            <div class=\"bgc-white p-20 bd\">\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-sm table-borderless table-striped table-hover\">\r\n                        <thead>\r\n                            <tr class=\"bg-secondary text-white\">\r\n                                <th></th>\r\n                                <th>Name</th>\r\n                                <th>Period</th>\r\n                                <th>Status</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"accomp in accomplishments.data\">\r\n                                <td><!--{{ accomp }} - {{ accomp }}--> </td>\r\n                                <td>{{ accomp.employee_name }} </td>\r\n                                <td>\r\n                                    {{ getPeriod(accomp.sem, accomp.year) }}\r\n                                </td>\r\n                                <!-- {{ getStatus(accomp.employment_type_descr) }}  -->\r\n                                <!-- <td>{{ accomp.employment_type_descr }}\r\n                                    -- sem: {{ accomp.sem }}</td> -->\r\n                                <td>{{ getStatus(accomp.a_status.toString()) }} </td>\r\n                                <td>\r\n                                    <div class=\"dropdown dropstart\">\r\n                                        <button class=\"btn btn-secondary btn-sm action-btn\" type=\"button\"\r\n                                            id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                fill=\"currentColor\" class=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\" />\r\n                                            </svg>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu action-dropdown\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                            <li v-if=\"accomp.sem === '1' || accomp.sem === '2'\">\r\n                                                <button class=\"dropdown-item\"\r\n                                                    @click=\"showModals(accomp.id, accomp.empl_id, accomp.a_status, accomp.imm_id, accomp.next_higher_id)\">\r\n                                                    View Submission\r\n                                                </button>\r\n                                            </li>\r\n                                            <li v-else>\r\n                                                <button class=\"dropdown-item\"\r\n                                                    @click=\"showModal2(accomp.empl_id, accomp.employee_name, accomp.year, accomp.sem, accomp.status)\">\r\n                                                    View Submission 2\r\n                                                </button>\r\n                                            </li>\r\n                                            <li>\r\n                                                <button class=\"dropdown-item\"\r\n                                                    @click=\"viewDailyAccomplishments(accomp.empl_id, accomp.sem, accomp.year)\">\r\n                                                    View Daily Accomplishments\r\n                                                </button>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- <pagination :next=\"data.next_page_url\" :prev=\"data.prev_page_url\" /> -->\r\n        <pagination :next=\"accomplishments.next_page_url\" :prev=\"accomplishments.prev_page_url\" />\r\n\r\n        <Modal v-if=\"displayModal\" @close-modal-event=\"hideModal\">\r\n            <div class=\"justify-content-center\">\r\n                <div style=\"text-align: center\">\r\n                    <h4>IPCR Accomplishment Modal</h4>\r\n                </div>\r\n                <br>\r\n                <div><b>Employee Name: </b><u>{{ emp_name }}</u></div>\r\n                <div>\r\n                    <b>Semester/Period: </b>\r\n                    <u>\r\n                        <span v-if=\"emp_sem === '1'\">First Semester -January to June, </span>\r\n                        <span v-if=\"emp_sem === '2'\">Second Semester -July to December, </span>\r\n                        {{ emp_year }}\r\n                        <!-- {{ emp_status }} -->\r\n                    </u>\r\n                </div>\r\n                <div>\r\n                    <b>Status: </b>\r\n                    <u>\r\n                        <span v-if=\"emp_status.toString() === '0'\">Submitted</span>\r\n                        <span v-if=\"emp_status.toString() === '1'\">Reviewed</span>\r\n                    </u>\r\n                </div>\r\n                <div class=\"masonry-item w-100\">\r\n                    <div class=\"bgc-white p-20 bd\">\r\n                        <!-- {{ report_link }} -->\r\n                        <div class=\"table-responsive\">\r\n\r\n                            <iframe :src=\"report_link\" style=\"width:100%; height:450px\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <b>Remarks:</b>\r\n                    <input type=\"text\" v-model=\"form.remarks\" class=\"form-control\" autocomplete=\"chrome-off\"><br>\r\n                </div>\r\n                <div style=\"align: center\">\r\n                    <!-- imm_id_loc\r\n                    nxt_id_loc -->\r\n                    <!-- {{ imm_id_loc }} - {{ nxt_id_loc }} -->\r\n                    <span v-if=\"imm_id_loc === nxt_id_loc\">\r\n                        <button class=\"btn btn-primary text-white\" @click=\"submitAction('2')\">\r\n                            Approve\r\n                        </button>&nbsp;\r\n                    </span>\r\n                    <span v-else>\r\n                        <button class=\"btn btn-primary text-white\" @click=\"submitAction('1')\"\r\n                            v-if=\"emp_status.toString() === '0'\">\r\n                            Review\r\n                        </button>\r\n                        <button class=\"btn btn-primary text-white\" @click=\"submitAction('2')\"\r\n                            v-if=\"emp_status.toString() === '1'\">\r\n                            Approve\r\n                        </button>&nbsp;\r\n                        <button class=\"btn btn-primary text-white\" @click=\"submitAction('3')\"\r\n                            v-if=\"emp_status.toString() === '2'\">\r\n                            Final Approve\r\n                        </button>&nbsp;\r\n                    </span>\r\n\r\n\r\n                    <button style=\"float: right\" class=\"btn btn-danger text-white\" @click=\"submitAction('-2')\">\r\n                        Return\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n        <Modal2 v-if=\"displayModal2\" @close-modal-event=\"hideModal2\">\r\n            <div class=\"justify-content-center\">\r\n                <div style=\"text-align: center\">\r\n                    <h4>IPCR Targets Modal2</h4>\r\n                </div>\r\n                <br>\r\n                <div><b>Employee Name: </b><u>{{ emp_name }}</u></div>\r\n                <!-- lendsgth: {{ length }}\r\n                ipcr_targets: {{ ipcr_targets[0].quantity }} -->\r\n                <!-- quantityArray : {{ quantityArray() }} -->\r\n                <div class=\"masonry-item w-100\">\r\n                    <div class=\"bgc-white p-20 bd\">\r\n                        <div class=\"table-responsive\">\r\n\r\n                            <div v-if=\"ipcr_targets && ipcr_targets.length > 0\">\r\n                                <table class=\"table table-hover table-bordered border-dark\">\r\n                                    <!-- v-if=\"ipcr_targets[0].quantity\" -->\r\n                                    <tr class=\"text-dark\" style=\"background-color: #B7DEE8;\">\r\n                                        <th>IPCR Code</th>\r\n                                        <th>Individual Final Output\r\n                                            {{ ipcr_targets[0].quantity }}\r\n                                        </th>\r\n\r\n                                        <th v-for=\"(item, index) in parseQuantity(ipcr_targets[0].quantity)\"\r\n                                            :key=\"index\">\r\n                                            Month {{ index + 1 }}\r\n                                        </th>\r\n                                    </tr>\r\n                                    <tr class=\"bg-secondary text-white\">\r\n                                        <td>{{ }}</td>\r\n                                        <td :colspan=\"9 + parseFloat(parseQuantity(ipcr_targets[0].quantity).length)\">\r\n                                            <b>Core Function</b>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr v-for=\"target in ipcr_targets\">\r\n                                        <td v-if=\"target.ipcr_type == 'Core Function'\"\r\n                                            style=\"text-align: center; background-color: #edd29d\">{{ target.ipcr_code }}\r\n                                        </td>\r\n                                        <td v-if=\"target.ipcr_type == 'Core Function'\">{{ target.individual_output }}\r\n                                        </td>\r\n                                        <td v-if=\"target.ipcr_type == 'Core Function'\"\r\n                                            v-for=\"(quant, index) in parseQuantity(target.quantity)\" :key=\"index\">{{\r\n                        quant\r\n                    }}</td>\r\n                                    </tr>\r\n                                    <tr class=\"bg-secondary text-white\">\r\n                                        <td>{{ }}</td>\r\n                                        <td :colspan=\"9 + parseFloat(parseQuantity(ipcr_targets[0].quantity).length)\">\r\n                                            <b>Support Function</b>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr v-for=\"target in ipcr_targets\">\r\n                                        <td v-if=\"target.ipcr_type == 'Support Function'\"\r\n                                            style=\"text-align: center; background-color: #edd29d\">{{ target.ipcr_code }}\r\n                                        </td>\r\n                                        <td v-if=\"target.ipcr_type == 'Support Function'\">{{ target.individual_output }}\r\n                                        </td>\r\n                                        <td v-if=\"target.ipcr_type == 'Support Function'\"\r\n                                            v-for=\"(quant, index) in parseQuantity(target.quantity)\" :key=\"index\">{{\r\n                        quant\r\n                    }}</td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div style=\"align: center\">\r\n                            <button class=\"btn btn-primary text-white\" @click=\"submitActionProb('1')\"\r\n                                v-if=\"emp_status === '0'\">\r\n                                Review\r\n                            </button>\r\n                            <button class=\"btn btn-primary text-white\" @click=\"submitActionProb('2')\"\r\n                                v-if=\"emp_status === '1'\">\r\n                                Approve\r\n                            </button>&nbsp;\r\n                            <button class=\"btn btn-danger text-white\" @click=\"showModal3()\">\r\n                                Return\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal2>\r\n        <Modal3 v-if=\"displayModal3\" @close-modal-event=\"hideModal3\">\r\n            <h3>Remarks Modal3</h3>\r\n            <h5>State the reason for not reviewing/approving IPCR</h5>\r\n            <input type=\"text\" v-model=\"form.remarks\" class=\"form-control\" autocomplete=\"chrome-off\"><br>\r\n            <button class=\"btn btn-primary text-white\" @click=\"submitReturnReason()\">\r\n                Done\r\n            </button>&nbsp;\r\n            <button class=\"btn btn-danger text-white\" @click=\"cancelReason()\">\r\n                Cancel\r\n            </button>\r\n        </Modal3>\r\n        <ModalDaily v-if=\"displayModalDaily\" @close-modal-event=\"hideModalDaily\">\r\n            <div class=\"d-flex justify-content-center\">\r\n                <iframe :src=\"my_link\" style=\"width:100%; height:450px\" />\r\n            </div>\r\n        </ModalDaily>\r\n        <Modal4 v-if=\"displayModal4\" @close-modal-event=\"hideModal4\">\r\n            <div class=\"justify-content-center\">\r\n                <div style=\"text-align: center\">\r\n                    <h4>IPCR Accomplishment</h4>\r\n                </div>\r\n                <br>\r\n                <div>\r\n                    <div><b>Employee Name: </b><u>{{ ipcr_accomplishments_review.sem.user_employee.first_name + \" \" +\r\n                        ipcr_accomplishments_review.sem.user_employee.last_name }}</u>\r\n                    </div>\r\n                    <div><b>Position: </b><u>{{ ipcr_accomplishments_review.sem.user_employee.position_title1 }}</u>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <b>Semester/Period: </b>\r\n                    <u>\r\n                        {{ sem(ipcr_accomplishments_review.sem.sem) }}\r\n                    </u>\r\n                </div>\r\n                <div>\r\n                    <b>Status: <u>{{ Status(ipcr_accomplishments_review.sem_data.status_accomplishment) }}</u></b>\r\n\r\n                </div>\r\n                <div class=\"masonry-item w-100\">\r\n                    <div class=\"bgc-white p-20 bd\">\r\n\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table table-hover table-bordered border-dark\">\r\n                                <thead>\r\n                                    <tr style=\"background-color: #B7DEE8;\" class=\"text-center table-bordered\">\r\n                                        <th style=\"width: 5%;\" rowspan=\"2\" colspan=\"1\">IPCR Code</th>\r\n                                        <th style=\"width: 15%;\" rowspan=\"2\" colspan=\"1\">Major Final Output</th>\r\n                                        <th style=\"width: 30%;\" rowspan=\"2\" colspan=\"1\">Success Indicator</th>\r\n                                        <th style=\"width: 20%;\" colspan=\"4\">Rating</th>\r\n                                        <th style=\"width: 20%;\" rowspan=\"2\" colspan=\"1\">Remarks</th>\r\n                                    </tr>\r\n                                    <tr style=\"background-color: #B7DEE8;\" class=\"text-center\">\r\n                                        <th style=\"width: 5%;\">Quantity Rating</th>\r\n                                        <th style=\"width: 5%;\">Quality Rating</th>\r\n                                        <th style=\"width: 5%;\">Timeliness Rating</th>\r\n                                        <th style=\"width: 5%;\">Average</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td colspan=\"9\">\r\n                                            <b>CORE FUNCTION</b>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <template v-for=\"dat in ipcr_accomplishments_review.data\">\r\n                                        <tr v-if=\"dat.ipcr_type === 'Core Function'\" class=\"text-center\">\r\n                                            <td style=\"text-align: center; background-color: #edd29d\">{{ dat.ipcr_code\r\n                                                }}</td>\r\n                                            <td>{{ dat.mfo_desc }}</td>\r\n                                            <td>{{ dat.success_indicator }}</td>\r\n                                            <td>\r\n                                                {{ dat.result.length == 0 ? 0 : QuantityRate(dat.quantity_type,\r\n                        GetSumQuantity(dat.result), dat.quantity_sem)\r\n                                                }}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{ dat.result.length == 0 ? 0 : QualityRating(dat.quality_error,\r\n                        QualityTypes(dat.quality_error,\r\n                            GetSumQuality(dat.result), CountMonth(dat.result))) }}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{ TimeRatings(AveTime(TotalTime(dat.result),\r\n                        GetSumQuantity(dat.result)),\r\n                        dat.indi_output.time_ranges, dat.time_range_code) }}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{ AverageRate(dat.result.length == 0 ? 0 :\r\n                        QuantityRate(dat.quantity_type, GetSumQuantity(dat.result),\r\n                            dat.quantity_sem),\r\n                        dat.result.length == 0 ? 0 : QualityRating(dat.quality_error,\r\n                            QualityTypes(dat.quality_error,\r\n                                GetSumQuality(dat.result), CountMonth(dat.result))),\r\n                        TimeRatings(AveTime(TotalTime(dat.result),\r\n                            GetSumQuantity(dat.result)),\r\n                            dat.indi_output.time_ranges, dat.time_range_code)) }}\r\n                                            </td>\r\n                                            <td>{{ dat.remarks }}</td>\r\n                                        </tr>\r\n                                    </template>\r\n                                    <tr>\r\n                                        <td colspan=\"7\">\r\n                                            <b style=\"float:right\">Average Point Score - Core Function</b>\r\n                                        </td>\r\n                                        <td>\r\n                                            {{ calculateAverageCore() }}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colspan=\"7\">\r\n                                            <b style=\"float:right\">Multiply by Weighted Allocation</b>\r\n                                        </td>\r\n                                        <td>\r\n                                            70%\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colspan=\"7\">\r\n                                            <b style=\"float:right\">Weighted Average Score - Core Function</b>\r\n                                        </td>\r\n                                        <td>\r\n                                            {{ (Average_Point_Core * .70).toFixed(2) }}\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td colspan=\"9\">\r\n                                            <b>SUPPORT FUNCTION</b>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <template v-for=\"dat in ipcr_accomplishments_review.data\">\r\n                                        <tr v-if=\"dat.ipcr_type === 'Support Function'\" class=\"text-center\">\r\n                                            <td style=\"text-align: center; background-color: #edd29d\">{{ dat.ipcr_code\r\n                                                }}</td>\r\n                                            <td>{{ dat.mfo_desc }}</td>\r\n                                            <td>{{ dat.success_indicator }}</td>\r\n                                            <td>\r\n                                                {{ dat.result.length == 0 ? 0 : QuantityRate(dat.quantity_type,\r\n                        GetSumQuantity(dat.result), dat.quantity_sem) }}\r\n\r\n                                            </td>\r\n                                            <td>\r\n                                                {{ dat.result.length == 0 ? 0 : QualityRating(dat.quality_error,\r\n                        QualityTypes(dat.quality_error,\r\n                            GetSumQuality(dat.result), CountMonth(dat.result))) }}\r\n                                            </td>\r\n                                            <td>{{ TimeRatings(AveTime(TotalTime(dat.result),\r\n                        GetSumQuantity(dat.result)),\r\n                        dat.indi_output.time_ranges, dat.time_range_code) }}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{ AverageRate(dat.result.length == 0 ? 0 :\r\n                        QuantityRate(dat.quantity_type,\r\n                            GetSumQuantity(dat.result),\r\n                            dat.quantity_sem), dat.result.length == 0 ? 0 :\r\n                        QualityRating(dat.quality_error,\r\n                            QualityTypes(dat.quality_error,\r\n                                GetSumQuality(dat.result), CountMonth(dat.result))),\r\n                        TimeRatings(AveTime(TotalTime(dat.result), GetSumQuantity(dat.result)),\r\n                            dat.indi_output.time_ranges, dat.time_range_code)) }}\r\n                                            </td>\r\n\r\n                                            <td>{{ dat.remarks }}</td>\r\n\r\n                                        </tr>\r\n                                    </template>\r\n                                    <tr>\r\n                                        <td colspan=\"7\">\r\n                                            <b style=\"float:right\">Average Point Score - Support Function</b>\r\n                                        </td>\r\n                                        <td>\r\n                                            {{ calculateAverageSupport() }}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colspan=\"7\">\r\n                                            <b style=\"float:right\">Multiply by Weighted Allocation</b>\r\n                                        </td>\r\n                                        <td>\r\n                                            30%\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colspan=\"7\">\r\n                                            <b style=\"float:right\">Weighted Average Score - Support Function</b>\r\n                                        </td>\r\n                                        <td>\r\n                                            {{ (Average_Point_Support * .30).toFixed(2) }}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colspan=\"7\">\r\n                                            <b style=\"float:right\">Total Average Score</b>\r\n                                        </td>\r\n                                        <td>\r\n                                            {{ ((Average_Point_Core * 0.70) + (Average_Point_Support * 0.30)).toFixed(2)\r\n                                            }}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colspan=\"7\">\r\n                                            <b style=\"float:right\">Additional Point Intervening Factor - if applicable -\r\n                                                Maximum: 0.5 pts</b>\r\n                                        </td>\r\n                                        <td>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colspan=\"7\">\r\n                                            <b style=\"float:right\">Total Final Average Rating</b>\r\n                                        </td>\r\n                                        <td style=\"background-color: yellow\">\r\n                                            <b>{{ ((Average_Point_Core * 0.70) + (Average_Point_Support *\r\n                                                0.30)).toFixed(2)\r\n                                                }}</b>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colspan=\"7\">\r\n                                            <b style=\"float:right\">Final Adjectival Rating</b>\r\n                                        </td>\r\n                                        <td style=\"background-color: yellow\">\r\n                                            <b>{{ getAdjectivalRating(((Average_Point_Core * 0.70) +\r\n                                                (Average_Point_Support *\r\n                                                0.30)).toFixed(2)) }}</b>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colspan=\"8\">\r\n                                            <b>Supervisor's comments and recommendations for development purposes or\r\n                                                Rewards/Promotion</b>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colspan=\"8\">\r\n                                            {{ ipcr_accomplishments_review.sem.latest_return_remark.remarks }}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <b>Remarks:</b>\r\n                            <input type=\"text\" v-model=\"form.remarks\" class=\"form-control\"\r\n                                autocomplete=\"chrome-off\"><br>\r\n                        </div>\r\n                        <!-- {{ imm_id_loc }} &nbsp; {{ nxt_id_loc }} -->\r\n                        <div style=\"align: center\">\r\n                            <span v-if=\"imm_id_loc === nxt_id_loc\">\r\n                                <button class=\"btn btn-primary text-white\" @click=\"submitAction('2')\">\r\n                                    Approve\r\n                                </button>&nbsp;\r\n                            </span>\r\n                            <span v-else>\r\n\r\n                                <button class=\"btn btn-primary text-white\" @click=\"submitAction('1')\"\r\n                                    v-if=\"emp_status.toString() === '0'\">\r\n                                    Review\r\n                                </button>\r\n                                <button class=\"btn btn-primary text-white\" @click=\"submitAction('2')\"\r\n                                    v-if=\"emp_status.toString() === '1'\">\r\n                                    Approve\r\n                                </button>&nbsp;\r\n                                <button class=\"btn btn-primary text-white\" @click=\"submitAction('3')\"\r\n                                    v-if=\"emp_status.toString() === '2'\">\r\n                                    Final Approve\r\n                                </button>&nbsp;\r\n                            </span>\r\n                            <button style=\"float: right;\" class=\"btn btn-danger text-white\"\r\n                                @click=\"submitAction('-2', ipcr_accomplishments_review.sem_data.id.toString())\">\r\n                                Return\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </Modal4>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { useForm } from \"@inertiajs/inertia-vue3\";\r\nimport Filtering from \"@/Shared/Filter\";\r\nimport Pagination from \"@/Shared/Pagination\";\r\nimport Modal from \"@/Shared/PrintModal\";\r\nimport Modal2 from \"@/Shared/PrintModal\";\r\nimport Modal3 from \"@/Shared/PrintModal\";\r\nimport Modal4 from \"@/Shared/PrintModal\";\r\nimport ModalDaily from \"@/Shared/PrintModal\";\r\nimport { Inertia } from '@inertiajs/inertia';\r\n\r\nexport default {\r\n    props: {\r\n        accomplishments: Object,\r\n        pghead: Object,\r\n        filters: Object,\r\n\r\n    },\r\n    computed: {\r\n        quantityArray() {\r\n            const allArrays = this.ipcr_targets.map(target => JSON.parse(target.quantity));\r\n            const mergedArray = [].concat(...allArrays);\r\n            var quant = JSON.parse(this.ipcr_targets[0].quantity)\r\n            return mergedArray\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            report_link: \"\",\r\n            my_link: \"\",\r\n            displayModal: false,\r\n            modal_title: \"Add\",\r\n            ipcr_targets: [],\r\n            ipcr_accomplishments: [],\r\n            ipcr_accomplishments_review: [],\r\n            core_support: [],\r\n            emp_sem_id: \"\",\r\n            emp_name: \"\",\r\n            emp_year: \"\",\r\n            emp_sem: \"\",\r\n            emp_status: \"\",\r\n            empl_id: \"\",\r\n            imm_id_loc: \"\",\r\n            nxt_id_loc: \"\",\r\n            Average_Point_Core: 0,\r\n            Average_Point_Support: 0,\r\n            displayModal2: false,\r\n            displayModal3: false,\r\n            displayModal4: false,\r\n            displayModalDaily: false,\r\n            length: 0,\r\n            id_accomp_selected: \"\",\r\n            pg_head: \"\",\r\n            form: useForm({\r\n                type: \"\",\r\n                remarks: \"\",\r\n                ipcr_semestral_id: \"\",\r\n                employee_code: \"\",\r\n                ipcr_monthly_accomplishment_id: \"\",\r\n            }),\r\n            search: this.$props.filters.search,\r\n        }\r\n    },\r\n    watch: {\r\n        search: _.debounce(function (value) {\r\n            this.$inertia.get(\r\n                \"/approve/semestral-accomplishments\",\r\n                { search: value },\r\n                {\r\n                    preserveScroll: true,\r\n                    preserveState: true,\r\n                    replace: true,\r\n                }\r\n            );\r\n        }, 300),\r\n    },\r\n    components: {\r\n        Pagination, Filtering, Modal, Modal2, Modal3, Modal4, ModalDaily\r\n    },\r\n    mounted() {\r\n        this.calculateAverageSupport()\r\n        this.calculateAverageCore()\r\n    },\r\n    methods: {\r\n        sem(sem) {\r\n            var result = \"\"\r\n            if (sem == \"1\") {\r\n                result = \"January to June\"\r\n            } else if (sem == 2) {\r\n                result = \"July to December\"\r\n            }\r\n            return result;\r\n        },\r\n        Status(status) {\r\n            var result = \"\"\r\n            if (status == \"0\") {\r\n                result = \"Submitted\"\r\n            } else if (status == 1) {\r\n                result = \"Reviewed\"\r\n            } else if (status == 2) {\r\n                result = \"Approved\"\r\n            }\r\n\r\n            return result;\r\n        },\r\n        getAdjectivalRating(Score) {\r\n            var result = \"\"\r\n            if (Score >= 4.51 && Score <= 5.00) {\r\n                result = \"Outstanding\"\r\n            } else if (Score >= 3.51 && Score <= 4.50) {\r\n                result = \"Very Satisfactory\"\r\n            } else if (Score >= 2.51 && Score <= 3.50) {\r\n                result = \"Satisfactory\"\r\n            } else if (Score >= 1.51 && Score <= 2.50) {\r\n                result = \"Unsatisfactory\"\r\n            } else if (Score >= 1.00 && Score <= 1.50) {\r\n                result = \"Poor\"\r\n            }\r\n\r\n            return result;\r\n        },\r\n        QualityRate(id, total) {\r\n            var result;\r\n            if (id == 1) {\r\n                if (total == 0) {\r\n                    result = \"5\"\r\n                } else if (total >= .01 && total <= 2.99) {\r\n                    result = \"4\"\r\n                } else if (total >= 3 && total <= 4.99) {\r\n                    result = \"3\"\r\n                } else if (total >= 5 && total <= 6.99) {\r\n                    result = \"2\"\r\n                } else if (total >= 7) {\r\n                    result = \"1\"\r\n                } else {\r\n                    result = \"0\"\r\n                }\r\n            } else if (id == 2) {\r\n                if (total == 5) {\r\n                    result = \"5\"\r\n                } else if (total >= 4 && total <= 4.99) {\r\n                    result = \"4\"\r\n                } else if (total >= 3 && total <= 3.99) {\r\n                    result = \"3\"\r\n                } else if (total >= 2 && total <= 2.99) {\r\n                    result = \"2\"\r\n                } else if (total >= 1 && total <= 1.99) {\r\n                    result = \"1\"\r\n                } else {\r\n                    result = \"0\"\r\n                }\r\n            } else if (id == 3) {\r\n                result = \"0\"\r\n            } else if (id == 4) {\r\n                if (total >= 1) {\r\n                    result = \"2\"\r\n                } else {\r\n                    result = \"5\"\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        GetSumQuantity(Item) {\r\n            var result = _.sumBy(Item.slice(0, 6), (o) => {\r\n                return Number(o.quantity)\r\n            });\r\n            // console.log(result)\r\n            return result;\r\n        },\r\n\r\n        QualityRating(quality_type, quality_score) {\r\n            var result;\r\n            if (quality_type == 1) {\r\n                if (quality_score == 0) {\r\n                    result = \"5\"\r\n                } else if (quality_score >= .01 && quality_score <= 2.99) {\r\n                    result = \"4\"\r\n                } else if (quality_score >= 3 && quality_score <= 4.99) {\r\n                    result = \"3\"\r\n                } else if (quality_score >= 5 && quality_score <= 6.99) {\r\n                    result = \"2\"\r\n                } else if (quality_score >= 7) {\r\n                    result = \"1\"\r\n                } else {\r\n                    result = \"0\"\r\n                }\r\n            } else if (quality_type == 2) {\r\n                if (quality_score == 5) {\r\n                    result = \"5\"\r\n                } else if (quality_score >= 4 && quality_score <= 4.99) {\r\n                    result = \"4\"\r\n                } else if (quality_score >= 3 && quality_score <= 3.99) {\r\n                    result = \"3\"\r\n                } else if (quality_score >= 2 && quality_score <= 2.99) {\r\n                    result = \"2\"\r\n                } else if (quality_score >= 1 && quality_score <= 1.99) {\r\n                    result = \"1\"\r\n                } else {\r\n                    result = \"0\"\r\n                }\r\n            } else if (quality_type == 3) {\r\n                result = \"0\"\r\n            } else if (quality_type == 4) {\r\n                if (quality_score >= 1) {\r\n                    result = \"2\"\r\n                } else {\r\n                    result = \"5\"\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n        QualityTypes(quality_type, score, length) {\r\n            var result;\r\n            if (quality_type == 1) {\r\n                result = score;\r\n\r\n                if (score == 0) {\r\n                    result = 0;\r\n                } else if (score >= 0.01 && score <= 1) {\r\n                    result = 1;\r\n                } else if (score >= 1.01 && score <= 2) {\r\n                    result = 2;\r\n                } else if (score >= 2.01 && score <= 3) {\r\n                    result = 3;\r\n                } else if (score >= 3.01 && score <= 4) {\r\n                    result = 4;\r\n                } else if (score >= 4.01 && score <= 5) {\r\n                    result = 5;\r\n                } else if (score >= 5.01 && score <= 6) {\r\n                    result = 6;\r\n                } else if (score >= 6.01 && score <= 7) {\r\n                    result = 7;\r\n                }\r\n                return result;\r\n            } else if (quality_type == 2) {\r\n                if (length == 0) {\r\n                    result = 0;\r\n                } else {\r\n                    result = Math.round(score / length);\r\n                }\r\n            } else if (quality_type == 3) {\r\n                result = score;\r\n            } else if (quality_type == 4) {\r\n                result = score;\r\n            }\r\n            return result;\r\n        },\r\n        GetSumQuality(Item) {\r\n            var result = _.sumBy(Item, (o) => {\r\n                return Number(o.average_quality)\r\n            });\r\n\r\n            return result;\r\n        },\r\n        CountMonth(Item) {\r\n            var result = Item.length\r\n            return result;\r\n        },\r\n        TimeRatings(Ave_Time, Range, Time_Code) {\r\n            // alert(Range);\r\n            var result;\r\n            var EQ;\r\n\r\n            if (Time_Code == 56) {\r\n                result = \" \";\r\n            } else {\r\n                try {\r\n\r\n                    Range.map(Item => {\r\n                        if (Ave_Time <= Item.equivalent_time_from && Item.rating == 5) {\r\n                            result = 5;\r\n                            EQ = Item.equivalent_time_from;\r\n                        } else if (Ave_Time >= Item.equivalent_time_from && Ave_Time <= Item.equivalent_time_to && Item.rating == 4) {\r\n                            result = 4;\r\n                            EQ = Item.equivalent_time_from;\r\n                        } else if (Ave_Time == Item.equivalent_time_from && Item.rating == 3) {\r\n                            result = 3;\r\n                            EQ = Item.equivalent_time_from;\r\n                        } else if (Ave_Time >= Item.equivalent_time_from && Ave_Time <= Item.equivalent_time_to && Item.rating == 2) {\r\n                            result = 2;\r\n                            EQ = Item.equivalent_time_from;\r\n                        } else if (Ave_Time >= Item.equivalent_time_from && Item.rating == 1) {\r\n                            result = 1;\r\n                            EQ = Item.equivalent_time_from;\r\n                        } else if (Ave_Time == 0) {\r\n                            result = 0;\r\n                        }\r\n                    })\r\n                } catch (error) {\r\n\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        TotalTime(Item) {\r\n            var result = _.sumBy(Item, obj => {\r\n                return obj.average_time ? obj.average_time * obj.quantity : 0;\r\n            })\r\n\r\n            return result;\r\n        },\r\n        AveTime(Time, TotalQuantity) {\r\n            var Time = Time\r\n            var TotalQuantity = TotalQuantity\r\n            var Result\r\n            if (Time == 0 && TotalQuantity == 0) {\r\n                Result = 0\r\n            } else {\r\n                Result = Math.round(Number(Time /\r\n                    TotalQuantity))\r\n            }\r\n            return Result;\r\n        },\r\n        AverageRate(QuantityRating, QualityRating, TimeRating) {\r\n            // alert(TimeRating)\r\n            if (TimeRating == \" \") {\r\n                TimeRating = 0;\r\n            }\r\n            if (TimeRating == \"\") {\r\n                TimeRating = 0;\r\n            }\r\n            if (isNaN(TimeRating)) {\r\n                TimeRating = 0;\r\n            }\r\n            var ratings = [parseFloat(QuantityRating), parseFloat(QualityRating), parseFloat(TimeRating)];\r\n\r\n            var NotZero = ratings.filter(rating => rating !== 0);\r\n\r\n            if (NotZero.length === 0) {\r\n                return 0; // or any default value when all ratings are zero\r\n            }\r\n\r\n            const average = NotZero.reduce((sum, rating) => sum + rating, 0) / NotZero.length;\r\n\r\n            return this.format_number_conv(average, 2, true)\r\n        },\r\n        calculateAverageCore() {\r\n            let sum = 0;\r\n            let num_of_data = 0;\r\n            let average = 0;\r\n\r\n            // console.log(result + \" sample\");\r\n            // setTimeout(() => {\r\n\r\n            //     console.log(this.ipcr_accomplishments_review.data, \"Test\")\r\n            // }, 2000);\r\n            if (Array.isArray(this.ipcr_accomplishments_review.data)) {\r\n                // console.log(this.ipcr_accomplishments_review.data)\r\n                this.ipcr_accomplishments_review.data.forEach(item => {\r\n                    if (item.ipcr_type === 'Core Function') {\r\n                        var val = this.AverageRate(item.result == 0 ? 0 : this.QuantityRate(item.quantity_type, this.GetSumQuantity(item.result),\r\n                            item.quantity_sem), item.result == 0 ? 0 : this.QualityRating(item.quality_error, this.QualityTypes(item.quality_error,\r\n                                this.GetSumQuality(item.result), this.CountMonth(item.result))),\r\n                            this.TimeRatings(this.AveTime(this.TotalTime(item.result), this.GetSumQuantity(item.result)), item.indi_output.time_ranges, item.time_range_code));\r\n                        // alert(val);\r\n                        // alert(this.TimeRatings(this.AveTime(this.TotalTime(item.result), this.GetSumQuantity(item.result)), item.TimeRange, item.time_range_code));\r\n                        if (val !== 0) {\r\n                            num_of_data += 1;\r\n                            sum += parseFloat(val);\r\n                            average = sum / num_of_data\r\n                        }\r\n\r\n                    }\r\n                    // console.log(num_of_data);\r\n                    // console.log(average)\r\n                });\r\n            }\r\n\r\n            this.Average_Point_Core = average.toFixed(2);\r\n            return this.Average_Point_Core;\r\n            // alert(this.Average_Point_Core);\r\n        },\r\n        calculateAverageSupport() {\r\n            let sum = 0;\r\n            let num_of_data = 0;\r\n            let average = 0;\r\n            if (Array.isArray(this.ipcr_accomplishments_review.data)) {\r\n                this.ipcr_accomplishments_review.data.forEach(item => {\r\n                    if (item.ipcr_type === 'Support Function') {\r\n                        var val = this.AverageRate(item.result == 0 ? 0 : this.QuantityRate(item.quantity_type, this.GetSumQuantity(item.result),\r\n                            item.quantity_sem), item.result == 0 ? 0 : this.QualityRating(item.quality_error, this.QualityTypes(item.quality_error,\r\n                                this.GetSumQuality(item.result), this.CountMonth(item.result))),\r\n                            this.TimeRatings(this.AveTime(this.TotalTime(item.result), this.GetSumQuantity(item.result)), item.indi_output.time_ranges, item.time_range_code));\r\n                        // alert(val);\r\n\r\n                        if (val !== 0) {\r\n                            num_of_data += 1;\r\n                            sum += parseFloat(val);\r\n                            average = sum / num_of_data\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.Average_Point_Support = average.toFixed(2);\r\n            return this.Average_Point_Support;\r\n        },\r\n        showModals(e_sem_id, empl_id, a_status, immid, nxtid) {\r\n            this.emp_sem_id = e_sem_id;\r\n            this.emp_status = a_status;\r\n            this.imm_id_loc = immid;\r\n            this.nxt_id_loc = nxtid;\r\n            axios.get(\"/semester-accomplishment/get/semestralAccomplishment\", {\r\n                params: {\r\n                    sem_id: e_sem_id,\r\n                    empl_id: empl_id,\r\n                }\r\n            }).then((response) => {\r\n                this.ipcr_accomplishments_review = response.data\r\n                console.log(this.ipcr_accomplishments_review);\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n            this.hideModal2()\r\n            this.hideModal()\r\n            this.displayModal4 = true\r\n        },\r\n        hideModal4() {\r\n            this.displayModal4 = false\r\n        },\r\n        showModal1() {\r\n            this.displayModal = true;\r\n        },\r\n        hideModal() {\r\n            this.displayModal = false;\r\n        },\r\n        hideModal2() {\r\n            this.displayModal2 = false;\r\n        },\r\n        // async\r\n        submitAction(stat, sem_id) {\r\n            // alert(stat);\r\n            var acc = \"\";\r\n            if (stat < 0) {\r\n                acc = \"return\";\r\n            } else if (stat < 2) {\r\n                acc = \"review\";\r\n            } else if (stat < 3) {\r\n                acc = \"approve\";\r\n            } else {\r\n                acc = \"final approve\";\r\n            }\r\n            console.log(this.ipcr_accomplishments_review.sem)\r\n            let text = \"Are you sure you want to \" + acc + \" this accomplishment?\";\r\n            // alert(this.id_accomp_selected)\r\n            // alert(\"/ipcrtargets/\" + ipcr_id + \"/\"+ this.id+\"/delete\")/review/approve/\r\n            if (confirm(text) == true) {\r\n                //'/approve/semestral-accomplishments/up/stat/acc/{status}/{acc_id}'\r\n                // /approve/semestral-accomplishments/{status}/{acc_id}\r\n                var myurl = \"/approve/semestral-accomplishments/up/stat/acc/\" + stat + \"/\" + this.emp_sem_id\r\n                // alert(myurl)\r\n                // alert(this.form.remarks);\r\n                // alert(this.empl_id)\r\n                this.form.employee_code = this.ipcr_accomplishments_review.sem.employee_code;\r\n                // await axios\r\n                this.$inertia.post(myurl, {\r\n                    params: {\r\n                        remarks: this.form.remarks,\r\n                        employee_code: this.form.employee_code,\r\n                        Average_Point_Core: this.Average_Point_Core,\r\n                        Average_Point_Support: this.Average_Point_Support,\r\n                    }\r\n                });\r\n            }\r\n            this.hideModal4();\r\n        },\r\n        async showModal2(my_id, empl_id, e_name, e_year, e_sem, e_stat) {\r\n            this.emp_name = e_name;\r\n            this.emp_year = e_year;\r\n            this.emp_sem = e_sem;\r\n            this.emp_status = e_stat;\r\n            this.emp_sem_id = my_id;\r\n            this.empl_id = empl_id;\r\n            // alert('ipcr_sem: '+my_id+' emp_code: '+empl_id)\r\n            await axios.get(\"/ipcrtargets/get/ipcr/targets/2\", {\r\n                params: {\r\n                    sem_id: my_id,\r\n                    empl_id: empl_id\r\n                }\r\n            }).then((response) => {\r\n                this.ipcr_targets = response.data;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n            this.displayModal2 = true;\r\n        },\r\n        parseQuantity(quantarr) {\r\n            // Remove brackets and split by commas, then convert to numbers\r\n            const cleanedString = quantarr.replace(/[\\[\\]]/g, '');\r\n            const numberArray = cleanedString.split(',').map(Number);\r\n            //this.length = numberArray[0].quantity.length\r\n            return numberArray;\r\n        },\r\n        submitActionProb(stat) {\r\n            //alert(stat);\r\n            var acc = \"\";\r\n            if (stat < 2) {\r\n                acc = \"review\";\r\n            } else {\r\n                acc = \"approve\";\r\n            }\r\n            let text = \"Are you sure you want to \" + acc + \" the IPCR Target?\";\r\n            // alert(\"/ipcrtargets/\" + ipcr_id + \"/\"+ this.id+\"/delete\")\r\n            if (confirm(text) == true) {\r\n                this.$inertia.post(\"/review/approve/\" + stat + \"/\" + this.emp_sem_id + \"/probationary\");\r\n            }\r\n            this.hideModal2();\r\n        },\r\n        showModal3() {\r\n            // alert(\"empl_id: \" + this.empl_id + \" id: \" + this.id_accomp_selected + \" e_sem: \" + this.emp_sem);\r\n\r\n            if (this.emp_sem === \"1\" || this.emp_sem === \"2\") {\r\n                this.form.type = \"ipcr_semestrals\";\r\n            } else {\r\n                this.form.type = \"probationary/temporary\"\r\n            }\r\n            this.form.ipcr_semestral_id = this.emp_sem_id\r\n            this.form.employee_code = this.empl_id\r\n            this.hideModal2()\r\n            this.hideModal()\r\n            // alert(\"ipcr_semestral_id: \" + this.form.ipcr_semestral_id +\r\n            //     \" ipcr_semestral_id: \" + this.form.ipcr_semestral_id +\r\n            //     \" ipcr_semestral_id: \" + this.form.ipcr_semestral_id)\r\n            // this.displayModal3 = true\r\n        },\r\n        hideModal3() {\r\n            this.displayModal3 = false;\r\n        },\r\n        submitReturnReason() {\r\n            // alert(\"Type: \" + this.form.type + \"; ipcr_semestral_id: \" +\r\n            //     this.form.ipcr_semestral_id + \"; employee_code: \" +\r\n            //     this.form.employee_code + \"; remarks: \" +\r\n            //     this.form.remarks)\r\n            let text = \"Are you sure you want to return this IPCR?\";\r\n\r\n            if (confirm(text) == true) {\r\n                if (this.form.remarks) {\r\n                    //this.$inertia.post(\"/return/remarks\" + id+\"/\"+this.idmfo);\r\n                    this.form.post(\"/return/accomplishments/remarks\", this.form);\r\n                } else {\r\n                    alert(\"Input remarks!\")\r\n                }\r\n            }\r\n            this.hideModal()\r\n            this.hideModal2()\r\n            this.cancelReason()\r\n\r\n        },\r\n        cancelReason() {\r\n            this.hideModal3()\r\n            this.form.remarks = \"\";\r\n            this.form.type = \"\";\r\n            this.form.ipcr_semestral_id = \"\";\r\n            this.form.employee_code = \"\";\r\n        },\r\n        QuantityRate(id, quantity, target) {\r\n\r\n            var result;\r\n            if (id == 1) {\r\n                var total = Math.round(quantity / target * 100)\r\n                if (total >= 130) {\r\n                    result = \"5\"\r\n                } else if (total <= 129 && total >= 115) {\r\n                    result = \"4\"\r\n                } else if (total <= 114 && total >= 90) {\r\n                    result = \"3\"\r\n                } else if (total <= 89 && total >= 51) {\r\n                    result = \"2\"\r\n                } else if (total <= 50) {\r\n                    result = \"1\"\r\n                } else\r\n                    result = \"\"\r\n            } else if (id == 2) {\r\n                var total = Math.round(quantity / target * 100)\r\n                if (total == 100) {\r\n                    result = 5\r\n                } else {\r\n                    result = 2\r\n                }\r\n\r\n            }\r\n            // console.log(target);\r\n            return result;\r\n        },\r\n        QualityRate(id, quality, total) {\r\n            var result;\r\n            if (id == 1) {\r\n                if (total == 0) {\r\n                    result = \"5\"\r\n                } else if (total >= .01 && total <= 2.99) {\r\n                    result = \"4\"\r\n                } else if (total >= 3 && total <= 4.99) {\r\n                    result = \"3\"\r\n                } else if (total >= 5 && total <= 6.99) {\r\n                    result = \"2\"\r\n                } else if (total >= 7) {\r\n                    result = \"1\"\r\n                }\r\n            } else if (id == 2) {\r\n                if (total == 5) {\r\n                    result = \"5\"\r\n                } else if (total >= 4 && total <= 4.99) {\r\n                    result = \"4\"\r\n                } else if (total >= 3 && total <= 3.99) {\r\n                    result = \"3\"\r\n                } else if (total >= 2 && total <= 2.99) {\r\n                    result = \"2\"\r\n                } else if (total >= 1 && total <= 1.99) {\r\n                    result = \"1\"\r\n                } else {\r\n                    result = \"0\"\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        QuantityType(id) {\r\n            var result;\r\n            if (id == 1) {\r\n                result = \"TO BE RATED\"\r\n            } else {\r\n                result = \"ACCURACY RULE (100%=5,2 if less than 100%)\"\r\n            }\r\n            return result;\r\n        },\r\n        QualityType(id) {\r\n            var result;\r\n            if (id == 1) {\r\n                result = \"NO. OF ERROR\"\r\n            } else if (id == 2) {\r\n                result = \"AVE. FEEDBACK\"\r\n            } else if (id == 3) {\r\n                result = \"NOT TO BE RATED\"\r\n            } else if (id == 4) {\r\n                result = \"ACCURACY RULE\"\r\n            }\r\n            return result;\r\n        },\r\n        // AverageRate(QuantityID, QualityID, quantity, target, total, quality) {\r\n        //     var Quantity = this.QuantityRate(QuantityID, quantity, target)\r\n        //     var Quality = this.QualityRate(QualityID, quality, total)\r\n        //     var Timeliness = 0\r\n        //     var Average = (parseFloat(Quantity) + parseFloat(Quality) + parseFloat(Timeliness)) / 3\r\n        //     return this.format_number_conv(Average, 2, true)\r\n        //     // return this.format_number_conv\r\n        // },\r\n        getPercentQuantity(total_quantity, monthly_target) {\r\n            var score = 0;\r\n            var my_score = \"\";\r\n            if (monthly_target == 0) {\r\n                my_score = \"0\";\r\n            } else {\r\n                score = total_quantity / monthly_target;\r\n                score = score * 100;\r\n                my_score = this.format_number_conv(score, 2, true);\r\n            }\r\n            return my_score;\r\n        },\r\n        showModalDaily() {\r\n            this.displayModalDaily = true;\r\n        },\r\n        hideModalDaily() {\r\n            this.displayModalDaily = false;\r\n        },\r\n        viewDailyAccomplishments(emp_code, sem, yval) {\r\n            // alert(this.emp_code);\r\n            //var office_ind = document.getElementById(\"selectOffice\").selectedIndex;\r\n\r\n            // this.office =this.auth.user.office.office;\r\n            // var pg_head = this.functions.DEPTHEAD;\r\n            // var forFFUNCCOD = this.auth.user.office.department_code;\r\n            this.my_link = this.viewlinkaa(emp_code, sem, yval);\r\n\r\n            this.showModalDaily();\r\n        },\r\n        viewlinkaa(username, sem, yval) {\r\n            //var linkt =\"abcdefghijklo534gdmoivndfigudfhgdyfugdhfugidhfuigdhfiugmccxcxcxzczczxczxczxcxzc5fghjkliuhghghghaaa555l&&&&-\";\r\n            // var date_from =\r\n            var moval_beg = 1;\r\n            var moval_lst = 6;\r\n            if (sem > 1) {\r\n                moval_beg = 7;\r\n                moval_lst = 12;\r\n            }\r\n            var linkt = \"http://\";\r\n            var date_from = new Date(yval, moval_beg - 1, 1).toISOString().split('T')[0];\r\n            var date_to = new Date(yval, moval_lst, 0).toISOString().split('T')[0];\r\n            var jasper_ip = this.jasper_ip;\r\n            var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA%2CSales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2FIPCR%2FDaily_Accomplishment&reportUnit=%2Freports%2FIPCR%2FDaily_Accomplishment%2FIPCR_Daily&standAlone=true&decorate=no&output=pdf';\r\n            var params = '&username=' + username + '&date_from=' + date_from + '&date_to=' + date_to;\r\n            var linkl = linkt + jasper_ip + jasper_link + params;\r\n\r\n            return linkl;\r\n        },\r\n    }\r\n};\r\n</script>\r\n<style>\r\n.row-centered {\r\n    text-align: center;\r\n}\r\n\r\n.col-centered {\r\n    display: inline-block;\r\n    float: none;\r\n    text-align: left;\r\n    margin-right: -4px;\r\n}\r\n\r\n.pos {\r\n    position: top;\r\n    top: 240px;\r\n}\r\n</style>\r\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Approve.vue?vue&type=style&index=0&id=86e5b84c&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render } from \"./Approve.vue?vue&type=template&id=86e5b84c\"\nimport script from \"./Approve.vue?vue&type=script&lang=js\"\nexport * from \"./Approve.vue?vue&type=script&lang=js\"\n\nimport \"./Approve.vue?vue&type=style&index=0&id=86e5b84c&lang=css\"\n\nimport exportComponent from \"C:\\\\xampp\\\\htdocs\\\\ipcr77impersonate\\\\ipcr\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div \r\n        id=\"sidebar-wrapper\" \r\n        class=\"sidebar-nav nav navbar-inverse\" \r\n    >\r\n        <div class=\"row\" style=\"width: 380px;\">\r\n            <div class=\"bgc-white\">  \r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLiveLabel\">Filtering</h5>\r\n                    <button type=\"button\" class=\"btn-close\" @click=\"$emit('closeFilter')\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <slot></slot>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        title: String,\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    #sidebar-wrapper {\r\n        width: auto;\r\n        margin-top: -9px;\r\n        z-index: 1000;\r\n        position: fixed;\r\n        right: 250px;\r\n        height: 100%;\r\n        margin-right: -250px;\r\n        overflow-y: auto;\r\n        -webkit-transition: all 0.5s ease;\r\n        -moz-transition: all 0.5s ease;\r\n        -o-transition: all 0.5s ease;\r\n        transition: all 0.5s ease;\r\n    }\r\n</style>\r\n\r\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Filter.vue?vue&type=style&index=0&id=59d90c2b&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render } from \"./Filter.vue?vue&type=template&id=59d90c2b\"\nimport script from \"./Filter.vue?vue&type=script&lang=js\"\nexport * from \"./Filter.vue?vue&type=script&lang=js\"\n\nimport \"./Filter.vue?vue&type=style&index=0&id=59d90c2b&lang=css\"\n\nimport exportComponent from \"C:\\\\xampp\\\\htdocs\\\\ipcr77impersonate\\\\ipcr\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n        <!--\r\n            I intend to recreate a simple pagination [simplePaginate()] for performance purpose\r\n            read https://laravel.com/docs/8.x/pagination#simple-pagination\r\n\r\n            If you think you will not have huge dataset in the future you can use\r\n            the paginate() by uncommenting below and in the actual component.\r\n        -->\r\n\r\n        <!-- <Component\r\n            :is=\"link.url ? 'Link' : 'span'\"\r\n            v-for=\"link in links\"\r\n            :href=\"link.url\"\r\n            v-html=\"link.label\"\r\n            class=\"p-3 text-decoration-none\"\r\n            :class=\"{'text-muted' : !link.url, 'fw-bold' : link.active}\"\r\n        /> -->\r\n        <ul class=\"pagination\">\r\n            <li class=\"page-item\">\r\n                <Link class=\"page-link\" :href=\"prev\" v-if=\"prev\" preserve-scroll>Previous</Link>\r\n                <span class=\"page-link\" :class=\"{ 'text-muted' : !prev }\" v-else >Previous</span>\r\n            </li>\r\n            <li class=\"page-item\">\r\n                <Link class=\"page-link\" :href=\"next\" v-if=\"next\" preserve-scroll>Next</Link>\r\n                <span class=\"page-link\" :class=\"{ 'text-muted' : !next }\" v-else >Next</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        prev: String,\r\n        next: String\r\n    }\r\n}\r\n</script>\r\n\r\n","import { render } from \"./Pagination.vue?vue&type=template&id=6df70320\"\nimport script from \"./Pagination.vue?vue&type=script&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\xampp\\\\htdocs\\\\ipcr77impersonate\\\\ipcr\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"permissions-modal\">\r\n        <div class=\"modal\" tabindex=\"-1\" role=\"dialog\">\r\n            <div class=\"modal-dialog modal-xl\">\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <div class=\"modal-content\" style=\"width: 100% !important; height: 40% !important; \">\r\n                        <div class=\"modal-header\" style=\"background-color:#030014\">\r\n                            <h4 class=\"modal-title\" style=\"color: #ffe819; text-align: center !important;\">\r\n                                <b>PRINT PREVIEW</b>\r\n                            </h4>\r\n                            <button type=\"button\" class=\"btn btn-danger\" style=\"font-weight: bold; color: white\" data-dismiss=\"modal\" aria-label=\"Close\" @click=\"closeModal\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                        <!--<p>Modal body text goes here.</p>\r\n                        <multiselect v-model=\"value\" :options=\"options\" mode=\"tags\"/>-->\r\n                        <slot></slot>\r\n                        </div>\r\n                        <div class=\"modal-footer\" style=\"background-color:#090137\">\r\n                        <!--<button type=\"button\" class=\"btn btn-primary\" @click=\"saveChanges\">Save changes</button>\r\n                        <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeModal\">Close</button>-->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n  </template>\r\n\r\n  <script>\r\n    export default {\r\n      props: {\r\n          //userId: Object,\r\n      },\r\n      data(){\r\n          return{\r\n              //my_id: this.props.userId,\r\n              value: null,\r\n              options: [\r\n                  'Batman',\r\n                  'Robin',\r\n                  'Joker',\r\n                  ],\r\n          }\r\n      },\r\n      mounted(){\r\n\r\n      },\r\n      methods: {\r\n        logU_ID(){\r\n\r\n        },\r\n        closeModal() {\r\n          this.$emit('close-modal-event');\r\n        },\r\n        saveChanges() {\r\n          this.closeModal();\r\n        },\r\n        loadPermissions(){\r\n\r\n        }\r\n      }\r\n    }\r\n  </script>\r\n\r\n  <style scoped>\r\n    /* Override default value of 'none' */\r\n    .modal {\r\n      display: block;\r\n    }\r\n  </style>\r\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./PrintModal.vue?vue&type=style&index=0&id=8ec2bb50&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render } from \"./PrintModal.vue?vue&type=template&id=8ec2bb50&scoped=true\"\nimport script from \"./PrintModal.vue?vue&type=script&lang=js\"\nexport * from \"./PrintModal.vue?vue&type=script&lang=js\"\n\nimport \"./PrintModal.vue?vue&type=style&index=0&id=8ec2bb50&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\xampp\\\\htdocs\\\\ipcr77impersonate\\\\ipcr\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8ec2bb50\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","_createElementVNode","class","type","xmlns","width","height","fill","viewBox","d","style","rowspan","colspan","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","test","_unsupportedIterableToArray","_nonIterableSpread","props","accomplishments","pghead","filters","computed","quantityArray","_ref","allArrays","this","ipcr_targets","map","target","JSON","parse","quantity","mergedArray","concat","apply","data","report_link","my_link","displayModal","modal_title","ipcr_accomplishments","ipcr_accomplishments_review","core_support","emp_sem_id","emp_name","emp_year","emp_sem","emp_status","empl_id","imm_id_loc","nxt_id_loc","Average_Point_Core","Average_Point_Support","displayModal2","displayModal3","displayModal4","displayModalDaily","id_accomp_selected","pg_head","form","useForm","remarks","ipcr_semestral_id","employee_code","ipcr_monthly_accomplishment_id","search","$props","watch","_","debounce","$inertia","get","preserveScroll","preserveState","replace","components","Pagination","Filtering","Modal","Modal2","Modal3","Modal4","ModalDaily","mounted","calculateAverageSupport","calculateAverageCore","methods","_defineProperty","sem","result","Status","status","getAdjectivalRating","Score","QualityRate","total","GetSumQuantity","Item","sumBy","Number","QualityRating","quality_type","quality_score","QualityTypes","score","Math","round","GetSumQuality","average_quality","CountMonth","TimeRatings","Ave_Time","Range","Time_Code","equivalent_time_from","rating","equivalent_time_to","error","TotalTime","obj","average_time","AveTime","Time","TotalQuantity","AverageRate","QuantityRating","TimeRating","NotZero","parseFloat","filter","average","reduce","sum","format_number_conv","_this","num_of_data","item","ipcr_type","val","QuantityRate","quantity_type","quantity_sem","quality_error","indi_output","time_ranges","time_range_code","toFixed","_this2","showModals","e_sem_id","a_status","immid","nxtid","_this3","axios","params","sem_id","response","console","log","hideModal2","hideModal","hideModal4","showModal1","submitAction","stat","acc","confirm","myurl","post","showModal2","my_id","e_name","e_year","e_sem","e_stat","_this4","_callee","_context","arguments","_next","_throw","parseQuantity","quantarr","split","submitActionProb","showModal3","hideModal3","submitReturnReason","alert","cancelReason","quality","total_quantity","monthly_target","my_score","emp_code","yval","viewlinkaa","showModalDaily","username","moval_beg","moval_lst","date_from","Date","toISOString","date_to","jasper_ip","options","locals","_createVNode","_component_Head","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","$data","$event","placeholder","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_createElementBlock","_Fragment","_renderList","accomp","_hoisted_14","_toDisplayString","employee_name","_ctx","getPeriod","year","getStatus","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","onClick","$options","imm_id","next_higher_id","_hoisted_19","_hoisted_20","_hoisted_21","viewDailyAccomplishments","_hoisted_22","_component_pagination","next_page_url","prev_page_url","_createBlock","_component_Modal","onCloseModalEvent","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","src","_hoisted_37","autocomplete","_hoisted_38","_hoisted_39","_hoisted_40","_cache","_hoisted_41","_component_Modal2","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","index","key","_hoisted_53","_hoisted_57","ipcr_code","_hoisted_58","individual_output","quant","_hoisted_59","_hoisted_63","_hoisted_64","_hoisted_65","_component_Modal3","_hoisted_66","_hoisted_67","_hoisted_68","_component_ModalDaily","hideModalDaily","_hoisted_69","_component_Modal4","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","user_employee","first_name","last_name","_hoisted_75","position_title1","_hoisted_76","sem_data","status_accomplishment","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","dat","_hoisted_83","_hoisted_84","mfo_desc","success_indicator","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_89","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_93","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","_hoisted_100","_hoisted_101","latest_return_remark","_hoisted_102","_hoisted_103","_hoisted_104","_hoisted_105","_hoisted_106","title","String","$emit","_renderSlot","$slots","_component_Link","href","_normalizeClass","tabindex","role","logU_ID","closeModal","saveChanges","loadPermissions","undefined"],"sourceRoot":""}