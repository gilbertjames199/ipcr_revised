{"version":3,"file":"js/6855.js","mappings":"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","sources":["webpack:///./resources/js/Pages/IPCR/Review_Accomplishments/Index.vue?ed55","webpack:///./resources/js/Shared/Filter.vue?a4f9","webpack:///./resources/js/Shared/PrintModal.vue?8db7","webpack:///./resources/js/Pages/IPCR/Review_Accomplishments/Index.vue","webpack:///./resources/js/Pages/IPCR/Review_Accomplishments/Index.vue?4d15","webpack:///./resources/js/Pages/IPCR/Review_Accomplishments/Index.vue?fd07","webpack:///./resources/js/Shared/Filter.vue","webpack:///./resources/js/Shared/Filter.vue?7d64","webpack:///./resources/js/Shared/Filter.vue?d639","webpack:///./resources/js/Shared/Pagination.vue","webpack:///./resources/js/Shared/Pagination.vue?ddc2","webpack:///./resources/js/Shared/PrintModal.vue","webpack:///./resources/js/Shared/PrintModal.vue?c606","webpack:///./resources/js/Shared/PrintModal.vue?4030"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".row-centered{text-align:center}.col-centered{display:inline-block;float:none;margin-right:-4px;text-align:left}.pos{position:top;top:240px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/IPCR/Review_Accomplishments/Index.vue\"],\"names\":[],\"mappings\":\"AA46CA,cACI,iBACJ,CAEA,cACI,oBAAqB,CACrB,UAAW,CAEX,iBAAkB,CADlB,eAEJ,CAEA,KACI,YAAa,CACb,SACJ\",\"sourcesContent\":[\"<template>\\r\\n\\r\\n    <Head>\\r\\n        <title>Home</title>\\r\\n    </Head>\\r\\n\\r\\n    <!--<p style=\\\"text-align: justify;\\\">Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos, qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit amet consectetur.\\r\\n    </p>-->\\r\\n    <div class=\\\"row gap-20 masonry pos-r\\\">\\r\\n        <div class=\\\"peers fxw-nw jc-sb ai-c\\\">\\r\\n            <!--SEMESTRAL***************************************************************************************-->\\r\\n            <h3>Review/Approve Monthly Accomplishment</h3>\\r\\n            <div class=\\\"peers\\\">\\r\\n                <div class=\\\"peer mR-10\\\">\\r\\n                    <input v-model=\\\"search\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Search...\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"masonry-sizer col-md-6\\\"></div>\\r\\n        <div class=\\\"masonry-item w-100\\\">\\r\\n            <div class=\\\"row gap-20\\\"></div>\\r\\n            <div class=\\\"bgc-white p-20 bd\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-sm table-borderless table-striped table-hover\\\">\\r\\n                        <thead>\\r\\n                            <tr class=\\\"bg-secondary text-white\\\">\\r\\n                                <th></th>\\r\\n                                <th>Name</th>\\r\\n                                <th>Period</th>\\r\\n                                <th>Month</th>\\r\\n                                <th>Status</th>\\r\\n                                <!-- <th>Sem ID</th> -->\\r\\n                                <th>Actions</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr v-for=\\\"accomp in accomplishments.data\\\">\\r\\n                                <td></td>\\r\\n                                <td>{{ accomp.employee_name }}</td>\\r\\n                                <td>\\r\\n                                    {{ getPeriod(accomp.sem, accomp.year) }}\\r\\n                                </td>\\r\\n                                <td>{{ getMonthName(accomp.month) }} </td>\\r\\n                                <!-- <td>{{ accomp.id }} - {{ accomp.accomp_id }}</td> - {{ accomp.month }}-->\\r\\n                                <td>\\r\\n                                    {{ getStatus(accomp.a_status) }}\\r\\n                                    <!-- --- {{ accomp }} -->\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"dropdown dropstart\\\">\\r\\n                                        <button class=\\\"btn btn-secondary btn-sm action-btn\\\" type=\\\"button\\\"\\r\\n                                            id=\\\"dropdownMenuButton1\\\" data-bs-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n                                            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\"\\r\\n                                                fill=\\\"currentColor\\\" class=\\\"bi bi-three-dots\\\" viewBox=\\\"0 0 16 16\\\">\\r\\n                                                <path\\r\\n                                                    d=\\\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\\\" />\\r\\n                                            </svg>\\r\\n                                        </button>\\r\\n                                        <ul class=\\\"dropdown-menu action-dropdown\\\" aria-labelledby=\\\"dropdownMenuButton1\\\">\\r\\n                                            <li v-if=\\\"accomp.sem === '1' || accomp.sem === '2'\\\">\\r\\n                                                <!-- <button class=\\\"dropdown-item\\\" @click=\\\"showModal(accomp.id,\\r\\n                        accomp.empl_id,\\r\\n                        accomp.employee_name,\\r\\n                        accomp.year,\\r\\n                        accomp.sem,\\r\\n                        accomp.a_status,\\r\\n                        accomp.accomp_id,\\r\\n                        accomp.month,\\r\\n                        accomp.position,\\r\\n                        accomp.office,\\r\\n                        accomp.division,\\r\\n                        accomp.immediate,\\r\\n                        accomp.next_higher,\\r\\n                        accomp.id,\\r\\n                        accomp.employment_type_descr\\r\\n                    )\\\">\\r\\n                                                    View Submission\\r\\n                                                </button> -->\\r\\n                                                <button class=\\\"dropdown-item\\\" @click=\\\"showModalMonthly(\\r\\n                        accomp.empl_id,\\r\\n                        accomp.year,\\r\\n                        accomp.id,\\r\\n                        accomp.month,\\r\\n                        accomp.sem,\\r\\n                        accomp.employee_name,\\r\\n                        accomp.office,\\r\\n                        accomp.division,\\r\\n                        accomp.immediate,\\r\\n                        accomp.next_higher,\\r\\n                        accomp.a_status,\\r\\n                        accomp.position,\\r\\n                        accomp.accomp_id\\r\\n                    )\\\">\\r\\n                                                    <!-- empl_id, e_year, idsemestral, my_month, sem -->\\r\\n                                                    View Monthly Accomplishments\\r\\n                                                </button>\\r\\n                                            </li>\\r\\n                                            <li v-else>\\r\\n                                                <button class=\\\"dropdown-item\\\"\\r\\n                                                    @click=\\\"showModal2(accomp.id, accomp.empl_id, accomp.employee_name, accomp.year, accomp.sem, accomp.status)\\\">\\r\\n                                                    View Submission\\r\\n                                                </button>\\r\\n                                            </li>\\r\\n                                            <li>\\r\\n                                                <button class=\\\"dropdown-item\\\"\\r\\n                                                    @click=\\\"viewDailyAccomplishments(accomp.empl_id, accomp.month, accomp.year)\\\">\\r\\n                                                    View Daily Accomplishments\\r\\n                                                </button>\\r\\n                                            </li>\\r\\n                                            <li v-if=\\\"accomp.status === '1'\\\">\\r\\n                                                <Link class=\\\"dropdown-item\\\" :href=\\\"`/ipcrtargets/${accomp.id}`\\\">Approve\\r\\n                                                </Link>\\r\\n                                            </li>\\r\\n                                            <li v-if=\\\"accomp.status === '0'\\\">\\r\\n                                                <Link class=\\\"dropdown-item\\\" :href=\\\"`/ipcrtargets/${accomp.id}`\\\">Review\\r\\n                                                </Link>\\r\\n                                            </li>\\r\\n                                        </ul>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <pagination :next=\\\"accomplishments.next_page_url\\\" :prev=\\\"accomplishments.prev_page_url\\\" />\\r\\n                    Page {{ accomplishments.current_page }}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- <table class=\\\"table table-hover table-bordered border-dark\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"text-dark\\\" style=\\\"background-color: #ffffff;\\\">\\r\\n                        <th rowspan=\\\"2\\\" style=\\\"text-align: center; background-color: #f70505 !important;\\\">\\r\\n                            IPCR\\r\\n                            Code </th>\\r\\n                        <th rowspan=\\\"2\\\">MFO</th>\\r\\n                        <th rowspan=\\\"2\\\">Success Indicator</th>\\r\\n                        <th rowspan=\\\"2\\\"></th>\\r\\n                        <th rowspan=\\\"2\\\"></th>\\r\\n                        <th rowspan=\\\"2\\\">Targets</th>\\r\\n                        <th rowspan=\\\"2\\\">Quantity</th>\\r\\n                        <th colspan=\\\"2\\\">Rating </th>\\r\\n                        <th rowspan=\\\"2\\\">Quality Rate Based On</th>\\r\\n                        <th rowspan=\\\"2\\\">Quality</th>\\r\\n                        <th rowspan=\\\"2\\\">TOT ERROR/AVE FB</th>\\r\\n                        <th rowspan=\\\"2\\\">Prescribed Period</th>\\r\\n                        <th rowspan=\\\"2\\\">Timeliness</th>\\r\\n                        <th rowspan=\\\"2\\\">ave time per doc/activity</th>\\r\\n                        <th rowspan=\\\"2\\\">Remarks</th>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th>Score</th>\\r\\n                        <th>%</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr class=\\\"bg-secondary text-white\\\">\\r\\n                        <td style=\\\"background-color: #f70505;\\\"></td>\\r\\n                        <td colspan=\\\"15\\\"><b>Core Function</b></td>\\r\\n                    </tr>\\r\\n                    <template v-for=\\\"ipc in ipcr_accomplishments\\\">\\r\\n                        <tr v-if=\\\"ipc.ipcr_type == 'Core Function'\\\">\\r\\n                            <td style=\\\"background-color: #f1c19b;\\\">{{ ipc.ipcr_code }}</td>\\r\\n                            <td>{{ ipc.mfo_desc }}</td>\\r\\n                            <td>{{ ipc.success_indicator }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ ipc.quantity_type }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ QuantityType(ipc.quantity_type) }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ ipc.monthly_target }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ ipc.total_quantity }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">\\r\\n                                {{ QuantityRate(ipc.quantity_type, ipc.total_quantity, ipc.month) }} -\\r\\n                            </td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">\\r\\n                                {{ getPercentQuantity(ipc.total_quantity, ipc.monthly_target) }}\\r\\n                            </td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ QualityType(ipc.quality_error) }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ ipc.total_quality }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">\\r\\n                                <p v-if=\\\"isNaN(ipc.total_quality_avg) || ipc.total_quality_avg == null\\\">0\\r\\n                                </p>\\r\\n                                <p v-else> {{\\r\\n                                    format_number_conv(ipc.total_quality_avg, 2, true) }}\\r\\n                                </p>\\r\\n                            </td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ ipc.prescribed_period }} {{ ipc.time_unit\\r\\n                            }}</td>\\r\\n                            <td>{{ ipc.ave_time }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">\\r\\n                                <span v-if=\\\"ipc.monthly_target > 0\\\">\\r\\n                                    {{ format_number_conv(((ipc.total_quantity / ipc.monthly_target) *\\r\\n                                        100), 2, true) }} %\\r\\n                                </span>\\r\\n                                <span v-else>\\r\\n                                    0.00%\\r\\n                                </span>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </template>\\r\\n<tr class=\\\"bg-secondary text-white\\\">\\r\\n    <td style=\\\"background-color: #f70505;\\\"></td>\\r\\n    <td colspan=\\\"15\\\"><b>Support Function</b></td>\\r\\n</tr>\\r\\n<template v-for=\\\"ipc in ipcr_accomplishments\\\">\\r\\n                        <tr v-if=\\\"ipc.ipcr_type == 'Support Function'\\\">\\r\\n                            <td style=\\\"background-color: #f1c19b;\\\">{{ ipc.ipcr_code }}</td>\\r\\n                            <td>{{ ipc.mfo_desc }}</td>\\r\\n                            <td>{{ ipc.success_indicator }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ ipc.quantity_type }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ QuantityType(ipc.quantity_type) }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ ipc.monthly_target }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ ipc.total_quantity }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">\\r\\n                                {{ QuantityRate(ipc.quantity_type, ipc.total_quantity, ipc.month) }} -\\r\\n                            </td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">\\r\\n                                {{ getPercentQuantity(ipc.total_quantity, ipc.monthly_target) }}\\r\\n                            </td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ QualityType(ipc.quality_error) }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ ipc.total_quality }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">\\r\\n                                <p v-if=\\\"isNaN(ipc.total_quality_avg) || ipc.total_quality_avg == null\\\">0\\r\\n                                </p>\\r\\n                                <p v-else> {{\\r\\n                                    format_number_conv(ipc.total_quality_avg, 2, true) }}\\r\\n                                </p>\\r\\n                            </td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">{{ ipc.prescribed_period }} {{ ipc.time_unit\\r\\n                            }}</td>\\r\\n                            <td>{{ ipc.ave_time }}</td>\\r\\n                            <td style=\\\"border-color: #f70505;\\\">\\r\\n                                <span v-if=\\\"ipc.monthly_target > 0\\\">\\r\\n                                    {{ format_number_conv(((ipc.total_quantity / ipc.monthly_target) *\\r\\n                                        100), 2, true) }} %\\r\\n                                </span>\\r\\n                                <span v-else>\\r\\n                                    0.00%\\r\\n                                </span>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </template>\\r\\n</tbody>\\r\\n\\r\\n</table>\\r\\n-->\\r\\n        <!-- {{ report_link }} -->\\r\\n        <Modal v-if=\\\"displayModal\\\" @close-modal-event=\\\"hideModal\\\">\\r\\n            <div class=\\\"justify-content-center\\\">\\r\\n                <!-- {{ report_link }} -->\\r\\n\\r\\n                <div style=\\\"text-align: center\\\">\\r\\n                    <h4>IPCR Accomplishment</h4>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div><b>Employee Name: </b><u>{{ emp_name }}</u></div>\\r\\n                <div>\\r\\n                    <b>Semester/Period: </b>\\r\\n                    <u>\\r\\n                        <span v-if=\\\"emp_sem === '1'\\\">First Semester -January to June, </span>\\r\\n                        <span v-if=\\\"emp_sem === '2'\\\">Second Semester -July to December, </span>\\r\\n                        {{ emp_year }}\\r\\n                    </u>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <b>Status: </b>\\r\\n                    <u>\\r\\n                        <span v-if=\\\"emp_status === '0'\\\">Submitted</span>\\r\\n                        <span v-if=\\\"emp_status === '1'\\\">Reviewed</span>\\r\\n                    </u>\\r\\n                </div>\\r\\n                <div class=\\\"masonry-item w-100\\\">\\r\\n                    <div class=\\\"bgc-white p-20 bd\\\">\\r\\n                        <!-- {{ report_link }} -->\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <iframe :src=\\\"report_link\\\" style=\\\"width:100%; height:450px\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <b>Remarks:</b>\\r\\n                    <input type=\\\"text\\\" v-model=\\\"form.remarks\\\" class=\\\"form-control\\\" autocomplete=\\\"chrome-off\\\"><br>\\r\\n                </div>\\r\\n                <div style=\\\"align: center\\\">\\r\\n                    <span v-if=\\\"imm_id === next_id\\\">\\r\\n                        <!-- {{ imm_id }}\\r\\n\\r\\n                        {{ next_id }} -->\\r\\n                        <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('2')\\\">\\r\\n                            Approve\\r\\n                        </button>&nbsp;\\r\\n                        <button class=\\\"btn btn-danger text-white\\\" @click=\\\"submitAction('-2')\\\">\\r\\n                            Return\\r\\n                        </button>\\r\\n                    </span>\\r\\n                    <span v-else>\\r\\n                        <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('1')\\\" v-if=\\\"emp_status === '0'\\\">\\r\\n                            Review\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('2')\\\" v-if=\\\"emp_status === '1'\\\">\\r\\n                            Approve\\r\\n                        </button>&nbsp;\\r\\n                        <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('3')\\\" v-if=\\\"emp_status === '2'\\\">\\r\\n                            Final Approve\\r\\n                        </button>&nbsp;\\r\\n\\r\\n                        <button class=\\\"btn btn-danger text-white\\\" @click=\\\"submitAction('-2')\\\">\\r\\n                            Return\\r\\n                        </button>\\r\\n                    </span>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </Modal>\\r\\n        <Modal2 v-if=\\\"displayModal2\\\" @close-modal-event=\\\"hideModal2\\\">\\r\\n            <div class=\\\"justify-content-center\\\">\\r\\n                <div style=\\\"text-align: center\\\">\\r\\n                    <h4>IPCR Targets</h4>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div><b>Employee Name: </b><u>{{ emp_name }}</u></div>\\r\\n                <!-- lendsgth: {{ length }}\\r\\n                ipcr_targets: {{ ipcr_targets[0].quantity }} -->\\r\\n                <!-- quantityArray : {{ quantityArray() }} -->\\r\\n                <div class=\\\"masonry-item w-100\\\">\\r\\n                    <div class=\\\"bgc-white p-20 bd\\\">\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <div v-if=\\\"ipcr_targets && ipcr_targets.length > 0\\\">\\r\\n                                <table class=\\\"table table-hover table-bordered border-dark\\\">\\r\\n                                    <!-- v-if=\\\"ipcr_targets[0].quantity\\\" -->\\r\\n                                    <tr class=\\\"text-dark\\\" style=\\\"background-color: #B7DEE8;\\\">\\r\\n                                        <th>IPCR Code</th>\\r\\n                                        <th>Individual Final Output\\r\\n                                            {{ ipcr_targets[0].quantity }}\\r\\n                                        </th>\\r\\n\\r\\n                                        <th v-for=\\\"(item, index) in parseQuantity(ipcr_targets[0].quantity)\\\"\\r\\n                                            :key=\\\"index\\\">\\r\\n                                            Month {{ index + 1 }}\\r\\n                                        </th>\\r\\n                                    </tr>\\r\\n                                    <tr class=\\\"bg-secondary text-white\\\">\\r\\n                                        <td>{{ }}</td>\\r\\n                                        <td :colspan=\\\"9 + parseFloat(parseQuantity(ipcr_targets[0].quantity).length)\\\">\\r\\n                                            <b>Core Function</b>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr v-for=\\\"target in ipcr_targets\\\">\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Core Function'\\\"\\r\\n                                            style=\\\"text-align: center; background-color: #edd29d\\\">{{ target.ipcr_code }}\\r\\n                                        </td>\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Core Function'\\\">{{ target.individual_output }}\\r\\n                                        </td>\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Core Function'\\\"\\r\\n                                            v-for=\\\"(quant, index) in parseQuantity(target.quantity)\\\" :key=\\\"index\\\">{{\\r\\n                        quant\\r\\n                    }}</td>\\r\\n                                    </tr>\\r\\n                                    <tr class=\\\"bg-secondary text-white\\\">\\r\\n                                        <td>{{ }}</td>\\r\\n                                        <td :colspan=\\\"9 + parseFloat(parseQuantity(ipcr_targets[0].quantity).length)\\\">\\r\\n                                            <b>Support Function</b>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr v-for=\\\"target in ipcr_targets\\\">\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Support Function'\\\"\\r\\n                                            style=\\\"text-align: center; background-color: #edd29d\\\">{{ target.ipcr_code }}\\r\\n                                        </td>\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Support Function'\\\">{{ target.individual_output }}\\r\\n                                        </td>\\r\\n                                        <td v-if=\\\"target.ipcr_type == 'Support Function'\\\"\\r\\n                                            v-for=\\\"(quant, index) in parseQuantity(target.quantity)\\\" :key=\\\"index\\\">{{\\r\\n                        quant\\r\\n                    }}</td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div style=\\\"align: center\\\">\\r\\n                            <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitActionProb('1')\\\"\\r\\n                                v-if=\\\"emp_status === '0'\\\">\\r\\n                                Review\\r\\n                            </button>\\r\\n                            <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitActionProb('2')\\\"\\r\\n                                v-if=\\\"emp_status === '1'\\\">\\r\\n                                Approve\\r\\n                            </button>&nbsp;\\r\\n                            <button class=\\\"btn btn-danger text-white\\\" @click=\\\"showModal3()\\\">\\r\\n                                Return\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </Modal2>\\r\\n        <Modal3 v-if=\\\"displayModal3\\\" @close-modal-event=\\\"hideModal3\\\">\\r\\n            <h3>Remarks</h3>\\r\\n            <h5>State the reason for not reviewing/approving IPCR</h5>\\r\\n            <input type=\\\"text\\\" v-model=\\\"form.remarks\\\" class=\\\"form-control\\\" autocomplete=\\\"chrome-off\\\"><br>\\r\\n            <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitReturnReason()\\\">\\r\\n                Done\\r\\n            </button>&nbsp;\\r\\n            <button class=\\\"btn btn-danger text-white\\\" @click=\\\"cancelReason()\\\">\\r\\n                Cancel\\r\\n            </button>\\r\\n        </Modal3>\\r\\n        <ModalDaily v-if=\\\"displayModalDaily\\\" @close-modal-event=\\\"hideModalDaily\\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <iframe :src=\\\"my_link\\\" style=\\\"width:100%; height:450px\\\" />\\r\\n            </div>\\r\\n        </ModalDaily>\\r\\n        <ModalMonthly v-if=\\\"displayModalMonthly\\\" @close-modal-event=\\\"hideModalMonthly\\\">\\r\\n            <!-- {{ form }}\\r\\n            {{ id_accomp_selected }}\\r\\n            core_support: {{ core_support }}\\r\\n            Average_Point_Core: {{ Average_Point_Core }}\\r\\n            Average_Point_Support: {{ Average_Point_Support }} -->\\r\\n            <div class=\\\"masonry-item w-100\\\">\\r\\n\\r\\n                <div class=\\\"bgc-white p-20 bd\\\">\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-sm table-borderless\\\">\\r\\n                            <!-- <tr>\\r\\n                                <td colspan=\\\"2\\\">\\r\\n                                    {{ emp_office }}\\r\\n                                </td>\\r\\n                            </tr> -->\\r\\n                            <tr>\\r\\n                                <td>\\r\\n                                    <div><b>Employee name: </b><u>{{ emp_name }}</u></div>\\r\\n                                    <div>\\r\\n                                        <b>Semester/Period: </b>\\r\\n                                        <u>\\r\\n                                            <span v-if=\\\"emp_sem === '1'\\\">First Semester -January to June, </span>\\r\\n                                            <span v-if=\\\"emp_sem === '2'\\\">Second Semester -July to December, </span>\\r\\n                                            {{ emp_year }}\\r\\n                                        </u>\\r\\n                                    </div>\\r\\n                                    <div><b>Month: </b><u>{{ emp_month }}</u></div>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div><b>Division: </b><u>{{ emp_division }}</u></div>\\r\\n                                    <div><b>Position: </b>\\r\\n                                        <u>{{ emp_position }}</u>\\r\\n                                    </div>\\r\\n                                    <div>\\r\\n                                        <b>Status: </b>\\r\\n                                        <u>\\r\\n                                            <span v-if=\\\"emp_status === '0'\\\">Submitted</span>\\r\\n                                            <span v-if=\\\"emp_status === '1'\\\">Reviewed</span>\\r\\n                                        </u>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"bgc-white p-20 bd\\\">\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-sm table-bordered border-dark table-hover\\\">\\r\\n                            <thead>\\r\\n                                <tr style=\\\"background-color: #B7DEE8;\\\" class=\\\"text-center table-bordered\\\">\\r\\n                                    <th style=\\\"width: 5%;\\\" rowspan=\\\"2\\\" colspan=\\\"1\\\">IPCR Code</th>\\r\\n                                    <th style=\\\"width: 15%;\\\" rowspan=\\\"2\\\" colspan=\\\"1\\\">Major Final Output</th>\\r\\n                                    <th style=\\\"width: 30%;\\\" rowspan=\\\"2\\\" colspan=\\\"1\\\">Success Indicator</th>\\r\\n                                    <th style=\\\"width: 20%;\\\" colspan=\\\"4\\\">Rating</th>\\r\\n                                    <th style=\\\"width: 20%;\\\" rowspan=\\\"2\\\" colspan=\\\"1\\\">Remarks</th>\\r\\n                                    <!-- <th rowspan=\\\"2\\\" colspan=\\\"1\\\"></th> -->\\r\\n                                </tr>\\r\\n                                <tr style=\\\"background-color: #B7DEE8;\\\" class=\\\"text-center\\\">\\r\\n                                    <th style=\\\"width: 5%;\\\">Quantity Rating</th>\\r\\n                                    <th style=\\\"width: 5%;\\\">Quality Rating</th>\\r\\n                                    <th style=\\\"width: 5%;\\\">Timeliness Rating</th>\\r\\n                                    <th style=\\\"width: 5%;\\\">Average</th>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"8\\\">\\r\\n                                        <b>CORE FUNCTION</b>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <template v-for=\\\"(dat, index) in monthly_api\\\" :key=\\\"index\\\">\\r\\n                                    <tr v-if=\\\"dat.ipcr_type === 'Core Function'\\\" class=\\\"text-center\\\">\\r\\n                                        <td @click=\\\"toggle(dat.idIPCR, index)\\\"\\r\\n                                            style=\\\"cursor: pointer; background-color: lightblue\\\">{{ dat.idIPCR }}\\r\\n                                        </td>\\r\\n                                        <td>{{ dat.mfo_desc }}</td>\\r\\n                                        <td>{{ dat.success_indicator }}</td>\\r\\n                                        <td>{{ dat.month === \\\"0\\\" || dat.month === null ?\\r\\n                        QuantityRate(dat.quantity_type,\\r\\n                            dat.TotalQuantity, 1) :\\r\\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, dat.month)\\r\\n                                            }}\\r\\n                                        </td>\\r\\n                                        <td>{{ QualityRate(dat.quality_error, quality_score(dat.total_quality,\\r\\n                        dat.quality_error)) }}</td>\\r\\n                                        <td>{{ dat.TimeRating }}</td>\\r\\n                                        <td>{{ AverageRating(dat.month === \\\"0\\\" || dat.month === null ?\\r\\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, 1) :\\r\\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, dat.month),\\r\\n                        QualityRate(dat.quality_error, quality_score(dat.total_quality,\\r\\n                            dat.quality_error)), dat.TimeRating === \\\"\\\" ? 0 :\\r\\n                        dat.TimeRating) }}</td>\\r\\n                                        <td>{{ dat.remarks }}</td>\\r\\n\\r\\n                                    </tr>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                                </template>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <b style=\\\"float:right\\\">Average Point Score - Core Function</b>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        {{ Average_Point_Core }}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <b style=\\\"float:right\\\">Multiply by Weighted Allocation</b>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        70%\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <b style=\\\"float:right\\\">Weighted Average Score - Core Function</b>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        {{ (Average_Point_Core * .70).toFixed(2) }}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"8\\\">\\r\\n                                        <b>Support FUNCTION </b>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <template v-for=\\\"(dat, index) in monthly_api\\\" :key=\\\"index\\\">\\r\\n                                    <tr v-if=\\\"dat.ipcr_type === 'Support Function'\\\" class=\\\"text-center\\\">\\r\\n                                        <td @click=\\\"toggle(dat.idIPCR, index)\\\"\\r\\n                                            style=\\\"cursor: pointer; background-color: lightblue \\\">{{ dat.idIPCR }}\\r\\n                                        </td>\\r\\n                                        <td>{{ dat.mfo_desc }}</td>\\r\\n                                        <td>{{ dat.success_indicator }}</td>\\r\\n                                        <td>{{ dat.month === \\\"0\\\" || dat.month === null ?\\r\\n                        QuantityRate(dat.quantity_type,\\r\\n                            dat.TotalQuantity, 1) :\\r\\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, dat.month)\\r\\n                                            }}</td>\\r\\n                                        <td>{{ QualityRate(dat.quality_error, quality_score(dat.total_quality,\\r\\n                        dat.quality_error)) }}</td>\\r\\n                                        <td>{{ dat.TimeRating }}</td>\\r\\n                                        <td>{{ AverageRating(dat.month === \\\"0\\\" || dat.month === null ?\\r\\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, 1) :\\r\\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, dat.month),\\r\\n                        QualityRate(dat.quality_error, quality_score(dat.total_quality,\\r\\n                            dat.quality_error)), dat.TimeRating === \\\"\\\" ? 0 :\\r\\n                        dat.TimeRating) }}</td>\\r\\n                                        <td>{{ dat.remarks }}</td>\\r\\n                                        <!-- <td><button v-if=\\\"dat.remarks == '' || dat.remarks == null\\\"\\r\\n                                                class=\\\"btn btn-primary btn-sm mL-2 text-white\\\"\\r\\n                                                @click=\\\"showModal2(dat.idIPCR, dat.ipcr_semester_id)\\\">Add\\r\\n                                                Remarks</button>\\r\\n                                            <button v-else class=\\\"btn btn-primary btn-sm mL-2 text-white\\\"\\r\\n                                                @click=\\\"showModal3(dat.idIPCR, dat.ipcr_semester_id, dat.remarks, dat.remarks_id)\\\">Edit/Delete\\r\\n                                                Remarks</button>\\r\\n                                        </td> -->\\r\\n                                    </tr>\\r\\n\\r\\n                                </template>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <b style=\\\"float:right\\\">Average Point Score - Support Function</b>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        {{ Average_Point_Support }}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <b style=\\\"float:right\\\">Multiply by Weighted Allocation</b>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        30%\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <b style=\\\"float:right\\\">Weighted Average Score - Support Function</b>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        {{ (Average_Point_Support * .30).toFixed(2) }}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <b style=\\\"float:right\\\">Total Average Score</b>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        {{ getAdjectivalScore(Average_Point_Core * 0.70, Average_Point_Support *\\r\\n                        0.30)\\r\\n                                        }}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <b style=\\\"float:right\\\">Additional Point Intervening Factor - if applicable -\\r\\n                                            Maximum: 0.5 pts</b>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <b style=\\\"float:right\\\">Total Final Average Rating</b>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"background-color: yellow\\\">\\r\\n                                        <b>{{\\r\\n                        getAdjectivalScore(Average_Point_Core * 0.70, Average_Point_Support *\\r\\n                            0.30)\\r\\n                    }}</b>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <b style=\\\"float:right\\\">Final Adjectival Rating</b>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"background-color: yellow\\\">\\r\\n                                        <b>{{ getAdjectivalRating(getAdjectivalScore(Average_Point_Core * 0.70,\\r\\n                        Average_Point_Support * 0.30)) }}</b>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div>\\r\\n                <b>Remarks:</b>\\r\\n                <input type=\\\"text\\\" v-model=\\\"form.remarks\\\" class=\\\"form-control\\\" autocomplete=\\\"chrome-off\\\"><br>\\r\\n            </div>\\r\\n            <div style=\\\"align: center\\\">\\r\\n                <!-- {{ imm_id }}\\r\\n\\r\\n                {{ next_id }} -->\\r\\n                <span v-if=\\\"imm_id === next_id\\\">\\r\\n                    <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('2')\\\">\\r\\n                        Approve\\r\\n                    </button>&nbsp;\\r\\n                    <button class=\\\"btn btn-danger text-white\\\" @click=\\\"submitAction('-2')\\\">\\r\\n                        Return\\r\\n                    </button>\\r\\n                </span>\\r\\n                <span v-else>\\r\\n                    <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('1')\\\" v-if=\\\"emp_status === '0'\\\">\\r\\n                        Review\\r\\n                    </button>\\r\\n                    <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('2')\\\" v-if=\\\"emp_status === '1'\\\">\\r\\n                        Approve\\r\\n                    </button>&nbsp;\\r\\n                    <button class=\\\"btn btn-primary text-white\\\" @click=\\\"submitAction('3')\\\" v-if=\\\"emp_status === '2'\\\">\\r\\n                        Final Approve\\r\\n                    </button>&nbsp;\\r\\n\\r\\n                    <button class=\\\"btn btn-danger text-white\\\" @click=\\\"submitAction('-2')\\\">\\r\\n                        Return\\r\\n                    </button>\\r\\n                </span>\\r\\n\\r\\n            </div>\\r\\n        </ModalMonthly>\\r\\n    </div>\\r\\n</template>\\r\\n<script>\\r\\nimport { useForm } from \\\"@inertiajs/inertia-vue3\\\";\\r\\nimport Filtering from \\\"@/Shared/Filter\\\";\\r\\nimport Pagination from \\\"@/Shared/Pagination\\\";\\r\\nimport Modal from \\\"@/Shared/PrintModal\\\";\\r\\nimport Modal2 from \\\"@/Shared/PrintModal\\\";\\r\\nimport Modal3 from \\\"@/Shared/PrintModal\\\";\\r\\nimport ModalDaily from \\\"@/Shared/PrintModal\\\";\\r\\nimport ModalMonthly from \\\"@/Shared/PrintModal\\\";\\r\\nexport default {\\r\\n    props: {\\r\\n        accomplishments: Object,\\r\\n        filters: Object,\\r\\n        pghead: String\\r\\n    },\\r\\n    computed: {\\r\\n        quantityArray() {\\r\\n            const allArrays = this.ipcr_targets.map(target => JSON.parse(target.quantity));\\r\\n            const mergedArray = [].concat(...allArrays);\\r\\n            var quant = JSON.parse(this.ipcr_targets[0].quantity)\\r\\n            return mergedArray\\r\\n        },\\r\\n    },\\r\\n    data() {\\r\\n        return {\\r\\n            report_link: \\\"\\\",\\r\\n            my_link: \\\"\\\",\\r\\n            displayModal: false,\\r\\n            modal_title: \\\"Add\\\",\\r\\n            ipcr_targets: [],\\r\\n            ipcr_accomplishments: [],\\r\\n            core_support: [],\\r\\n            emp_sem_id: \\\"\\\",\\r\\n            emp_name: \\\"\\\",\\r\\n            emp_year: \\\"\\\",\\r\\n            emp_sem: \\\"\\\",\\r\\n            emp_month: \\\"\\\",\\r\\n            emp_status: \\\"\\\",\\r\\n            emp_position: \\\"\\\",\\r\\n            empl_id: \\\"\\\",\\r\\n            imm_id: \\\"\\\",\\r\\n            next_id: \\\"\\\",\\r\\n            emp_office: \\\"\\\",\\r\\n            emp_division: \\\"\\\",\\r\\n            employment_type_descr: \\\"\\\",\\r\\n            displayModal2: false,\\r\\n            displayModal3: false,\\r\\n            displayModalDaily: false,\\r\\n            displayModalMonthly: false,\\r\\n            length: 0,\\r\\n            id_accomp_selected: \\\"\\\",\\r\\n            form: useForm({\\r\\n                type: \\\"\\\",\\r\\n                remarks: \\\"\\\",\\r\\n                ipcr_semestral_id: \\\"\\\",\\r\\n                employee_code: \\\"\\\",\\r\\n                ipcr_monthly_accomplishment_id: \\\"\\\",\\r\\n            }),\\r\\n            search: this.$props.filters.search,\\r\\n            monthly_api: [],\\r\\n            opened: [],\\r\\n            // show: false,\\r\\n            show: [],\\r\\n            Average_Point_Core: 0,\\r\\n            Average_Point_Support: 0,\\r\\n\\r\\n\\r\\n        }\\r\\n    },\\r\\n    watch: {\\r\\n        search: _.debounce(function (value) {\\r\\n            this.$inertia.get(\\r\\n                \\\"/approve/accomplishments\\\",\\r\\n                { search: value },\\r\\n                {\\r\\n                    preserveScroll: true,\\r\\n                    preserveState: true,\\r\\n                    replace: true,\\r\\n                }\\r\\n            );\\r\\n        }, 300),\\r\\n    },\\r\\n    components: {\\r\\n        Pagination, Filtering, Modal, Modal2, Modal3, ModalDaily, ModalMonthly\\r\\n    },\\r\\n\\r\\n    methods: {\\r\\n        deleteIPCR(ipcr_id) {\\r\\n            // let text = \\\"WARNING!\\\\nAre you sure you want to delete the Research Agenda?\\\";\\r\\n            // // alert(\\\"/ipcrtargets/\\\" + ipcr_id + \\\"/\\\"+ this.id+\\\"/delete\\\")\\r\\n            // if (confirm(text) == true) {\\r\\n            //     this.$inertia.delete(\\\"/ipcrtargets/\\\" + ipcr_id + \\\"/\\\"+ this.id+\\\"/delete\\\");\\r\\n            // }\\r\\n        },\\r\\n        showCreate() {\\r\\n            // this.$inertia.get(\\r\\n            //     \\\"/targets/create\\\",\\r\\n            //     {\\r\\n            //         raao_id: this.raao_id\\r\\n            //     },\\r\\n            //     {\\r\\n            //         preserveScroll: true,\\r\\n            //         preserveState: true,\\r\\n            //         replace: true,\\r\\n            //     }\\r\\n            // );\\r\\n        },\\r\\n        deletePAPS(id) {\\r\\n            // let text = \\\"Are you sure you want to delete the Program and Projects? \\\"+id;\\r\\n            //   if (confirm(text) == true) {\\r\\n            //     this.$inertia.delete(\\\"/paps/\\\" + id+\\\"/\\\"+this.idmfo);\\r\\n            // }\\r\\n        },\\r\\n        getToRep(ffunccod, ffunction, MOOE, PS) {\\r\\n            // alert(data[0].FFUNCCOD);\\r\\n            // var linkt=\\\"http://\\\";\\r\\n            // var jasper_ip = this.jasper_ip;\\r\\n            // var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA,Sales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2Fplanning_system%2FOPCR_Standard&reportUnit=%2Freports%2Fplanning_system%2FOPCR_Standard%2FOPCR&standAlone=true&decorate=no&output=pdf';\\r\\n            // var params = '&id=' + ffunccod + '&FUNCTION=' + ffunction + '&MOOE=' + MOOE + '&PS=' + PS;\\r\\n            // var link1 = linkt + jasper_ip +jasper_link + params;\\r\\n            // return link1;\\r\\n        },\\r\\n\\r\\n        async showModal(my_id, empl_id, e_name, e_year, e_sem, e_stat, accomp_id, month, position, office, division, immediate, next_higher, idsemestral, employment_type_descr) {\\r\\n            this.emp_name = e_name;\\r\\n            this.emp_year = e_year;\\r\\n            this.emp_sem = e_sem;\\r\\n            this.emp_status = e_stat;\\r\\n            this.employment_type_descr = employment_type_descr;\\r\\n            this.emp_sem_id = my_id;\\r\\n            this.empl_id = empl_id;\\r\\n            this.id_accomp_selected = accomp_id;\\r\\n            this.form.ipcr_monthly_accomplishment_id = accomp_id;\\r\\n            let my_month = this.getMonthName(month)\\r\\n            this.form.employee_code = empl_id;\\r\\n            this.imm_id = immediate;\\r\\n            this.next_id = next_higher;\\r\\n            let url = '/calculate-total/accomplishments/monthly/' + my_month + '/' + e_year + '/' + empl_id + '/' + idsemestral;\\r\\n            // alert(empl_id);\\r\\n            await axios.get(url).then((response) => {\\r\\n                this.core_support = response.data;\\r\\n                // console.log(this.core_support.ave_core);\\r\\n            });\\r\\n\\r\\n            var per = this.getMonthName(month)\\r\\n\\r\\n            this.viewlink1(empl_id, e_name, e_stat, position, office, division, immediate, next_higher, e_sem, e_year, idsemestral, per, this.pghead, '33')\\r\\n            this.displayModal = true;\\r\\n\\r\\n        },\\r\\n        viewlink1(emp_code, employee_name, emp_status, position, office, division, immediate, next_higher, sem, year, idsemestral, period, pghead, Average_Score) {\\r\\n\\r\\n            var linkt = \\\"http://\\\";\\r\\n            var jasper_ip = this.jasper_ip;\\r\\n            var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA%2CSales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2FIPCR%2FIPCR_Part1&reportUnit=%2Freports%2FIPCR%2FIPCR_Part1%2FAccomplishment_Part1&standAlone=true&decorate=no&output=pdf';\\r\\n            var params = '&emp_code=' + emp_code + '&employee_name=' + employee_name + '&emp_status=' + this.employment_type_descr + '&position=' + position +\\r\\n                '&office=' + office + '&division=' + division + '&immediate=' + immediate +\\r\\n                '&next_higher=' + next_higher + '&sem=' + sem + '&year=' + year +\\r\\n                '&idsemestral=' + idsemestral + '&period=' + period + '&pghead=' + pghead +\\r\\n                '&Average_Point_Core=' + this.core_support.ave_core +\\r\\n                '&Average_Point_Support=' + this.core_support.ave_support;\\r\\n            var linkl = linkt + jasper_ip + jasper_link + params;\\r\\n            this.report_link = linkl;\\r\\n            return linkl;\\r\\n        },\\r\\n        viewlink(emp_code, employee_name, emp_status, position, office, division, immediate, next_higher, sem, year, idsemestral, period,) {\\r\\n            //var linkt =\\\"abcdefghijklo534gdmoivndfigudfhgdyfugdhfugidhfuigdhfiugmccxcxcxzczczxczxczxcxzc5fghjkliuhghghghaaa555l&&&&-\\\";\\r\\n            var linkt = \\\"http://\\\";\\r\\n            var jasper_ip = this.jasper_ip;\\r\\n            var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA%2CSales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2FIPCR%2FIPCR_Monthly&reportUnit=%2Freports%2FIPCR%2FIPCR_Monthly%2FMonthly_IPCR&standAlone=true&decorate=no&output=pdf';\\r\\n            var params = '&emp_code=' + emp_code + '&employee_name=' + employee_name + '&emp_status=' + emp_status + '&position=' + position + '&office=' + office + '&division=' + division + '&immediate=' + immediate + '&next_higher=' + next_higher + '&sem=' + sem + '&year=' + year + '&idsemestral=' + idsemestral + '&period=' + period + '&Score=' + this.score;\\r\\n            this.form.employee_code = emp_code;\\r\\n            var linkl = linkt + jasper_ip + jasper_link + params;\\r\\n            this.report_link = linkl;\\r\\n            return linkl;\\r\\n        },\\r\\n        hideModal() {\\r\\n            this.displayModal = false;\\r\\n        },\\r\\n        hideModal2() {\\r\\n            this.displayModal2 = false;\\r\\n            this.displayModalDaily = false;\\r\\n        },\\r\\n        // async\\r\\n        submitAction(stat) {\\r\\n            // alert(stat);\\r\\n            var acc = \\\"\\\";\\r\\n            if (stat < 0) {\\r\\n                acc = \\\"return\\\";\\r\\n            } else if (stat < 2) {\\r\\n                acc = \\\"review\\\";\\r\\n            } else if (stat < 3) {\\r\\n                acc = \\\"approve\\\";\\r\\n            } else {\\r\\n                acc = \\\"final approve\\\";\\r\\n            }\\r\\n            let text = \\\"Are you sure you want to \\\" + acc + \\\" the IPCR Target?\\\";\\r\\n            // alert(this.id_accomp_selected)\\r\\n            // alert(\\\"/ipcrtargets/\\\" + ipcr_id + \\\"/\\\"+ this.id+\\\"/delete\\\")/review/approve/\\r\\n            if (confirm(text) == true) {\\r\\n                var myurl = \\\"/approve/accomplishments/\\\" + stat + \\\"/\\\" + this.id_accomp_selected\\r\\n                // await axios\\r\\n                this.$inertia.post(myurl, {\\r\\n                    params: {\\r\\n                        remarks: this.form.remarks,\\r\\n                        employee_code: this.form.employee_code,\\r\\n                        core_support: this.core_support\\r\\n                    }\\r\\n                })\\r\\n                // .then(() => {\\r\\n                //     // Clear the form.remarks after 2 seconds\\r\\n                //     setTimeout(() => {\\r\\n                //         this.form.remarks = \\\"\\\";\\r\\n                //     }, 2000);\\r\\n                // });\\r\\n            }\\r\\n            this.hideModal();\\r\\n            this.hideModalMonthly();\\r\\n            this.clearFormValues();\\r\\n        },\\r\\n        clearFormValues() {\\r\\n            this.form.type = \\\"\\\";\\r\\n            this.form.remarks = \\\"\\\";\\r\\n            this.form.ipcr_semestral_id = \\\"\\\";\\r\\n            this.form.employee_code = \\\"\\\";\\r\\n            this.form.ipcr_monthly_accomplishment_id = \\\"\\\";\\r\\n            this.core_support = [];\\r\\n        },\\r\\n        async showModal2(my_id, empl_id, e_name, e_year, e_sem, e_stat) {\\r\\n            this.emp_name = e_name;\\r\\n            this.emp_year = e_year;\\r\\n            this.emp_sem = e_sem;\\r\\n            this.emp_status = e_stat;\\r\\n            this.emp_sem_id = my_id;\\r\\n            this.empl_id = empl_id;\\r\\n            // alert('ipcr_sem: '+my_id+' emp_code: '+empl_id)\\r\\n            await axios.get(\\\"/ipcrtargets/get/ipcr/targets/2\\\", {\\r\\n                params: {\\r\\n                    sem_id: my_id,\\r\\n                    empl_id: empl_id\\r\\n                }\\r\\n            }).then((response) => {\\r\\n                this.ipcr_targets = response.data;\\r\\n            }).catch((error) => {\\r\\n                console.error(error);\\r\\n            });\\r\\n            this.displayModal2 = true;\\r\\n        },\\r\\n        parseQuantity(quantarr) {\\r\\n            // Remove brackets and split by commas, then convert to numbers\\r\\n            const cleanedString = quantarr.replace(/[\\\\[\\\\]]/g, '');\\r\\n            const numberArray = cleanedString.split(',').map(Number);\\r\\n            //this.length = numberArray[0].quantity.length\\r\\n            return numberArray;\\r\\n        },\\r\\n        submitActionProb(stat) {\\r\\n            //alert(stat);\\r\\n            var acc = \\\"\\\";\\r\\n            if (stat < 2) {\\r\\n                acc = \\\"review\\\";\\r\\n            } else {\\r\\n                acc = \\\"approve\\\";\\r\\n            }\\r\\n            let text = \\\"Are you sure you want to \\\" + acc + \\\" the IPCR Target?\\\";\\r\\n            // alert(\\\"/ipcrtargets/\\\" + ipcr_id + \\\"/\\\"+ this.id+\\\"/delete\\\")\\r\\n            if (confirm(text) == true) {\\r\\n                this.$inertia.post(\\\"/review/approve/\\\" + stat + \\\"/\\\" + this.emp_sem_id + \\\"/probationary\\\");\\r\\n            }\\r\\n            this.hideModal2();\\r\\n        },\\r\\n        showModalDaily() {\\r\\n            this.displayModalDaily = true;\\r\\n        },\\r\\n        showModal3() {\\r\\n            // alert(\\\"empl_id: \\\" + this.empl_id + \\\" id: \\\" + this.id_accomp_selected + \\\" e_sem: \\\" + this.emp_sem);\\r\\n\\r\\n            if (this.emp_sem === \\\"1\\\" || this.emp_sem === \\\"2\\\") {\\r\\n                this.form.type = \\\"ipcr_semestrals\\\";\\r\\n            } else {\\r\\n                this.form.type = \\\"probationary/temporary\\\"\\r\\n            }\\r\\n            this.form.ipcr_semestral_id = this.emp_sem_id\\r\\n            this.form.employee_code = this.empl_id\\r\\n            this.hideModal2()\\r\\n            this.hideModal()\\r\\n            this.hideModalDaily()\\r\\n            // alert(\\\"ipcr_semestral_id: \\\" + this.form.ipcr_semestral_id +\\r\\n            //     \\\" ipcr_semestral_id: \\\" + this.form.ipcr_semestral_id +\\r\\n            //     \\\" ipcr_semestral_id: \\\" + this.form.ipcr_semestral_id)\\r\\n            this.displayModal3 = true\\r\\n        },\\r\\n        hideModal3() {\\r\\n            this.displayModal3 = false;\\r\\n        },\\r\\n        hideModalDaily() {\\r\\n            this.displayModalDaily = false;\\r\\n        },\\r\\n        submitReturnReason() {\\r\\n            alert(\\\"Type: \\\" + this.form.type + \\\"; ipcr_semestral_id: \\\" +\\r\\n                this.form.ipcr_semestral_id + \\\"; employee_code: \\\" +\\r\\n                this.form.employee_code + \\\"; remarks: \\\" +\\r\\n                this.form.remarks)\\r\\n            let text = \\\"Are you sure you want to return this IPCR?\\\";\\r\\n\\r\\n            if (confirm(text) == true) {\\r\\n                if (this.form.remarks) {\\r\\n                    //this.$inertia.post(\\\"/return/remarks\\\" + id+\\\"/\\\"+this.idmfo);\\r\\n                    this.form.post(\\\"/return/accomplishments/remarks\\\", this.form);\\r\\n                } else {\\r\\n                    alert(\\\"Input remarks!\\\")\\r\\n                }\\r\\n            }\\r\\n            this.hideModal()\\r\\n            this.hideModal2()\\r\\n            this.cancelReason()\\r\\n\\r\\n        },\\r\\n        cancelReason() {\\r\\n            this.hideModal3()\\r\\n            this.form.remarks = \\\"\\\";\\r\\n            this.form.type = \\\"\\\";\\r\\n            this.form.ipcr_semestral_id = \\\"\\\";\\r\\n            this.form.employee_code = \\\"\\\";\\r\\n        },\\r\\n        QuantityRate(id, quantity, target) {\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                var total = quantity / target * 100\\r\\n                if (total >= 130) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (total <= 129 && total >= 115) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (total <= 114 && total >= 90) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (total <= 89 && total >= 51) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (total <= 50) {\\r\\n                    result = \\\"1\\\"\\r\\n                } else\\r\\n                    result = \\\"\\\"\\r\\n            } else if (id == 2) {\\r\\n                if (total = 100) {\\r\\n                    result = 5\\r\\n                } else {\\r\\n                    result = 2\\r\\n                }\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        QualityRate(id, quality, total) {\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                if (total == 0) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (total >= .01 && total <= 2.99) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (total >= 3 && total <= 4.99) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (total >= 5 && total <= 6.99) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (total >= 7) {\\r\\n                    result = \\\"1\\\"\\r\\n                }\\r\\n            } else if (id == 2) {\\r\\n                if (total == 5) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (total >= 4 && total <= 4.99) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (total >= 3 && total <= 3.99) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (total >= 2 && total <= 2.99) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (total >= 1 && total <= 1.99) {\\r\\n                    result = \\\"1\\\"\\r\\n                } else {\\r\\n                    result = \\\"0\\\"\\r\\n                }\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        QuantityType(id) {\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                result = \\\"TO BE RATED\\\"\\r\\n            } else {\\r\\n                result = \\\"ACCURACY RULE (100%=5,2 if less than 100%)\\\"\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        QualityType(id) {\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                result = \\\"NO. OF ERROR\\\"\\r\\n            } else if (id == 2) {\\r\\n                result = \\\"AVE. FEEDBACK\\\"\\r\\n            } else if (id == 3) {\\r\\n                result = \\\"NOT TO BE RATED\\\"\\r\\n            } else if (id == 4) {\\r\\n                result = \\\"ACCURACY RULE\\\"\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        AverageRate(QuantityID, QualityID, quantity, target, total, quality) {\\r\\n            var Quantity = this.QuantityRate(QuantityID, quantity, target)\\r\\n            var Quality = this.QualityRate(QualityID, quality, total)\\r\\n            var Timeliness = 0\\r\\n            var Average = (parseFloat(Quantity) + parseFloat(Quality) + parseFloat(Timeliness)) / 3\\r\\n            return this.format_number_conv(Average, 2, true)\\r\\n            // return this.format_number_conv\\r\\n        },\\r\\n        getPercentQuantity(total_quantity, monthly_target) {\\r\\n            var score = 0;\\r\\n            var my_score = \\\"\\\";\\r\\n            if (monthly_target == 0) {\\r\\n                my_score = \\\"0\\\";\\r\\n            } else {\\r\\n                score = total_quantity / monthly_target;\\r\\n                score = score * 100;\\r\\n                my_score = this.format_number_conv(score, 2, true);\\r\\n            }\\r\\n            return my_score;\\r\\n        },\\r\\n        viewDailyAccomplishments(emp_code, mo_val, yval) {\\r\\n            // alert(this.mo_val);\\r\\n            //var office_ind = document.getElementById(\\\"selectOffice\\\").selectedIndex;\\r\\n\\r\\n            // this.office =this.auth.user.office.office;\\r\\n            // var pg_head = this.functions.DEPTHEAD;\\r\\n            // var forFFUNCCOD = this.auth.user.office.department_code;\\r\\n            this.my_link = this.viewlink(emp_code, mo_val, yval);\\r\\n\\r\\n            this.showModalDaily();\\r\\n        },\\r\\n        viewlink(username, mo_val, yval) {\\r\\n            //var linkt =\\\"abcdefghijklo534gdmoivndfigudfhgdyfugdhfugidhfuigdhfiugmccxcxcxzczczxczxczxcxzc5fghjkliuhghghghaaa555l&&&&-\\\";\\r\\n            // var date_from =\\r\\n            var linkt = \\\"http://\\\";\\r\\n            var date_from = new Date(yval, mo_val - 1, 1).toISOString().split('T')[0];\\r\\n            var date_to = new Date(yval, mo_val, 0).toISOString().split('T')[0];\\r\\n\\r\\n            var dateObj = new Date(date_from);\\r\\n            dateObj.setDate(dateObj.getDate() + 1);\\r\\n            var nextDay = dateObj.toISOString().split('T')[0];\\r\\n\\r\\n            var dateObjTo = new Date(date_to);\\r\\n            dateObjTo.setDate(dateObjTo.getDate() + 1);\\r\\n            var nextDayTo = dateObjTo.toISOString().split('T')[0];\\r\\n\\r\\n            // console.log('next day: ' + nextDayTo);\\r\\n            var jasper_ip = this.jasper_ip;\\r\\n            // var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA%2CSales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2FIPCR%2FDaily_Accomplishment&reportUnit=%2Freports%2FIPCR%2FDaily_Accomplishment%2FIPCR_Daily&standAlone=true&decorate=no&output=pdf';\\r\\n\\r\\n            var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA%2CSales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2FIPCR%2FDaily_Accomplishment&reportUnit=%2Freports%2FIPCR%2FDaily_Accomplishment%2FIPCR_Daily&standAlone=true&decorate=no&output=pdf';\\r\\n            var params = '&username=' + username + '&date_from=' + nextDay + '&date_to=' + nextDayTo;\\r\\n            // alert(nextDay);\\r\\n            var linkl = linkt + jasper_ip + jasper_link + params;\\r\\n            return linkl;\\r\\n        },\\r\\n        // accomp.empl_id,\\r\\n        // accomp.year,\\r\\n        // accomp.id,\\r\\n        // accomp.month,\\r\\n        // accomp.sem,\\r\\n        // accomp.employee_name,\\r\\n        // accomp.office,\\r\\n        // accomp.division,\\r\\n        // accomp.immediate,\\r\\n        // accomp.next_higher,\\r\\n        async showModalMonthly(empl_id, e_year, idsemestral, my_month, sem, employee_name, office, division, immediate, next_higher, e_stat, pos, accomp_id) {\\r\\n            // /monthly/accomplishments / object / { emp_code } / { semt } / { year } / { ipcr_semestral_id } / { month }\\r\\n            this.displayModalMonthly = true;\\r\\n            // let url = '/calculate-total/accomplishments/monthly/' + my_month + '/' + e_year + '/' + empl_id + '/' + idsemestral;\\r\\n            this.emp_name = employee_name;\\r\\n            this.imm_id = immediate;\\r\\n            this.next_id = next_higher;\\r\\n            this.emp_office = office;\\r\\n            this.emp_division = division;\\r\\n            this.emp_sem = sem;\\r\\n            this.emp_year = e_year;\\r\\n            this.emp_status = e_stat;\\r\\n            this.emp_position = pos;\\r\\n            this.form.ipcr_monthly_accomplishment_id = accomp_id;\\r\\n            this.id_accomp_selected = accomp_id;\\r\\n            this.form.employee_code = empl_id;\\r\\n            this.emp_month = this.getMonthName(my_month);\\r\\n            let url = '/monthly-details/monthly/accomplishments/object/' + empl_id + '/' + sem + '/' + e_year + '/' + idsemestral + '/' + my_month;\\r\\n            // alert(empl_id);\\r\\n            await axios.get(url).then((response) => {\\r\\n                this.monthly_api = response.data;\\r\\n                // console.log(this.core_support.ave_core);\\r\\n            });\\r\\n            this.core_support = [];\\r\\n            this.calculateAverageCore()\\r\\n            // console.log(this.calculateAverageCore())\\r\\n            this.calculateAverageSupport()\\r\\n            this.core_support.push({\\r\\n                ave_core: this.Average_Point_Core,\\r\\n                ave_support: this.Average_Point_Support\\r\\n            });\\r\\n            this.core_support = this.core_support[0];\\r\\n            console.log(this.core_support)\\r\\n        },\\r\\n        hideModalMonthly() {\\r\\n            this.displayModalMonthly = false;\\r\\n        },\\r\\n        toggle(id, i) {\\r\\n            // alert(this.data.length);\\r\\n            // for (var x = 0; x < this.data.length; x++) {\\r\\n            //     this.$('#collapse-b' + x).removeClass('show');\\r\\n            // }\\r\\n            const index = this.opened.indexOf(id);\\r\\n            if (index > -1) {\\r\\n                // this.opened.splice(index, 1)\\r\\n            } else {\\r\\n                this.opened = [];\\r\\n                this.opened.push(id)\\r\\n            }\\r\\n            // alert(this.show);\\r\\n            setTimeout(() => {\\r\\n                // alert(this.show);\\r\\n                for (var t = 0; t < this.data.length; t++) {\\r\\n                    if (i != t) {\\r\\n                        this.show[t] = false\\r\\n                    }\\r\\n\\r\\n                }\\r\\n                this.show[i] = !this.show[i];\\r\\n            }, 100);\\r\\n        },\\r\\n        quality(score, quality_error) {\\r\\n            var result = 0;\\r\\n            if (quality_error == 1) {\\r\\n                result = score;\\r\\n            } else if (quality_error == 2) {\\r\\n                result = Math.floor(score, 0)\\r\\n            } else if (quality_error == 3) {\\r\\n                result = 0\\r\\n            } else if (quality_error == 4) {\\r\\n                result = Math.floor(score, 0)\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        quality_score(score, quality_error) {\\r\\n            var result = 0;\\r\\n            if (quality_error == 1) {\\r\\n                if (score == 0) {\\r\\n                    result = 0\\r\\n                } else if (score >= 0.01 && score <= 1) {\\r\\n                    result = 1\\r\\n                } else if (score >= 1.01 && score <= 2) {\\r\\n                    result = 2\\r\\n                } else if (score >= 2.01 && score <= 3) {\\r\\n                    result = 3\\r\\n                } else if (score >= 3.01 && score <= 4) {\\r\\n                    result = 4\\r\\n                } else if (score >= 4.01 && score <= 5) {\\r\\n                    result = 5\\r\\n                } else if (score >= 6.01 && score <= 6) {\\r\\n                    result = 6\\r\\n                } else if (score >= 6.01 && score <= 7) {\\r\\n                    result = 7\\r\\n                } else if (score >= 7.01 && score <= 8) {\\r\\n                    result = 8\\r\\n                } else if (score >= 8.01 && score <= 9) {\\r\\n                    result = 9\\r\\n                } else if (score >= 9.01 && score <= 10) {\\r\\n                    result = 10\\r\\n                } else if (score >= 10.01 && score <= 11) {\\r\\n                    result = 11\\r\\n                } else if (score >= 11.01 && score <= 12) {\\r\\n                    result = 12\\r\\n                } else if (score >= 12.01 && score <= 13) {\\r\\n                    result = 13\\r\\n                } else if (score >= 13.01 && score <= 14) {\\r\\n                    result = 14\\r\\n                } else if (score >= 14.01 && score <= 15) {\\r\\n                    result = 15\\r\\n                }\\r\\n            } else if (quality_error == 2) {\\r\\n                result = Math.floor(score, 0)\\r\\n            } else if (quality_error == 3) {\\r\\n                result = 0;\\r\\n            } else if (quality_error == 4) {\\r\\n                result = Math.floor(score, 0)\\r\\n            }\\r\\n\\r\\n            return result;\\r\\n\\r\\n        },\\r\\n        QuantityRate(id, quantity, target) {\\r\\n            var result;\\r\\n\\r\\n            if (id == 1) {\\r\\n                var total = Math.round((quantity / target) * 100)\\r\\n                if (total >= 130) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (total <= 129 && total >= 115) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (total <= 114 && total >= 90) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (total <= 89 && total >= 51) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (total <= 50) {\\r\\n                    result = \\\"1\\\"\\r\\n                } else\\r\\n                    result = \\\"\\\"\\r\\n            } else if (id == 2) {\\r\\n                var total = Math.round((quantity / target) * 100)\\r\\n                // alert(total);\\r\\n                if (total == 100) {\\r\\n                    result = 5\\r\\n                } else {\\r\\n                    // alert(total)\\r\\n                    result = 2\\r\\n                }\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        QualityRate(id, total) {\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                if (total == 0) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (total >= .01 && total <= 2.99) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (total >= 3 && total <= 4.99) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (total >= 5 && total <= 6.99) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (total >= 7) {\\r\\n                    result = \\\"1\\\"\\r\\n                }\\r\\n            } else if (id == 2) {\\r\\n                if (total == 5) {\\r\\n                    result = \\\"5\\\"\\r\\n                } else if (total >= 4 && total <= 4.99) {\\r\\n                    result = \\\"4\\\"\\r\\n                } else if (total >= 3 && total <= 3.99) {\\r\\n                    result = \\\"3\\\"\\r\\n                } else if (total >= 2 && total <= 2.99) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else if (total >= 1 && total <= 1.99) {\\r\\n                    result = \\\"1\\\"\\r\\n                } else {\\r\\n                    result = \\\"0\\\"\\r\\n                }\\r\\n            } else if (id == 3) {\\r\\n                result = \\\"0\\\"\\r\\n            } else if (id == 4) {\\r\\n                if (total >= 1) {\\r\\n                    result = \\\"2\\\"\\r\\n                } else {\\r\\n                    result = \\\"5\\\"\\r\\n                }\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        QuantityType(id) {\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                result = \\\"TO BE RATED\\\"\\r\\n            } else {\\r\\n                result = \\\"ACCURACY RULE (100%=5,2 if less than 100%)\\\"\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        QualityType(id) {\\r\\n            var result;\\r\\n            if (id == 1) {\\r\\n                result = \\\"NO. OF ERROR\\\"\\r\\n            } else if (id == 2) {\\r\\n                result = \\\"AVE. FEEDBACK\\\"\\r\\n            } else if (id == 3) {\\r\\n                result = \\\"NOT TO BE RATED\\\"\\r\\n            } else if (id == 4) {\\r\\n                result = \\\"ACCURACY RULE\\\"\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        AverageRate(QuantityID, QualityID, quantity, target, total, TimeRating, type) {\\r\\n\\r\\n            var Quantity = this.QuantityRate(QuantityID, quantity, target)\\r\\n            var Quality = this.QualityRate(QualityID, total)\\r\\n            var Timeliness = TimeRating\\r\\n            var Average = (parseFloat(Quantity) + parseFloat(Quality) + parseFloat(Timeliness)) / 3\\r\\n\\r\\n\\r\\n            return this.format_number_conv(Average, 2, true)\\r\\n            // return this.format_number_conv\\r\\n        },\\r\\n        AverageRating(QuantityRatings, QualityRatings, TimeRatings) {\\r\\n\\r\\n            var ratings = [parseFloat(QuantityRatings), parseFloat(QualityRatings), parseFloat(TimeRatings)];\\r\\n\\r\\n            var nonZeroRatings = ratings.filter(rating => rating !== 0);\\r\\n\\r\\n            if (nonZeroRatings.length === 0) {\\r\\n                return 0; // or any default value when all ratings are zero\\r\\n            }\\r\\n            var average = nonZeroRatings.reduce((sum, rating) => sum + rating, 0) / nonZeroRatings.length;\\r\\n\\r\\n            return this.format_number_conv(average, 2, true);\\r\\n        },\\r\\n        calculateAverageCore() {\\r\\n            // AverageRate(dat.quantity_type, dat.quality_error, dat.TotalQuantity, dat.month,\\r\\n            //     dat.quality_average, dat.ipcr_type)\\r\\n            let sum = 0;\\r\\n            let num_of_data = 0;\\r\\n            let average = 0;\\r\\n            if (Array.isArray(this.monthly_api)) {\\r\\n                this.monthly_api.forEach(item => {\\r\\n                    if (item.ipcr_type === 'Core Function') {\\r\\n                        var val = this.AverageRating(item.month === \\\"0\\\" || item.month === null ?\\r\\n                            this.QuantityRate(item.quantity_type, item.TotalQuantity, 1) : this.QuantityRate(item.quantity_type, item.TotalQuantity, item.month),\\r\\n                            this.QualityRate(item.quality_error, item.quality_average),\\r\\n                            item.TimeRating == \\\"\\\" ? 0 : item.TimeRating);\\r\\n                        // alert(val);\\r\\n                        num_of_data += 1;\\r\\n                        sum += parseFloat(val);\\r\\n                        console.log(sum);\\r\\n                        average = sum / num_of_data\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n            this.Average_Point_Core = average.toFixed(2);\\r\\n\\r\\n            return this.Average_Point_Core;\\r\\n        },\\r\\n        calculateAverageSupport() {\\r\\n\\r\\n            let sum = 0;\\r\\n            let num_of_data = 0;\\r\\n            let average = 0;\\r\\n            if (Array.isArray(this.monthly_api)) {\\r\\n                this.monthly_api.forEach(item => {\\r\\n                    if (item.ipcr_type === 'Support Function') {\\r\\n                        var val = this.AverageRating(item.month === \\\"0\\\" || item.month === null ? this.QuantityRate(item.quantity_type, item.TotalQuantity, 1) : this.QuantityRate(item.quantity_type, item.TotalQuantity, item.month), this.QualityRate(item.quality_error, item.quality_average), item.TimeRating == \\\"\\\" ? 0 : item.TimeRating);\\r\\n                        num_of_data += 1;\\r\\n                        sum += parseFloat(val);\\r\\n                        average = sum / num_of_data\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n            this.Average_Point_Support = average.toFixed(2);\\r\\n        },\\r\\n        getAdjectivalScore(Core, Support) {\\r\\n            var result = 0;\\r\\n            var result = Math.round((Core + Support) * 100) / 100;\\r\\n            return result;\\r\\n        },\\r\\n        getAdjectivalRating(Score) {\\r\\n            var result = \\\"\\\"\\r\\n            if (Score >= 4.51 && Score <= 5.00) {\\r\\n                result = \\\"Outstanding\\\"\\r\\n            } else if (Score >= 3.51 && Score <= 4.50) {\\r\\n                result = \\\"Very Satisfactory\\\"\\r\\n            } else if (Score >= 2.51 && Score <= 3.50) {\\r\\n                result = \\\"Satisfactory\\\"\\r\\n            } else if (Score >= 1.51 && Score <= 2.50) {\\r\\n                result = \\\"Unsatisfactory\\\"\\r\\n            } else if (Score >= 1.00 && Score <= 1.50) {\\r\\n                result = \\\"Poor\\\"\\r\\n            }\\r\\n\\r\\n            return result;\\r\\n        },\\r\\n    }\\r\\n};\\r\\n</script>\\r\\n<style>\\r\\n.row-centered {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.col-centered {\\r\\n    display: inline-block;\\r\\n    float: none;\\r\\n    text-align: left;\\r\\n    margin-right: -4px;\\r\\n}\\r\\n\\r\\n.pos {\\r\\n    position: top;\\r\\n    top: 240px;\\r\\n}\\r\\n</style>\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#sidebar-wrapper{height:100%;margin-right:-250px;margin-top:-9px;overflow-y:auto;position:fixed;right:250px;transition:all .5s ease;width:auto;z-index:1000}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Shared/Filter.vue\"],\"names\":[],\"mappings\":\"AA4BI,iBAMI,WAAY,CACZ,mBAAoB,CALpB,eAAgB,CAMhB,eAAgB,CAJhB,cAAe,CACf,WAAY,CAOZ,uBAAyB,CAXzB,UAAW,CAEX,YAUJ\",\"sourcesContent\":[\"<template>\\r\\n    <div \\r\\n        id=\\\"sidebar-wrapper\\\" \\r\\n        class=\\\"sidebar-nav nav navbar-inverse\\\" \\r\\n    >\\r\\n        <div class=\\\"row\\\" style=\\\"width: 380px;\\\">\\r\\n            <div class=\\\"bgc-white\\\">  \\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLiveLabel\\\">Filtering</h5>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn-close\\\" @click=\\\"$emit('closeFilter')\\\"></button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <slot></slot>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\nexport default {\\r\\n    props: {\\r\\n        title: String,\\r\\n    }\\r\\n}\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n    #sidebar-wrapper {\\r\\n        width: auto;\\r\\n        margin-top: -9px;\\r\\n        z-index: 1000;\\r\\n        position: fixed;\\r\\n        right: 250px;\\r\\n        height: 100%;\\r\\n        margin-right: -250px;\\r\\n        overflow-y: auto;\\r\\n        -webkit-transition: all 0.5s ease;\\r\\n        -moz-transition: all 0.5s ease;\\r\\n        -o-transition: all 0.5s ease;\\r\\n        transition: all 0.5s ease;\\r\\n    }\\r\\n</style>\\r\\n\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".modal[data-v-8ec2bb50]{display:block}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Shared/PrintModal.vue\"],\"names\":[],\"mappings\":\"AAqEI,wBACE,aACF\",\"sourcesContent\":[\"<template>\\r\\n    <div class=\\\"permissions-modal\\\">\\r\\n        <div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n            <div class=\\\"modal-dialog modal-xl\\\">\\r\\n                <div class=\\\"d-flex justify-content-center\\\">\\r\\n                    <div class=\\\"modal-content\\\" style=\\\"width: 100% !important; height: 40% !important; \\\">\\r\\n                        <div class=\\\"modal-header\\\" style=\\\"background-color:#030014\\\">\\r\\n                            <h4 class=\\\"modal-title\\\" style=\\\"color: #ffe819; text-align: center !important;\\\">\\r\\n                                <b>PRINT PREVIEW</b>\\r\\n                            </h4>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" style=\\\"font-weight: bold; color: white\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" @click=\\\"closeModal\\\">\\r\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-body\\\">\\r\\n                        <!--<p>Modal body text goes here.</p>\\r\\n                        <multiselect v-model=\\\"value\\\" :options=\\\"options\\\" mode=\\\"tags\\\"/>-->\\r\\n                        <slot></slot>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-footer\\\" style=\\\"background-color:#090137\\\">\\r\\n                        <!--<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" @click=\\\"saveChanges\\\">Save changes</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" @click=\\\"closeModal\\\">Close</button>-->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n  </template>\\r\\n\\r\\n  <script>\\r\\n    export default {\\r\\n      props: {\\r\\n          //userId: Object,\\r\\n      },\\r\\n      data(){\\r\\n          return{\\r\\n              //my_id: this.props.userId,\\r\\n              value: null,\\r\\n              options: [\\r\\n                  'Batman',\\r\\n                  'Robin',\\r\\n                  'Joker',\\r\\n                  ],\\r\\n          }\\r\\n      },\\r\\n      mounted(){\\r\\n\\r\\n      },\\r\\n      methods: {\\r\\n        logU_ID(){\\r\\n\\r\\n        },\\r\\n        closeModal() {\\r\\n          this.$emit('close-modal-event');\\r\\n        },\\r\\n        saveChanges() {\\r\\n          this.closeModal();\\r\\n        },\\r\\n        loadPermissions(){\\r\\n\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  </script>\\r\\n\\r\\n  <style scoped>\\r\\n    /* Override default value of 'none' */\\r\\n    .modal {\\r\\n      display: block;\\r\\n    }\\r\\n  </style>\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\r\n\r\n    <Head>\r\n        <title>Home</title>\r\n    </Head>\r\n\r\n    <!--<p style=\"text-align: justify;\">Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos, qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit amet consectetur.\r\n    </p>-->\r\n    <div class=\"row gap-20 masonry pos-r\">\r\n        <div class=\"peers fxw-nw jc-sb ai-c\">\r\n            <!--SEMESTRAL***************************************************************************************-->\r\n            <h3>Review/Approve Monthly Accomplishment</h3>\r\n            <div class=\"peers\">\r\n                <div class=\"peer mR-10\">\r\n                    <input v-model=\"search\" type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Search...\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"masonry-sizer col-md-6\"></div>\r\n        <div class=\"masonry-item w-100\">\r\n            <div class=\"row gap-20\"></div>\r\n            <div class=\"bgc-white p-20 bd\">\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-sm table-borderless table-striped table-hover\">\r\n                        <thead>\r\n                            <tr class=\"bg-secondary text-white\">\r\n                                <th></th>\r\n                                <th>Name</th>\r\n                                <th>Period</th>\r\n                                <th>Month</th>\r\n                                <th>Status</th>\r\n                                <!-- <th>Sem ID</th> -->\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"accomp in accomplishments.data\">\r\n                                <td></td>\r\n                                <td>{{ accomp.employee_name }}</td>\r\n                                <td>\r\n                                    {{ getPeriod(accomp.sem, accomp.year) }}\r\n                                </td>\r\n                                <td>{{ getMonthName(accomp.month) }} </td>\r\n                                <!-- <td>{{ accomp.id }} - {{ accomp.accomp_id }}</td> - {{ accomp.month }}-->\r\n                                <td>\r\n                                    {{ getStatus(accomp.a_status) }}\r\n                                    <!-- --- {{ accomp }} -->\r\n                                </td>\r\n                                <td>\r\n                                    <div class=\"dropdown dropstart\">\r\n                                        <button class=\"btn btn-secondary btn-sm action-btn\" type=\"button\"\r\n                                            id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                fill=\"currentColor\" class=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\" />\r\n                                            </svg>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu action-dropdown\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                            <li v-if=\"accomp.sem === '1' || accomp.sem === '2'\">\r\n                                                <!-- <button class=\"dropdown-item\" @click=\"showModal(accomp.id,\r\n                        accomp.empl_id,\r\n                        accomp.employee_name,\r\n                        accomp.year,\r\n                        accomp.sem,\r\n                        accomp.a_status,\r\n                        accomp.accomp_id,\r\n                        accomp.month,\r\n                        accomp.position,\r\n                        accomp.office,\r\n                        accomp.division,\r\n                        accomp.immediate,\r\n                        accomp.next_higher,\r\n                        accomp.id,\r\n                        accomp.employment_type_descr\r\n                    )\">\r\n                                                    View Submission\r\n                                                </button> -->\r\n                                                <button class=\"dropdown-item\" @click=\"showModalMonthly(\r\n                        accomp.empl_id,\r\n                        accomp.year,\r\n                        accomp.id,\r\n                        accomp.month,\r\n                        accomp.sem,\r\n                        accomp.employee_name,\r\n                        accomp.office,\r\n                        accomp.division,\r\n                        accomp.immediate,\r\n                        accomp.next_higher,\r\n                        accomp.a_status,\r\n                        accomp.position,\r\n                        accomp.accomp_id\r\n                    )\">\r\n                                                    <!-- empl_id, e_year, idsemestral, my_month, sem -->\r\n                                                    View Monthly Accomplishments\r\n                                                </button>\r\n                                            </li>\r\n                                            <li v-else>\r\n                                                <button class=\"dropdown-item\"\r\n                                                    @click=\"showModal2(accomp.id, accomp.empl_id, accomp.employee_name, accomp.year, accomp.sem, accomp.status)\">\r\n                                                    View Submission\r\n                                                </button>\r\n                                            </li>\r\n                                            <li>\r\n                                                <button class=\"dropdown-item\"\r\n                                                    @click=\"viewDailyAccomplishments(accomp.empl_id, accomp.month, accomp.year)\">\r\n                                                    View Daily Accomplishments\r\n                                                </button>\r\n                                            </li>\r\n                                            <li v-if=\"accomp.status === '1'\">\r\n                                                <Link class=\"dropdown-item\" :href=\"`/ipcrtargets/${accomp.id}`\">Approve\r\n                                                </Link>\r\n                                            </li>\r\n                                            <li v-if=\"accomp.status === '0'\">\r\n                                                <Link class=\"dropdown-item\" :href=\"`/ipcrtargets/${accomp.id}`\">Review\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <pagination :next=\"accomplishments.next_page_url\" :prev=\"accomplishments.prev_page_url\" />\r\n                    Page {{ accomplishments.current_page }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- <table class=\"table table-hover table-bordered border-dark\">\r\n                <thead>\r\n                    <tr class=\"text-dark\" style=\"background-color: #ffffff;\">\r\n                        <th rowspan=\"2\" style=\"text-align: center; background-color: #f70505 !important;\">\r\n                            IPCR\r\n                            Code </th>\r\n                        <th rowspan=\"2\">MFO</th>\r\n                        <th rowspan=\"2\">Success Indicator</th>\r\n                        <th rowspan=\"2\"></th>\r\n                        <th rowspan=\"2\"></th>\r\n                        <th rowspan=\"2\">Targets</th>\r\n                        <th rowspan=\"2\">Quantity</th>\r\n                        <th colspan=\"2\">Rating </th>\r\n                        <th rowspan=\"2\">Quality Rate Based On</th>\r\n                        <th rowspan=\"2\">Quality</th>\r\n                        <th rowspan=\"2\">TOT ERROR/AVE FB</th>\r\n                        <th rowspan=\"2\">Prescribed Period</th>\r\n                        <th rowspan=\"2\">Timeliness</th>\r\n                        <th rowspan=\"2\">ave time per doc/activity</th>\r\n                        <th rowspan=\"2\">Remarks</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Score</th>\r\n                        <th>%</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr class=\"bg-secondary text-white\">\r\n                        <td style=\"background-color: #f70505;\"></td>\r\n                        <td colspan=\"15\"><b>Core Function</b></td>\r\n                    </tr>\r\n                    <template v-for=\"ipc in ipcr_accomplishments\">\r\n                        <tr v-if=\"ipc.ipcr_type == 'Core Function'\">\r\n                            <td style=\"background-color: #f1c19b;\">{{ ipc.ipcr_code }}</td>\r\n                            <td>{{ ipc.mfo_desc }}</td>\r\n                            <td>{{ ipc.success_indicator }}</td>\r\n                            <td style=\"border-color: #f70505;\">{{ ipc.quantity_type }}</td>\r\n                            <td style=\"border-color: #f70505;\">{{ QuantityType(ipc.quantity_type) }}</td>\r\n                            <td style=\"border-color: #f70505;\">{{ ipc.monthly_target }}</td>\r\n                            <td style=\"border-color: #f70505;\">{{ ipc.total_quantity }}</td>\r\n                            <td style=\"border-color: #f70505;\">\r\n                                {{ QuantityRate(ipc.quantity_type, ipc.total_quantity, ipc.month) }} -\r\n                            </td>\r\n                            <td style=\"border-color: #f70505;\">\r\n                                {{ getPercentQuantity(ipc.total_quantity, ipc.monthly_target) }}\r\n                            </td>\r\n                            <td style=\"border-color: #f70505;\">{{ QualityType(ipc.quality_error) }}</td>\r\n                            <td style=\"border-color: #f70505;\">{{ ipc.total_quality }}</td>\r\n                            <td style=\"border-color: #f70505;\">\r\n                                <p v-if=\"isNaN(ipc.total_quality_avg) || ipc.total_quality_avg == null\">0\r\n                                </p>\r\n                                <p v-else> {{\r\n                                    format_number_conv(ipc.total_quality_avg, 2, true) }}\r\n                                </p>\r\n                            </td>\r\n                            <td style=\"border-color: #f70505;\">{{ ipc.prescribed_period }} {{ ipc.time_unit\r\n                            }}</td>\r\n                            <td>{{ ipc.ave_time }}</td>\r\n                            <td style=\"border-color: #f70505;\">\r\n                                <span v-if=\"ipc.monthly_target > 0\">\r\n                                    {{ format_number_conv(((ipc.total_quantity / ipc.monthly_target) *\r\n                                        100), 2, true) }} %\r\n                                </span>\r\n                                <span v-else>\r\n                                    0.00%\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    </template>\r\n<tr class=\"bg-secondary text-white\">\r\n    <td style=\"background-color: #f70505;\"></td>\r\n    <td colspan=\"15\"><b>Support Function</b></td>\r\n</tr>\r\n<template v-for=\"ipc in ipcr_accomplishments\">\r\n                        <tr v-if=\"ipc.ipcr_type == 'Support Function'\">\r\n                            <td style=\"background-color: #f1c19b;\">{{ ipc.ipcr_code }}</td>\r\n                            <td>{{ ipc.mfo_desc }}</td>\r\n                            <td>{{ ipc.success_indicator }}</td>\r\n                            <td style=\"border-color: #f70505;\">{{ ipc.quantity_type }}</td>\r\n                            <td style=\"border-color: #f70505;\">{{ QuantityType(ipc.quantity_type) }}</td>\r\n                            <td style=\"border-color: #f70505;\">{{ ipc.monthly_target }}</td>\r\n                            <td style=\"border-color: #f70505;\">{{ ipc.total_quantity }}</td>\r\n                            <td style=\"border-color: #f70505;\">\r\n                                {{ QuantityRate(ipc.quantity_type, ipc.total_quantity, ipc.month) }} -\r\n                            </td>\r\n                            <td style=\"border-color: #f70505;\">\r\n                                {{ getPercentQuantity(ipc.total_quantity, ipc.monthly_target) }}\r\n                            </td>\r\n                            <td style=\"border-color: #f70505;\">{{ QualityType(ipc.quality_error) }}</td>\r\n                            <td style=\"border-color: #f70505;\">{{ ipc.total_quality }}</td>\r\n                            <td style=\"border-color: #f70505;\">\r\n                                <p v-if=\"isNaN(ipc.total_quality_avg) || ipc.total_quality_avg == null\">0\r\n                                </p>\r\n                                <p v-else> {{\r\n                                    format_number_conv(ipc.total_quality_avg, 2, true) }}\r\n                                </p>\r\n                            </td>\r\n                            <td style=\"border-color: #f70505;\">{{ ipc.prescribed_period }} {{ ipc.time_unit\r\n                            }}</td>\r\n                            <td>{{ ipc.ave_time }}</td>\r\n                            <td style=\"border-color: #f70505;\">\r\n                                <span v-if=\"ipc.monthly_target > 0\">\r\n                                    {{ format_number_conv(((ipc.total_quantity / ipc.monthly_target) *\r\n                                        100), 2, true) }} %\r\n                                </span>\r\n                                <span v-else>\r\n                                    0.00%\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    </template>\r\n</tbody>\r\n\r\n</table>\r\n-->\r\n        <!-- {{ report_link }} -->\r\n        <Modal v-if=\"displayModal\" @close-modal-event=\"hideModal\">\r\n            <div class=\"justify-content-center\">\r\n                <!-- {{ report_link }} -->\r\n\r\n                <div style=\"text-align: center\">\r\n                    <h4>IPCR Accomplishment</h4>\r\n                </div>\r\n                <br>\r\n                <div><b>Employee Name: </b><u>{{ emp_name }}</u></div>\r\n                <div>\r\n                    <b>Semester/Period: </b>\r\n                    <u>\r\n                        <span v-if=\"emp_sem === '1'\">First Semester -January to June, </span>\r\n                        <span v-if=\"emp_sem === '2'\">Second Semester -July to December, </span>\r\n                        {{ emp_year }}\r\n                    </u>\r\n                </div>\r\n                <div>\r\n                    <b>Status: </b>\r\n                    <u>\r\n                        <span v-if=\"emp_status === '0'\">Submitted</span>\r\n                        <span v-if=\"emp_status === '1'\">Reviewed</span>\r\n                    </u>\r\n                </div>\r\n                <div class=\"masonry-item w-100\">\r\n                    <div class=\"bgc-white p-20 bd\">\r\n                        <!-- {{ report_link }} -->\r\n                        <div class=\"table-responsive\">\r\n                            <iframe :src=\"report_link\" style=\"width:100%; height:450px\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <b>Remarks:</b>\r\n                    <input type=\"text\" v-model=\"form.remarks\" class=\"form-control\" autocomplete=\"chrome-off\"><br>\r\n                </div>\r\n                <div style=\"align: center\">\r\n                    <span v-if=\"imm_id === next_id\">\r\n                        <!-- {{ imm_id }}\r\n\r\n                        {{ next_id }} -->\r\n                        <button class=\"btn btn-primary text-white\" @click=\"submitAction('2')\">\r\n                            Approve\r\n                        </button>&nbsp;\r\n                        <button class=\"btn btn-danger text-white\" @click=\"submitAction('-2')\">\r\n                            Return\r\n                        </button>\r\n                    </span>\r\n                    <span v-else>\r\n                        <button class=\"btn btn-primary text-white\" @click=\"submitAction('1')\" v-if=\"emp_status === '0'\">\r\n                            Review\r\n                        </button>\r\n                        <button class=\"btn btn-primary text-white\" @click=\"submitAction('2')\" v-if=\"emp_status === '1'\">\r\n                            Approve\r\n                        </button>&nbsp;\r\n                        <button class=\"btn btn-primary text-white\" @click=\"submitAction('3')\" v-if=\"emp_status === '2'\">\r\n                            Final Approve\r\n                        </button>&nbsp;\r\n\r\n                        <button class=\"btn btn-danger text-white\" @click=\"submitAction('-2')\">\r\n                            Return\r\n                        </button>\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n        <Modal2 v-if=\"displayModal2\" @close-modal-event=\"hideModal2\">\r\n            <div class=\"justify-content-center\">\r\n                <div style=\"text-align: center\">\r\n                    <h4>IPCR Targets</h4>\r\n                </div>\r\n                <br>\r\n                <div><b>Employee Name: </b><u>{{ emp_name }}</u></div>\r\n                <!-- lendsgth: {{ length }}\r\n                ipcr_targets: {{ ipcr_targets[0].quantity }} -->\r\n                <!-- quantityArray : {{ quantityArray() }} -->\r\n                <div class=\"masonry-item w-100\">\r\n                    <div class=\"bgc-white p-20 bd\">\r\n                        <div class=\"table-responsive\">\r\n                            <div v-if=\"ipcr_targets && ipcr_targets.length > 0\">\r\n                                <table class=\"table table-hover table-bordered border-dark\">\r\n                                    <!-- v-if=\"ipcr_targets[0].quantity\" -->\r\n                                    <tr class=\"text-dark\" style=\"background-color: #B7DEE8;\">\r\n                                        <th>IPCR Code</th>\r\n                                        <th>Individual Final Output\r\n                                            {{ ipcr_targets[0].quantity }}\r\n                                        </th>\r\n\r\n                                        <th v-for=\"(item, index) in parseQuantity(ipcr_targets[0].quantity)\"\r\n                                            :key=\"index\">\r\n                                            Month {{ index + 1 }}\r\n                                        </th>\r\n                                    </tr>\r\n                                    <tr class=\"bg-secondary text-white\">\r\n                                        <td>{{ }}</td>\r\n                                        <td :colspan=\"9 + parseFloat(parseQuantity(ipcr_targets[0].quantity).length)\">\r\n                                            <b>Core Function</b>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr v-for=\"target in ipcr_targets\">\r\n                                        <td v-if=\"target.ipcr_type == 'Core Function'\"\r\n                                            style=\"text-align: center; background-color: #edd29d\">{{ target.ipcr_code }}\r\n                                        </td>\r\n                                        <td v-if=\"target.ipcr_type == 'Core Function'\">{{ target.individual_output }}\r\n                                        </td>\r\n                                        <td v-if=\"target.ipcr_type == 'Core Function'\"\r\n                                            v-for=\"(quant, index) in parseQuantity(target.quantity)\" :key=\"index\">{{\r\n                        quant\r\n                    }}</td>\r\n                                    </tr>\r\n                                    <tr class=\"bg-secondary text-white\">\r\n                                        <td>{{ }}</td>\r\n                                        <td :colspan=\"9 + parseFloat(parseQuantity(ipcr_targets[0].quantity).length)\">\r\n                                            <b>Support Function</b>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr v-for=\"target in ipcr_targets\">\r\n                                        <td v-if=\"target.ipcr_type == 'Support Function'\"\r\n                                            style=\"text-align: center; background-color: #edd29d\">{{ target.ipcr_code }}\r\n                                        </td>\r\n                                        <td v-if=\"target.ipcr_type == 'Support Function'\">{{ target.individual_output }}\r\n                                        </td>\r\n                                        <td v-if=\"target.ipcr_type == 'Support Function'\"\r\n                                            v-for=\"(quant, index) in parseQuantity(target.quantity)\" :key=\"index\">{{\r\n                        quant\r\n                    }}</td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div style=\"align: center\">\r\n                            <button class=\"btn btn-primary text-white\" @click=\"submitActionProb('1')\"\r\n                                v-if=\"emp_status === '0'\">\r\n                                Review\r\n                            </button>\r\n                            <button class=\"btn btn-primary text-white\" @click=\"submitActionProb('2')\"\r\n                                v-if=\"emp_status === '1'\">\r\n                                Approve\r\n                            </button>&nbsp;\r\n                            <button class=\"btn btn-danger text-white\" @click=\"showModal3()\">\r\n                                Return\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal2>\r\n        <Modal3 v-if=\"displayModal3\" @close-modal-event=\"hideModal3\">\r\n            <h3>Remarks</h3>\r\n            <h5>State the reason for not reviewing/approving IPCR</h5>\r\n            <input type=\"text\" v-model=\"form.remarks\" class=\"form-control\" autocomplete=\"chrome-off\"><br>\r\n            <button class=\"btn btn-primary text-white\" @click=\"submitReturnReason()\">\r\n                Done\r\n            </button>&nbsp;\r\n            <button class=\"btn btn-danger text-white\" @click=\"cancelReason()\">\r\n                Cancel\r\n            </button>\r\n        </Modal3>\r\n        <ModalDaily v-if=\"displayModalDaily\" @close-modal-event=\"hideModalDaily\">\r\n            <div class=\"d-flex justify-content-center\">\r\n                <iframe :src=\"my_link\" style=\"width:100%; height:450px\" />\r\n            </div>\r\n        </ModalDaily>\r\n        <ModalMonthly v-if=\"displayModalMonthly\" @close-modal-event=\"hideModalMonthly\">\r\n            <!-- {{ form }}\r\n            {{ id_accomp_selected }}\r\n            core_support: {{ core_support }}\r\n            Average_Point_Core: {{ Average_Point_Core }}\r\n            Average_Point_Support: {{ Average_Point_Support }} -->\r\n            <div class=\"masonry-item w-100\">\r\n\r\n                <div class=\"bgc-white p-20 bd\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-sm table-borderless\">\r\n                            <!-- <tr>\r\n                                <td colspan=\"2\">\r\n                                    {{ emp_office }}\r\n                                </td>\r\n                            </tr> -->\r\n                            <tr>\r\n                                <td>\r\n                                    <div><b>Employee name: </b><u>{{ emp_name }}</u></div>\r\n                                    <div>\r\n                                        <b>Semester/Period: </b>\r\n                                        <u>\r\n                                            <span v-if=\"emp_sem === '1'\">First Semester -January to June, </span>\r\n                                            <span v-if=\"emp_sem === '2'\">Second Semester -July to December, </span>\r\n                                            {{ emp_year }}\r\n                                        </u>\r\n                                    </div>\r\n                                    <div><b>Month: </b><u>{{ emp_month }}</u></div>\r\n                                </td>\r\n                                <td>\r\n                                    <div><b>Division: </b><u>{{ emp_division }}</u></div>\r\n                                    <div><b>Position: </b>\r\n                                        <u>{{ emp_position }}</u>\r\n                                    </div>\r\n                                    <div>\r\n                                        <b>Status: </b>\r\n                                        <u>\r\n                                            <span v-if=\"emp_status === '0'\">Submitted</span>\r\n                                            <span v-if=\"emp_status === '1'\">Reviewed</span>\r\n                                        </u>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class=\"bgc-white p-20 bd\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-sm table-bordered border-dark table-hover\">\r\n                            <thead>\r\n                                <tr style=\"background-color: #B7DEE8;\" class=\"text-center table-bordered\">\r\n                                    <th style=\"width: 5%;\" rowspan=\"2\" colspan=\"1\">IPCR Code</th>\r\n                                    <th style=\"width: 15%;\" rowspan=\"2\" colspan=\"1\">Major Final Output</th>\r\n                                    <th style=\"width: 30%;\" rowspan=\"2\" colspan=\"1\">Success Indicator</th>\r\n                                    <th style=\"width: 20%;\" colspan=\"4\">Rating</th>\r\n                                    <th style=\"width: 20%;\" rowspan=\"2\" colspan=\"1\">Remarks</th>\r\n                                    <!-- <th rowspan=\"2\" colspan=\"1\"></th> -->\r\n                                </tr>\r\n                                <tr style=\"background-color: #B7DEE8;\" class=\"text-center\">\r\n                                    <th style=\"width: 5%;\">Quantity Rating</th>\r\n                                    <th style=\"width: 5%;\">Quality Rating</th>\r\n                                    <th style=\"width: 5%;\">Timeliness Rating</th>\r\n                                    <th style=\"width: 5%;\">Average</th>\r\n                                </tr>\r\n                                <tr>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td colspan=\"8\">\r\n                                        <b>CORE FUNCTION</b>\r\n                                    </td>\r\n                                </tr>\r\n                                <template v-for=\"(dat, index) in monthly_api\" :key=\"index\">\r\n                                    <tr v-if=\"dat.ipcr_type === 'Core Function'\" class=\"text-center\">\r\n                                        <td @click=\"toggle(dat.idIPCR, index)\"\r\n                                            style=\"cursor: pointer; background-color: lightblue\">{{ dat.idIPCR }}\r\n                                        </td>\r\n                                        <td>{{ dat.mfo_desc }}</td>\r\n                                        <td>{{ dat.success_indicator }}</td>\r\n                                        <td>{{ dat.month === \"0\" || dat.month === null ?\r\n                        QuantityRate(dat.quantity_type,\r\n                            dat.TotalQuantity, 1) :\r\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, dat.month)\r\n                                            }}\r\n                                        </td>\r\n                                        <td>{{ QualityRate(dat.quality_error, quality_score(dat.total_quality,\r\n                        dat.quality_error)) }}</td>\r\n                                        <td>{{ dat.TimeRating }}</td>\r\n                                        <td>{{ AverageRating(dat.month === \"0\" || dat.month === null ?\r\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, 1) :\r\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, dat.month),\r\n                        QualityRate(dat.quality_error, quality_score(dat.total_quality,\r\n                            dat.quality_error)), dat.TimeRating === \"\" ? 0 :\r\n                        dat.TimeRating) }}</td>\r\n                                        <td>{{ dat.remarks }}</td>\r\n\r\n                                    </tr>\r\n\r\n\r\n\r\n\r\n                                </template>\r\n                                <tr>\r\n                                    <td colspan=\"7\">\r\n                                        <b style=\"float:right\">Average Point Score - Core Function</b>\r\n                                    </td>\r\n                                    <td>\r\n                                        {{ Average_Point_Core }}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colspan=\"7\">\r\n                                        <b style=\"float:right\">Multiply by Weighted Allocation</b>\r\n                                    </td>\r\n                                    <td>\r\n                                        70%\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colspan=\"7\">\r\n                                        <b style=\"float:right\">Weighted Average Score - Core Function</b>\r\n                                    </td>\r\n                                    <td>\r\n                                        {{ (Average_Point_Core * .70).toFixed(2) }}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colspan=\"8\">\r\n                                        <b>Support FUNCTION </b>\r\n                                    </td>\r\n                                </tr>\r\n                                <template v-for=\"(dat, index) in monthly_api\" :key=\"index\">\r\n                                    <tr v-if=\"dat.ipcr_type === 'Support Function'\" class=\"text-center\">\r\n                                        <td @click=\"toggle(dat.idIPCR, index)\"\r\n                                            style=\"cursor: pointer; background-color: lightblue \">{{ dat.idIPCR }}\r\n                                        </td>\r\n                                        <td>{{ dat.mfo_desc }}</td>\r\n                                        <td>{{ dat.success_indicator }}</td>\r\n                                        <td>{{ dat.month === \"0\" || dat.month === null ?\r\n                        QuantityRate(dat.quantity_type,\r\n                            dat.TotalQuantity, 1) :\r\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, dat.month)\r\n                                            }}</td>\r\n                                        <td>{{ QualityRate(dat.quality_error, quality_score(dat.total_quality,\r\n                        dat.quality_error)) }}</td>\r\n                                        <td>{{ dat.TimeRating }}</td>\r\n                                        <td>{{ AverageRating(dat.month === \"0\" || dat.month === null ?\r\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, 1) :\r\n                        QuantityRate(dat.quantity_type, dat.TotalQuantity, dat.month),\r\n                        QualityRate(dat.quality_error, quality_score(dat.total_quality,\r\n                            dat.quality_error)), dat.TimeRating === \"\" ? 0 :\r\n                        dat.TimeRating) }}</td>\r\n                                        <td>{{ dat.remarks }}</td>\r\n                                        <!-- <td><button v-if=\"dat.remarks == '' || dat.remarks == null\"\r\n                                                class=\"btn btn-primary btn-sm mL-2 text-white\"\r\n                                                @click=\"showModal2(dat.idIPCR, dat.ipcr_semester_id)\">Add\r\n                                                Remarks</button>\r\n                                            <button v-else class=\"btn btn-primary btn-sm mL-2 text-white\"\r\n                                                @click=\"showModal3(dat.idIPCR, dat.ipcr_semester_id, dat.remarks, dat.remarks_id)\">Edit/Delete\r\n                                                Remarks</button>\r\n                                        </td> -->\r\n                                    </tr>\r\n\r\n                                </template>\r\n                                <tr>\r\n                                    <td colspan=\"7\">\r\n                                        <b style=\"float:right\">Average Point Score - Support Function</b>\r\n                                    </td>\r\n                                    <td>\r\n                                        {{ Average_Point_Support }}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colspan=\"7\">\r\n                                        <b style=\"float:right\">Multiply by Weighted Allocation</b>\r\n                                    </td>\r\n                                    <td>\r\n                                        30%\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colspan=\"7\">\r\n                                        <b style=\"float:right\">Weighted Average Score - Support Function</b>\r\n                                    </td>\r\n                                    <td>\r\n                                        {{ (Average_Point_Support * .30).toFixed(2) }}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colspan=\"7\">\r\n                                        <b style=\"float:right\">Total Average Score</b>\r\n                                    </td>\r\n                                    <td>\r\n                                        {{ getAdjectivalScore(Average_Point_Core * 0.70, Average_Point_Support *\r\n                        0.30)\r\n                                        }}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colspan=\"7\">\r\n                                        <b style=\"float:right\">Additional Point Intervening Factor - if applicable -\r\n                                            Maximum: 0.5 pts</b>\r\n                                    </td>\r\n                                    <td>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colspan=\"7\">\r\n                                        <b style=\"float:right\">Total Final Average Rating</b>\r\n                                    </td>\r\n                                    <td style=\"background-color: yellow\">\r\n                                        <b>{{\r\n                        getAdjectivalScore(Average_Point_Core * 0.70, Average_Point_Support *\r\n                            0.30)\r\n                    }}</b>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colspan=\"7\">\r\n                                        <b style=\"float:right\">Final Adjectival Rating</b>\r\n                                    </td>\r\n                                    <td style=\"background-color: yellow\">\r\n                                        <b>{{ getAdjectivalRating(getAdjectivalScore(Average_Point_Core * 0.70,\r\n                        Average_Point_Support * 0.30)) }}</b>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <b>Remarks:</b>\r\n                <input type=\"text\" v-model=\"form.remarks\" class=\"form-control\" autocomplete=\"chrome-off\"><br>\r\n            </div>\r\n            <div style=\"align: center\">\r\n                <!-- {{ imm_id }}\r\n\r\n                {{ next_id }} -->\r\n                <span v-if=\"imm_id === next_id\">\r\n                    <button class=\"btn btn-primary text-white\" @click=\"submitAction('2')\">\r\n                        Approve\r\n                    </button>&nbsp;\r\n                    <button class=\"btn btn-danger text-white\" @click=\"submitAction('-2')\">\r\n                        Return\r\n                    </button>\r\n                </span>\r\n                <span v-else>\r\n                    <button class=\"btn btn-primary text-white\" @click=\"submitAction('1')\" v-if=\"emp_status === '0'\">\r\n                        Review\r\n                    </button>\r\n                    <button class=\"btn btn-primary text-white\" @click=\"submitAction('2')\" v-if=\"emp_status === '1'\">\r\n                        Approve\r\n                    </button>&nbsp;\r\n                    <button class=\"btn btn-primary text-white\" @click=\"submitAction('3')\" v-if=\"emp_status === '2'\">\r\n                        Final Approve\r\n                    </button>&nbsp;\r\n\r\n                    <button class=\"btn btn-danger text-white\" @click=\"submitAction('-2')\">\r\n                        Return\r\n                    </button>\r\n                </span>\r\n\r\n            </div>\r\n        </ModalMonthly>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { useForm } from \"@inertiajs/inertia-vue3\";\r\nimport Filtering from \"@/Shared/Filter\";\r\nimport Pagination from \"@/Shared/Pagination\";\r\nimport Modal from \"@/Shared/PrintModal\";\r\nimport Modal2 from \"@/Shared/PrintModal\";\r\nimport Modal3 from \"@/Shared/PrintModal\";\r\nimport ModalDaily from \"@/Shared/PrintModal\";\r\nimport ModalMonthly from \"@/Shared/PrintModal\";\r\nexport default {\r\n    props: {\r\n        accomplishments: Object,\r\n        filters: Object,\r\n        pghead: String\r\n    },\r\n    computed: {\r\n        quantityArray() {\r\n            const allArrays = this.ipcr_targets.map(target => JSON.parse(target.quantity));\r\n            const mergedArray = [].concat(...allArrays);\r\n            var quant = JSON.parse(this.ipcr_targets[0].quantity)\r\n            return mergedArray\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            report_link: \"\",\r\n            my_link: \"\",\r\n            displayModal: false,\r\n            modal_title: \"Add\",\r\n            ipcr_targets: [],\r\n            ipcr_accomplishments: [],\r\n            core_support: [],\r\n            emp_sem_id: \"\",\r\n            emp_name: \"\",\r\n            emp_year: \"\",\r\n            emp_sem: \"\",\r\n            emp_month: \"\",\r\n            emp_status: \"\",\r\n            emp_position: \"\",\r\n            empl_id: \"\",\r\n            imm_id: \"\",\r\n            next_id: \"\",\r\n            emp_office: \"\",\r\n            emp_division: \"\",\r\n            employment_type_descr: \"\",\r\n            displayModal2: false,\r\n            displayModal3: false,\r\n            displayModalDaily: false,\r\n            displayModalMonthly: false,\r\n            length: 0,\r\n            id_accomp_selected: \"\",\r\n            form: useForm({\r\n                type: \"\",\r\n                remarks: \"\",\r\n                ipcr_semestral_id: \"\",\r\n                employee_code: \"\",\r\n                ipcr_monthly_accomplishment_id: \"\",\r\n            }),\r\n            search: this.$props.filters.search,\r\n            monthly_api: [],\r\n            opened: [],\r\n            // show: false,\r\n            show: [],\r\n            Average_Point_Core: 0,\r\n            Average_Point_Support: 0,\r\n\r\n\r\n        }\r\n    },\r\n    watch: {\r\n        search: _.debounce(function (value) {\r\n            this.$inertia.get(\r\n                \"/approve/accomplishments\",\r\n                { search: value },\r\n                {\r\n                    preserveScroll: true,\r\n                    preserveState: true,\r\n                    replace: true,\r\n                }\r\n            );\r\n        }, 300),\r\n    },\r\n    components: {\r\n        Pagination, Filtering, Modal, Modal2, Modal3, ModalDaily, ModalMonthly\r\n    },\r\n\r\n    methods: {\r\n        deleteIPCR(ipcr_id) {\r\n            // let text = \"WARNING!\\nAre you sure you want to delete the Research Agenda?\";\r\n            // // alert(\"/ipcrtargets/\" + ipcr_id + \"/\"+ this.id+\"/delete\")\r\n            // if (confirm(text) == true) {\r\n            //     this.$inertia.delete(\"/ipcrtargets/\" + ipcr_id + \"/\"+ this.id+\"/delete\");\r\n            // }\r\n        },\r\n        showCreate() {\r\n            // this.$inertia.get(\r\n            //     \"/targets/create\",\r\n            //     {\r\n            //         raao_id: this.raao_id\r\n            //     },\r\n            //     {\r\n            //         preserveScroll: true,\r\n            //         preserveState: true,\r\n            //         replace: true,\r\n            //     }\r\n            // );\r\n        },\r\n        deletePAPS(id) {\r\n            // let text = \"Are you sure you want to delete the Program and Projects? \"+id;\r\n            //   if (confirm(text) == true) {\r\n            //     this.$inertia.delete(\"/paps/\" + id+\"/\"+this.idmfo);\r\n            // }\r\n        },\r\n        getToRep(ffunccod, ffunction, MOOE, PS) {\r\n            // alert(data[0].FFUNCCOD);\r\n            // var linkt=\"http://\";\r\n            // var jasper_ip = this.jasper_ip;\r\n            // var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA,Sales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2Fplanning_system%2FOPCR_Standard&reportUnit=%2Freports%2Fplanning_system%2FOPCR_Standard%2FOPCR&standAlone=true&decorate=no&output=pdf';\r\n            // var params = '&id=' + ffunccod + '&FUNCTION=' + ffunction + '&MOOE=' + MOOE + '&PS=' + PS;\r\n            // var link1 = linkt + jasper_ip +jasper_link + params;\r\n            // return link1;\r\n        },\r\n\r\n        async showModal(my_id, empl_id, e_name, e_year, e_sem, e_stat, accomp_id, month, position, office, division, immediate, next_higher, idsemestral, employment_type_descr) {\r\n            this.emp_name = e_name;\r\n            this.emp_year = e_year;\r\n            this.emp_sem = e_sem;\r\n            this.emp_status = e_stat;\r\n            this.employment_type_descr = employment_type_descr;\r\n            this.emp_sem_id = my_id;\r\n            this.empl_id = empl_id;\r\n            this.id_accomp_selected = accomp_id;\r\n            this.form.ipcr_monthly_accomplishment_id = accomp_id;\r\n            let my_month = this.getMonthName(month)\r\n            this.form.employee_code = empl_id;\r\n            this.imm_id = immediate;\r\n            this.next_id = next_higher;\r\n            let url = '/calculate-total/accomplishments/monthly/' + my_month + '/' + e_year + '/' + empl_id + '/' + idsemestral;\r\n            // alert(empl_id);\r\n            await axios.get(url).then((response) => {\r\n                this.core_support = response.data;\r\n                // console.log(this.core_support.ave_core);\r\n            });\r\n\r\n            var per = this.getMonthName(month)\r\n\r\n            this.viewlink1(empl_id, e_name, e_stat, position, office, division, immediate, next_higher, e_sem, e_year, idsemestral, per, this.pghead, '33')\r\n            this.displayModal = true;\r\n\r\n        },\r\n        viewlink1(emp_code, employee_name, emp_status, position, office, division, immediate, next_higher, sem, year, idsemestral, period, pghead, Average_Score) {\r\n\r\n            var linkt = \"http://\";\r\n            var jasper_ip = this.jasper_ip;\r\n            var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA%2CSales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2FIPCR%2FIPCR_Part1&reportUnit=%2Freports%2FIPCR%2FIPCR_Part1%2FAccomplishment_Part1&standAlone=true&decorate=no&output=pdf';\r\n            var params = '&emp_code=' + emp_code + '&employee_name=' + employee_name + '&emp_status=' + this.employment_type_descr + '&position=' + position +\r\n                '&office=' + office + '&division=' + division + '&immediate=' + immediate +\r\n                '&next_higher=' + next_higher + '&sem=' + sem + '&year=' + year +\r\n                '&idsemestral=' + idsemestral + '&period=' + period + '&pghead=' + pghead +\r\n                '&Average_Point_Core=' + this.core_support.ave_core +\r\n                '&Average_Point_Support=' + this.core_support.ave_support;\r\n            var linkl = linkt + jasper_ip + jasper_link + params;\r\n            this.report_link = linkl;\r\n            return linkl;\r\n        },\r\n        viewlink(emp_code, employee_name, emp_status, position, office, division, immediate, next_higher, sem, year, idsemestral, period,) {\r\n            //var linkt =\"abcdefghijklo534gdmoivndfigudfhgdyfugdhfugidhfuigdhfiugmccxcxcxzczczxczxczxcxzc5fghjkliuhghghghaaa555l&&&&-\";\r\n            var linkt = \"http://\";\r\n            var jasper_ip = this.jasper_ip;\r\n            var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA%2CSales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2FIPCR%2FIPCR_Monthly&reportUnit=%2Freports%2FIPCR%2FIPCR_Monthly%2FMonthly_IPCR&standAlone=true&decorate=no&output=pdf';\r\n            var params = '&emp_code=' + emp_code + '&employee_name=' + employee_name + '&emp_status=' + emp_status + '&position=' + position + '&office=' + office + '&division=' + division + '&immediate=' + immediate + '&next_higher=' + next_higher + '&sem=' + sem + '&year=' + year + '&idsemestral=' + idsemestral + '&period=' + period + '&Score=' + this.score;\r\n            this.form.employee_code = emp_code;\r\n            var linkl = linkt + jasper_ip + jasper_link + params;\r\n            this.report_link = linkl;\r\n            return linkl;\r\n        },\r\n        hideModal() {\r\n            this.displayModal = false;\r\n        },\r\n        hideModal2() {\r\n            this.displayModal2 = false;\r\n            this.displayModalDaily = false;\r\n        },\r\n        // async\r\n        submitAction(stat) {\r\n            // alert(stat);\r\n            var acc = \"\";\r\n            if (stat < 0) {\r\n                acc = \"return\";\r\n            } else if (stat < 2) {\r\n                acc = \"review\";\r\n            } else if (stat < 3) {\r\n                acc = \"approve\";\r\n            } else {\r\n                acc = \"final approve\";\r\n            }\r\n            let text = \"Are you sure you want to \" + acc + \" the IPCR Target?\";\r\n            // alert(this.id_accomp_selected)\r\n            // alert(\"/ipcrtargets/\" + ipcr_id + \"/\"+ this.id+\"/delete\")/review/approve/\r\n            if (confirm(text) == true) {\r\n                var myurl = \"/approve/accomplishments/\" + stat + \"/\" + this.id_accomp_selected\r\n                // await axios\r\n                this.$inertia.post(myurl, {\r\n                    params: {\r\n                        remarks: this.form.remarks,\r\n                        employee_code: this.form.employee_code,\r\n                        core_support: this.core_support\r\n                    }\r\n                })\r\n                // .then(() => {\r\n                //     // Clear the form.remarks after 2 seconds\r\n                //     setTimeout(() => {\r\n                //         this.form.remarks = \"\";\r\n                //     }, 2000);\r\n                // });\r\n            }\r\n            this.hideModal();\r\n            this.hideModalMonthly();\r\n            this.clearFormValues();\r\n        },\r\n        clearFormValues() {\r\n            this.form.type = \"\";\r\n            this.form.remarks = \"\";\r\n            this.form.ipcr_semestral_id = \"\";\r\n            this.form.employee_code = \"\";\r\n            this.form.ipcr_monthly_accomplishment_id = \"\";\r\n            this.core_support = [];\r\n        },\r\n        async showModal2(my_id, empl_id, e_name, e_year, e_sem, e_stat) {\r\n            this.emp_name = e_name;\r\n            this.emp_year = e_year;\r\n            this.emp_sem = e_sem;\r\n            this.emp_status = e_stat;\r\n            this.emp_sem_id = my_id;\r\n            this.empl_id = empl_id;\r\n            // alert('ipcr_sem: '+my_id+' emp_code: '+empl_id)\r\n            await axios.get(\"/ipcrtargets/get/ipcr/targets/2\", {\r\n                params: {\r\n                    sem_id: my_id,\r\n                    empl_id: empl_id\r\n                }\r\n            }).then((response) => {\r\n                this.ipcr_targets = response.data;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n            this.displayModal2 = true;\r\n        },\r\n        parseQuantity(quantarr) {\r\n            // Remove brackets and split by commas, then convert to numbers\r\n            const cleanedString = quantarr.replace(/[\\[\\]]/g, '');\r\n            const numberArray = cleanedString.split(',').map(Number);\r\n            //this.length = numberArray[0].quantity.length\r\n            return numberArray;\r\n        },\r\n        submitActionProb(stat) {\r\n            //alert(stat);\r\n            var acc = \"\";\r\n            if (stat < 2) {\r\n                acc = \"review\";\r\n            } else {\r\n                acc = \"approve\";\r\n            }\r\n            let text = \"Are you sure you want to \" + acc + \" the IPCR Target?\";\r\n            // alert(\"/ipcrtargets/\" + ipcr_id + \"/\"+ this.id+\"/delete\")\r\n            if (confirm(text) == true) {\r\n                this.$inertia.post(\"/review/approve/\" + stat + \"/\" + this.emp_sem_id + \"/probationary\");\r\n            }\r\n            this.hideModal2();\r\n        },\r\n        showModalDaily() {\r\n            this.displayModalDaily = true;\r\n        },\r\n        showModal3() {\r\n            // alert(\"empl_id: \" + this.empl_id + \" id: \" + this.id_accomp_selected + \" e_sem: \" + this.emp_sem);\r\n\r\n            if (this.emp_sem === \"1\" || this.emp_sem === \"2\") {\r\n                this.form.type = \"ipcr_semestrals\";\r\n            } else {\r\n                this.form.type = \"probationary/temporary\"\r\n            }\r\n            this.form.ipcr_semestral_id = this.emp_sem_id\r\n            this.form.employee_code = this.empl_id\r\n            this.hideModal2()\r\n            this.hideModal()\r\n            this.hideModalDaily()\r\n            // alert(\"ipcr_semestral_id: \" + this.form.ipcr_semestral_id +\r\n            //     \" ipcr_semestral_id: \" + this.form.ipcr_semestral_id +\r\n            //     \" ipcr_semestral_id: \" + this.form.ipcr_semestral_id)\r\n            this.displayModal3 = true\r\n        },\r\n        hideModal3() {\r\n            this.displayModal3 = false;\r\n        },\r\n        hideModalDaily() {\r\n            this.displayModalDaily = false;\r\n        },\r\n        submitReturnReason() {\r\n            alert(\"Type: \" + this.form.type + \"; ipcr_semestral_id: \" +\r\n                this.form.ipcr_semestral_id + \"; employee_code: \" +\r\n                this.form.employee_code + \"; remarks: \" +\r\n                this.form.remarks)\r\n            let text = \"Are you sure you want to return this IPCR?\";\r\n\r\n            if (confirm(text) == true) {\r\n                if (this.form.remarks) {\r\n                    //this.$inertia.post(\"/return/remarks\" + id+\"/\"+this.idmfo);\r\n                    this.form.post(\"/return/accomplishments/remarks\", this.form);\r\n                } else {\r\n                    alert(\"Input remarks!\")\r\n                }\r\n            }\r\n            this.hideModal()\r\n            this.hideModal2()\r\n            this.cancelReason()\r\n\r\n        },\r\n        cancelReason() {\r\n            this.hideModal3()\r\n            this.form.remarks = \"\";\r\n            this.form.type = \"\";\r\n            this.form.ipcr_semestral_id = \"\";\r\n            this.form.employee_code = \"\";\r\n        },\r\n        QuantityRate(id, quantity, target) {\r\n            var result;\r\n            if (id == 1) {\r\n                var total = quantity / target * 100\r\n                if (total >= 130) {\r\n                    result = \"5\"\r\n                } else if (total <= 129 && total >= 115) {\r\n                    result = \"4\"\r\n                } else if (total <= 114 && total >= 90) {\r\n                    result = \"3\"\r\n                } else if (total <= 89 && total >= 51) {\r\n                    result = \"2\"\r\n                } else if (total <= 50) {\r\n                    result = \"1\"\r\n                } else\r\n                    result = \"\"\r\n            } else if (id == 2) {\r\n                if (total = 100) {\r\n                    result = 5\r\n                } else {\r\n                    result = 2\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        QualityRate(id, quality, total) {\r\n            var result;\r\n            if (id == 1) {\r\n                if (total == 0) {\r\n                    result = \"5\"\r\n                } else if (total >= .01 && total <= 2.99) {\r\n                    result = \"4\"\r\n                } else if (total >= 3 && total <= 4.99) {\r\n                    result = \"3\"\r\n                } else if (total >= 5 && total <= 6.99) {\r\n                    result = \"2\"\r\n                } else if (total >= 7) {\r\n                    result = \"1\"\r\n                }\r\n            } else if (id == 2) {\r\n                if (total == 5) {\r\n                    result = \"5\"\r\n                } else if (total >= 4 && total <= 4.99) {\r\n                    result = \"4\"\r\n                } else if (total >= 3 && total <= 3.99) {\r\n                    result = \"3\"\r\n                } else if (total >= 2 && total <= 2.99) {\r\n                    result = \"2\"\r\n                } else if (total >= 1 && total <= 1.99) {\r\n                    result = \"1\"\r\n                } else {\r\n                    result = \"0\"\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        QuantityType(id) {\r\n            var result;\r\n            if (id == 1) {\r\n                result = \"TO BE RATED\"\r\n            } else {\r\n                result = \"ACCURACY RULE (100%=5,2 if less than 100%)\"\r\n            }\r\n            return result;\r\n        },\r\n        QualityType(id) {\r\n            var result;\r\n            if (id == 1) {\r\n                result = \"NO. OF ERROR\"\r\n            } else if (id == 2) {\r\n                result = \"AVE. FEEDBACK\"\r\n            } else if (id == 3) {\r\n                result = \"NOT TO BE RATED\"\r\n            } else if (id == 4) {\r\n                result = \"ACCURACY RULE\"\r\n            }\r\n            return result;\r\n        },\r\n        AverageRate(QuantityID, QualityID, quantity, target, total, quality) {\r\n            var Quantity = this.QuantityRate(QuantityID, quantity, target)\r\n            var Quality = this.QualityRate(QualityID, quality, total)\r\n            var Timeliness = 0\r\n            var Average = (parseFloat(Quantity) + parseFloat(Quality) + parseFloat(Timeliness)) / 3\r\n            return this.format_number_conv(Average, 2, true)\r\n            // return this.format_number_conv\r\n        },\r\n        getPercentQuantity(total_quantity, monthly_target) {\r\n            var score = 0;\r\n            var my_score = \"\";\r\n            if (monthly_target == 0) {\r\n                my_score = \"0\";\r\n            } else {\r\n                score = total_quantity / monthly_target;\r\n                score = score * 100;\r\n                my_score = this.format_number_conv(score, 2, true);\r\n            }\r\n            return my_score;\r\n        },\r\n        viewDailyAccomplishments(emp_code, mo_val, yval) {\r\n            // alert(this.mo_val);\r\n            //var office_ind = document.getElementById(\"selectOffice\").selectedIndex;\r\n\r\n            // this.office =this.auth.user.office.office;\r\n            // var pg_head = this.functions.DEPTHEAD;\r\n            // var forFFUNCCOD = this.auth.user.office.department_code;\r\n            this.my_link = this.viewlink(emp_code, mo_val, yval);\r\n\r\n            this.showModalDaily();\r\n        },\r\n        viewlink(username, mo_val, yval) {\r\n            //var linkt =\"abcdefghijklo534gdmoivndfigudfhgdyfugdhfugidhfuigdhfiugmccxcxcxzczczxczxczxcxzc5fghjkliuhghghghaaa555l&&&&-\";\r\n            // var date_from =\r\n            var linkt = \"http://\";\r\n            var date_from = new Date(yval, mo_val - 1, 1).toISOString().split('T')[0];\r\n            var date_to = new Date(yval, mo_val, 0).toISOString().split('T')[0];\r\n\r\n            var dateObj = new Date(date_from);\r\n            dateObj.setDate(dateObj.getDate() + 1);\r\n            var nextDay = dateObj.toISOString().split('T')[0];\r\n\r\n            var dateObjTo = new Date(date_to);\r\n            dateObjTo.setDate(dateObjTo.getDate() + 1);\r\n            var nextDayTo = dateObjTo.toISOString().split('T')[0];\r\n\r\n            // console.log('next day: ' + nextDayTo);\r\n            var jasper_ip = this.jasper_ip;\r\n            // var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA%2CSales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2FIPCR%2FDaily_Accomplishment&reportUnit=%2Freports%2FIPCR%2FDaily_Accomplishment%2FIPCR_Daily&standAlone=true&decorate=no&output=pdf';\r\n\r\n            var jasper_link = 'jasperserver/flow.html?pp=u%3DJamshasadid%7Cr%3DManager%7Co%3DEMEA%2CSales%7Cpa1%3DSweden&_flowId=viewReportFlow&_flowId=viewReportFlow&ParentFolderUri=%2Freports%2FIPCR%2FDaily_Accomplishment&reportUnit=%2Freports%2FIPCR%2FDaily_Accomplishment%2FIPCR_Daily&standAlone=true&decorate=no&output=pdf';\r\n            var params = '&username=' + username + '&date_from=' + nextDay + '&date_to=' + nextDayTo;\r\n            // alert(nextDay);\r\n            var linkl = linkt + jasper_ip + jasper_link + params;\r\n            return linkl;\r\n        },\r\n        // accomp.empl_id,\r\n        // accomp.year,\r\n        // accomp.id,\r\n        // accomp.month,\r\n        // accomp.sem,\r\n        // accomp.employee_name,\r\n        // accomp.office,\r\n        // accomp.division,\r\n        // accomp.immediate,\r\n        // accomp.next_higher,\r\n        async showModalMonthly(empl_id, e_year, idsemestral, my_month, sem, employee_name, office, division, immediate, next_higher, e_stat, pos, accomp_id) {\r\n            // /monthly/accomplishments / object / { emp_code } / { semt } / { year } / { ipcr_semestral_id } / { month }\r\n            this.displayModalMonthly = true;\r\n            // let url = '/calculate-total/accomplishments/monthly/' + my_month + '/' + e_year + '/' + empl_id + '/' + idsemestral;\r\n            this.emp_name = employee_name;\r\n            this.imm_id = immediate;\r\n            this.next_id = next_higher;\r\n            this.emp_office = office;\r\n            this.emp_division = division;\r\n            this.emp_sem = sem;\r\n            this.emp_year = e_year;\r\n            this.emp_status = e_stat;\r\n            this.emp_position = pos;\r\n            this.form.ipcr_monthly_accomplishment_id = accomp_id;\r\n            this.id_accomp_selected = accomp_id;\r\n            this.form.employee_code = empl_id;\r\n            this.emp_month = this.getMonthName(my_month);\r\n            let url = '/monthly-details/monthly/accomplishments/object/' + empl_id + '/' + sem + '/' + e_year + '/' + idsemestral + '/' + my_month;\r\n            // alert(empl_id);\r\n            await axios.get(url).then((response) => {\r\n                this.monthly_api = response.data;\r\n                // console.log(this.core_support.ave_core);\r\n            });\r\n            this.core_support = [];\r\n            this.calculateAverageCore()\r\n            // console.log(this.calculateAverageCore())\r\n            this.calculateAverageSupport()\r\n            this.core_support.push({\r\n                ave_core: this.Average_Point_Core,\r\n                ave_support: this.Average_Point_Support\r\n            });\r\n            this.core_support = this.core_support[0];\r\n            console.log(this.core_support)\r\n        },\r\n        hideModalMonthly() {\r\n            this.displayModalMonthly = false;\r\n        },\r\n        toggle(id, i) {\r\n            // alert(this.data.length);\r\n            // for (var x = 0; x < this.data.length; x++) {\r\n            //     this.$('#collapse-b' + x).removeClass('show');\r\n            // }\r\n            const index = this.opened.indexOf(id);\r\n            if (index > -1) {\r\n                // this.opened.splice(index, 1)\r\n            } else {\r\n                this.opened = [];\r\n                this.opened.push(id)\r\n            }\r\n            // alert(this.show);\r\n            setTimeout(() => {\r\n                // alert(this.show);\r\n                for (var t = 0; t < this.data.length; t++) {\r\n                    if (i != t) {\r\n                        this.show[t] = false\r\n                    }\r\n\r\n                }\r\n                this.show[i] = !this.show[i];\r\n            }, 100);\r\n        },\r\n        quality(score, quality_error) {\r\n            var result = 0;\r\n            if (quality_error == 1) {\r\n                result = score;\r\n            } else if (quality_error == 2) {\r\n                result = Math.floor(score, 0)\r\n            } else if (quality_error == 3) {\r\n                result = 0\r\n            } else if (quality_error == 4) {\r\n                result = Math.floor(score, 0)\r\n            }\r\n            return result;\r\n        },\r\n        quality_score(score, quality_error) {\r\n            var result = 0;\r\n            if (quality_error == 1) {\r\n                if (score == 0) {\r\n                    result = 0\r\n                } else if (score >= 0.01 && score <= 1) {\r\n                    result = 1\r\n                } else if (score >= 1.01 && score <= 2) {\r\n                    result = 2\r\n                } else if (score >= 2.01 && score <= 3) {\r\n                    result = 3\r\n                } else if (score >= 3.01 && score <= 4) {\r\n                    result = 4\r\n                } else if (score >= 4.01 && score <= 5) {\r\n                    result = 5\r\n                } else if (score >= 6.01 && score <= 6) {\r\n                    result = 6\r\n                } else if (score >= 6.01 && score <= 7) {\r\n                    result = 7\r\n                } else if (score >= 7.01 && score <= 8) {\r\n                    result = 8\r\n                } else if (score >= 8.01 && score <= 9) {\r\n                    result = 9\r\n                } else if (score >= 9.01 && score <= 10) {\r\n                    result = 10\r\n                } else if (score >= 10.01 && score <= 11) {\r\n                    result = 11\r\n                } else if (score >= 11.01 && score <= 12) {\r\n                    result = 12\r\n                } else if (score >= 12.01 && score <= 13) {\r\n                    result = 13\r\n                } else if (score >= 13.01 && score <= 14) {\r\n                    result = 14\r\n                } else if (score >= 14.01 && score <= 15) {\r\n                    result = 15\r\n                }\r\n            } else if (quality_error == 2) {\r\n                result = Math.floor(score, 0)\r\n            } else if (quality_error == 3) {\r\n                result = 0;\r\n            } else if (quality_error == 4) {\r\n                result = Math.floor(score, 0)\r\n            }\r\n\r\n            return result;\r\n\r\n        },\r\n        QuantityRate(id, quantity, target) {\r\n            var result;\r\n\r\n            if (id == 1) {\r\n                var total = Math.round((quantity / target) * 100)\r\n                if (total >= 130) {\r\n                    result = \"5\"\r\n                } else if (total <= 129 && total >= 115) {\r\n                    result = \"4\"\r\n                } else if (total <= 114 && total >= 90) {\r\n                    result = \"3\"\r\n                } else if (total <= 89 && total >= 51) {\r\n                    result = \"2\"\r\n                } else if (total <= 50) {\r\n                    result = \"1\"\r\n                } else\r\n                    result = \"\"\r\n            } else if (id == 2) {\r\n                var total = Math.round((quantity / target) * 100)\r\n                // alert(total);\r\n                if (total == 100) {\r\n                    result = 5\r\n                } else {\r\n                    // alert(total)\r\n                    result = 2\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        QualityRate(id, total) {\r\n            var result;\r\n            if (id == 1) {\r\n                if (total == 0) {\r\n                    result = \"5\"\r\n                } else if (total >= .01 && total <= 2.99) {\r\n                    result = \"4\"\r\n                } else if (total >= 3 && total <= 4.99) {\r\n                    result = \"3\"\r\n                } else if (total >= 5 && total <= 6.99) {\r\n                    result = \"2\"\r\n                } else if (total >= 7) {\r\n                    result = \"1\"\r\n                }\r\n            } else if (id == 2) {\r\n                if (total == 5) {\r\n                    result = \"5\"\r\n                } else if (total >= 4 && total <= 4.99) {\r\n                    result = \"4\"\r\n                } else if (total >= 3 && total <= 3.99) {\r\n                    result = \"3\"\r\n                } else if (total >= 2 && total <= 2.99) {\r\n                    result = \"2\"\r\n                } else if (total >= 1 && total <= 1.99) {\r\n                    result = \"1\"\r\n                } else {\r\n                    result = \"0\"\r\n                }\r\n            } else if (id == 3) {\r\n                result = \"0\"\r\n            } else if (id == 4) {\r\n                if (total >= 1) {\r\n                    result = \"2\"\r\n                } else {\r\n                    result = \"5\"\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        QuantityType(id) {\r\n            var result;\r\n            if (id == 1) {\r\n                result = \"TO BE RATED\"\r\n            } else {\r\n                result = \"ACCURACY RULE (100%=5,2 if less than 100%)\"\r\n            }\r\n            return result;\r\n        },\r\n        QualityType(id) {\r\n            var result;\r\n            if (id == 1) {\r\n                result = \"NO. OF ERROR\"\r\n            } else if (id == 2) {\r\n                result = \"AVE. FEEDBACK\"\r\n            } else if (id == 3) {\r\n                result = \"NOT TO BE RATED\"\r\n            } else if (id == 4) {\r\n                result = \"ACCURACY RULE\"\r\n            }\r\n            return result;\r\n        },\r\n        AverageRate(QuantityID, QualityID, quantity, target, total, TimeRating, type) {\r\n\r\n            var Quantity = this.QuantityRate(QuantityID, quantity, target)\r\n            var Quality = this.QualityRate(QualityID, total)\r\n            var Timeliness = TimeRating\r\n            var Average = (parseFloat(Quantity) + parseFloat(Quality) + parseFloat(Timeliness)) / 3\r\n\r\n\r\n            return this.format_number_conv(Average, 2, true)\r\n            // return this.format_number_conv\r\n        },\r\n        AverageRating(QuantityRatings, QualityRatings, TimeRatings) {\r\n\r\n            var ratings = [parseFloat(QuantityRatings), parseFloat(QualityRatings), parseFloat(TimeRatings)];\r\n\r\n            var nonZeroRatings = ratings.filter(rating => rating !== 0);\r\n\r\n            if (nonZeroRatings.length === 0) {\r\n                return 0; // or any default value when all ratings are zero\r\n            }\r\n            var average = nonZeroRatings.reduce((sum, rating) => sum + rating, 0) / nonZeroRatings.length;\r\n\r\n            return this.format_number_conv(average, 2, true);\r\n        },\r\n        calculateAverageCore() {\r\n            // AverageRate(dat.quantity_type, dat.quality_error, dat.TotalQuantity, dat.month,\r\n            //     dat.quality_average, dat.ipcr_type)\r\n            let sum = 0;\r\n            let num_of_data = 0;\r\n            let average = 0;\r\n            if (Array.isArray(this.monthly_api)) {\r\n                this.monthly_api.forEach(item => {\r\n                    if (item.ipcr_type === 'Core Function') {\r\n                        var val = this.AverageRating(item.month === \"0\" || item.month === null ?\r\n                            this.QuantityRate(item.quantity_type, item.TotalQuantity, 1) : this.QuantityRate(item.quantity_type, item.TotalQuantity, item.month),\r\n                            this.QualityRate(item.quality_error, item.quality_average),\r\n                            item.TimeRating == \"\" ? 0 : item.TimeRating);\r\n                        // alert(val);\r\n                        num_of_data += 1;\r\n                        sum += parseFloat(val);\r\n                        console.log(sum);\r\n                        average = sum / num_of_data\r\n                    }\r\n                });\r\n            }\r\n            this.Average_Point_Core = average.toFixed(2);\r\n\r\n            return this.Average_Point_Core;\r\n        },\r\n        calculateAverageSupport() {\r\n\r\n            let sum = 0;\r\n            let num_of_data = 0;\r\n            let average = 0;\r\n            if (Array.isArray(this.monthly_api)) {\r\n                this.monthly_api.forEach(item => {\r\n                    if (item.ipcr_type === 'Support Function') {\r\n                        var val = this.AverageRating(item.month === \"0\" || item.month === null ? this.QuantityRate(item.quantity_type, item.TotalQuantity, 1) : this.QuantityRate(item.quantity_type, item.TotalQuantity, item.month), this.QualityRate(item.quality_error, item.quality_average), item.TimeRating == \"\" ? 0 : item.TimeRating);\r\n                        num_of_data += 1;\r\n                        sum += parseFloat(val);\r\n                        average = sum / num_of_data\r\n                    }\r\n                });\r\n            }\r\n            this.Average_Point_Support = average.toFixed(2);\r\n        },\r\n        getAdjectivalScore(Core, Support) {\r\n            var result = 0;\r\n            var result = Math.round((Core + Support) * 100) / 100;\r\n            return result;\r\n        },\r\n        getAdjectivalRating(Score) {\r\n            var result = \"\"\r\n            if (Score >= 4.51 && Score <= 5.00) {\r\n                result = \"Outstanding\"\r\n            } else if (Score >= 3.51 && Score <= 4.50) {\r\n                result = \"Very Satisfactory\"\r\n            } else if (Score >= 2.51 && Score <= 3.50) {\r\n                result = \"Satisfactory\"\r\n            } else if (Score >= 1.51 && Score <= 2.50) {\r\n                result = \"Unsatisfactory\"\r\n            } else if (Score >= 1.00 && Score <= 1.50) {\r\n                result = \"Poor\"\r\n            }\r\n\r\n            return result;\r\n        },\r\n    }\r\n};\r\n</script>\r\n<style>\r\n.row-centered {\r\n    text-align: center;\r\n}\r\n\r\n.col-centered {\r\n    display: inline-block;\r\n    float: none;\r\n    text-align: left;\r\n    margin-right: -4px;\r\n}\r\n\r\n.pos {\r\n    position: top;\r\n    top: 240px;\r\n}\r\n</style>\r\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Index.vue?vue&type=style&index=0&id=0697a6ad&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render } from \"./Index.vue?vue&type=template&id=0697a6ad\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=0697a6ad&lang=css\"\n\nimport exportComponent from \"C:\\\\xampp\\\\htdocs\\\\ipcr77impersonate\\\\ipcr\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div \r\n        id=\"sidebar-wrapper\" \r\n        class=\"sidebar-nav nav navbar-inverse\" \r\n    >\r\n        <div class=\"row\" style=\"width: 380px;\">\r\n            <div class=\"bgc-white\">  \r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLiveLabel\">Filtering</h5>\r\n                    <button type=\"button\" class=\"btn-close\" @click=\"$emit('closeFilter')\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <slot></slot>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        title: String,\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    #sidebar-wrapper {\r\n        width: auto;\r\n        margin-top: -9px;\r\n        z-index: 1000;\r\n        position: fixed;\r\n        right: 250px;\r\n        height: 100%;\r\n        margin-right: -250px;\r\n        overflow-y: auto;\r\n        -webkit-transition: all 0.5s ease;\r\n        -moz-transition: all 0.5s ease;\r\n        -o-transition: all 0.5s ease;\r\n        transition: all 0.5s ease;\r\n    }\r\n</style>\r\n\r\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Filter.vue?vue&type=style&index=0&id=59d90c2b&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render } from \"./Filter.vue?vue&type=template&id=59d90c2b\"\nimport script from \"./Filter.vue?vue&type=script&lang=js\"\nexport * from \"./Filter.vue?vue&type=script&lang=js\"\n\nimport \"./Filter.vue?vue&type=style&index=0&id=59d90c2b&lang=css\"\n\nimport exportComponent from \"C:\\\\xampp\\\\htdocs\\\\ipcr77impersonate\\\\ipcr\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n        <!--\r\n            I intend to recreate a simple pagination [simplePaginate()] for performance purpose\r\n            read https://laravel.com/docs/8.x/pagination#simple-pagination\r\n\r\n            If you think you will not have huge dataset in the future you can use\r\n            the paginate() by uncommenting below and in the actual component.\r\n        -->\r\n\r\n        <!-- <Component\r\n            :is=\"link.url ? 'Link' : 'span'\"\r\n            v-for=\"link in links\"\r\n            :href=\"link.url\"\r\n            v-html=\"link.label\"\r\n            class=\"p-3 text-decoration-none\"\r\n            :class=\"{'text-muted' : !link.url, 'fw-bold' : link.active}\"\r\n        /> -->\r\n        <ul class=\"pagination\">\r\n            <li class=\"page-item\">\r\n                <Link class=\"page-link\" :href=\"prev\" v-if=\"prev\" preserve-scroll>Previous</Link>\r\n                <span class=\"page-link\" :class=\"{ 'text-muted' : !prev }\" v-else >Previous</span>\r\n            </li>\r\n            <li class=\"page-item\">\r\n                <Link class=\"page-link\" :href=\"next\" v-if=\"next\" preserve-scroll>Next</Link>\r\n                <span class=\"page-link\" :class=\"{ 'text-muted' : !next }\" v-else >Next</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        prev: String,\r\n        next: String\r\n    }\r\n}\r\n</script>\r\n\r\n","import { render } from \"./Pagination.vue?vue&type=template&id=6df70320\"\nimport script from \"./Pagination.vue?vue&type=script&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\xampp\\\\htdocs\\\\ipcr77impersonate\\\\ipcr\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"permissions-modal\">\r\n        <div class=\"modal\" tabindex=\"-1\" role=\"dialog\">\r\n            <div class=\"modal-dialog modal-xl\">\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <div class=\"modal-content\" style=\"width: 100% !important; height: 40% !important; \">\r\n                        <div class=\"modal-header\" style=\"background-color:#030014\">\r\n                            <h4 class=\"modal-title\" style=\"color: #ffe819; text-align: center !important;\">\r\n                                <b>PRINT PREVIEW</b>\r\n                            </h4>\r\n                            <button type=\"button\" class=\"btn btn-danger\" style=\"font-weight: bold; color: white\" data-dismiss=\"modal\" aria-label=\"Close\" @click=\"closeModal\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                        <!--<p>Modal body text goes here.</p>\r\n                        <multiselect v-model=\"value\" :options=\"options\" mode=\"tags\"/>-->\r\n                        <slot></slot>\r\n                        </div>\r\n                        <div class=\"modal-footer\" style=\"background-color:#090137\">\r\n                        <!--<button type=\"button\" class=\"btn btn-primary\" @click=\"saveChanges\">Save changes</button>\r\n                        <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeModal\">Close</button>-->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n  </template>\r\n\r\n  <script>\r\n    export default {\r\n      props: {\r\n          //userId: Object,\r\n      },\r\n      data(){\r\n          return{\r\n              //my_id: this.props.userId,\r\n              value: null,\r\n              options: [\r\n                  'Batman',\r\n                  'Robin',\r\n                  'Joker',\r\n                  ],\r\n          }\r\n      },\r\n      mounted(){\r\n\r\n      },\r\n      methods: {\r\n        logU_ID(){\r\n\r\n        },\r\n        closeModal() {\r\n          this.$emit('close-modal-event');\r\n        },\r\n        saveChanges() {\r\n          this.closeModal();\r\n        },\r\n        loadPermissions(){\r\n\r\n        }\r\n      }\r\n    }\r\n  </script>\r\n\r\n  <style scoped>\r\n    /* Override default value of 'none' */\r\n    .modal {\r\n      display: block;\r\n    }\r\n  </style>\r\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./PrintModal.vue?vue&type=style&index=0&id=8ec2bb50&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render } from \"./PrintModal.vue?vue&type=template&id=8ec2bb50&scoped=true\"\nimport script from \"./PrintModal.vue?vue&type=script&lang=js\"\nexport * from \"./PrintModal.vue?vue&type=script&lang=js\"\n\nimport \"./PrintModal.vue?vue&type=style&index=0&id=8ec2bb50&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\xampp\\\\htdocs\\\\ipcr77impersonate\\\\ipcr\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8ec2bb50\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","_createElementVNode","class","type","xmlns","width","height","fill","viewBox","d","style","rowspan","colspan","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","test","_unsupportedIterableToArray","_nonIterableSpread","props","accomplishments","filters","pghead","String","computed","quantityArray","_ref","allArrays","this","ipcr_targets","map","target","JSON","parse","quantity","mergedArray","concat","data","report_link","my_link","displayModal","modal_title","ipcr_accomplishments","core_support","emp_sem_id","emp_name","emp_year","emp_sem","emp_month","emp_status","emp_position","empl_id","imm_id","next_id","emp_office","emp_division","employment_type_descr","displayModal2","displayModal3","displayModalDaily","displayModalMonthly","id_accomp_selected","form","useForm","remarks","ipcr_semestral_id","employee_code","ipcr_monthly_accomplishment_id","search","$props","monthly_api","opened","show","Average_Point_Core","Average_Point_Support","watch","_","debounce","$inertia","get","preserveScroll","preserveState","replace","components","Pagination","Filtering","Modal","Modal2","Modal3","ModalDaily","ModalMonthly","methods","_methods","deleteIPCR","ipcr_id","showCreate","deletePAPS","getToRep","ffunccod","ffunction","MOOE","PS","showModal","my_id","e_name","e_year","e_sem","e_stat","accomp_id","month","position","office","division","immediate","next_higher","idsemestral","_this","_callee","my_month","url","per","_context","getMonthName","axios","response","viewlink1","emp_code","employee_name","sem","year","period","Average_Score","linkl","jasper_ip","ave_core","ave_support","viewlink","params","score","hideModal","hideModal2","submitAction","stat","acc","confirm","myurl","post","hideModalMonthly","clearFormValues","showModal2","_this2","_callee2","_context2","sem_id","error","console","parseQuantity","quantarr","split","Number","submitActionProb","showModalDaily","showModal3","hideModalDaily","hideModal3","submitReturnReason","alert","cancelReason","QuantityRate","result","total","QualityRate","quality","QuantityType","QualityType","AverageRate","QuantityID","QualityID","Quantity","Quality","Average","parseFloat","format_number_conv","getPercentQuantity","total_quantity","monthly_target","my_score","viewDailyAccomplishments","mo_val","yval","_defineProperty","username","date_from","Date","toISOString","date_to","dateObj","setDate","getDate","nextDay","dateObjTo","nextDayTo","pos","_this3","_callee3","_context3","calculateAverageCore","calculateAverageSupport","log","_this4","indexOf","setTimeout","quality_error","Math","floor","round","TimeRating","Timeliness","QuantityRatings","QualityRatings","TimeRatings","nonZeroRatings","filter","rating","average","reduce","sum","_this5","num_of_data","item","ipcr_type","val","AverageRating","quantity_type","TotalQuantity","quality_average","toFixed","_this6","Core","Support","Score","options","locals","_createVNode","_component_Head","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","$data","$event","placeholder","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_createElementBlock","_Fragment","_renderList","accomp","_hoisted_14","_toDisplayString","_ctx","getPeriod","getStatus","a_status","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","onClick","$options","showModalMonthly","_hoisted_19","_hoisted_20","status","_hoisted_21","_hoisted_22","_hoisted_23","_component_Link","href","_hoisted_24","_component_pagination","next_page_url","prev_page_url","current_page","_createBlock","_component_Modal","onCloseModalEvent","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","src","_hoisted_39","autocomplete","_hoisted_40","_hoisted_41","_hoisted_42","_cache","_hoisted_43","_component_Modal2","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","index","key","_hoisted_55","_hoisted_59","ipcr_code","_hoisted_60","individual_output","quant","_hoisted_61","_hoisted_65","_hoisted_66","_hoisted_67","_component_Modal3","_hoisted_68","_hoisted_69","_hoisted_70","_component_ModalDaily","_hoisted_71","_component_ModalMonthly","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","_hoisted_84","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_89","_hoisted_90","_hoisted_91","dat","_hoisted_92","toggle","idIPCR","_hoisted_93","mfo_desc","success_indicator","quality_score","total_quality","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","_hoisted_100","_hoisted_101","_hoisted_102","_hoisted_103","getAdjectivalScore","_hoisted_104","_hoisted_105","_hoisted_106","_hoisted_107","_hoisted_108","getAdjectivalRating","_hoisted_109","_hoisted_110","_hoisted_111","_hoisted_112","_hoisted_113","title","$emit","_renderSlot","$slots","_normalizeClass","tabindex","role","mounted","logU_ID","closeModal","saveChanges","loadPermissions","undefined"],"sourceRoot":""}